<!DOCTYPE html>
<!-- saved from url=(0096)https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-1 -->
<html lang="zh"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>一份不可多得的 TS 学习指南（1.8W字）阿宝哥第一次使用 TypeScript 是在 Angular 2.x 项目中 - 掘金</title><meta data-n-head="ssr" name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, viewport-fit=cover"><meta data-n-head="ssr" name="apple-itunes-app" content="app-id=987739104"><meta data-n-head="ssr" name="theme-color" content="#ffffff"><meta data-n-head="ssr" name="msapplication-TileColor" content="#da532c"><meta data-n-head="ssr" name="msvalidate.01" content="BADCF2429624CB0432BE8924E5343343"><meta data-n-head="ssr" name="google-site-verification" content="NmjYe_Q4CrbogdzvVlZMhhCQFp4CNdc6H5wJuNZLtNI"><meta data-n-head="ssr" vmid="description" name="description" content="阿宝哥第一次使用 TypeScript 是在 Angular 2.x 项目中，那时候 TypeScript 还没有进入大众的视野。然而现在学习 TypeScript 的小伙伴越来越多了，本文阿宝哥将从 16 个方面入手，带你一步步学习 TypeScript，感兴趣的小伙伴不要错…"><meta data-n-head="ssr" vmid="keywords" name="keywords" content="前端,TypeScript中文技术社区,前端开发社区,前端技术交流,前端框架教程,JavaScript 学习资源,CSS 技巧与最佳实践,HTML5 最新动态,前端工程师职业发展,开源前端项目,前端技术趋势"><link data-n-head="ssr" rel="preconnect" href="https://unpkg.byted-static.com/" crossorigin="anonymous"><link data-n-head="ssr" rel="preconnect" href="https://lf3-cdn-tos.bytescm.com/" crossorigin="anonymous"><link data-n-head="ssr" rel="preconnect" href="https://mcs.snssdk.com/" crossorigin="anonymous"><link data-n-head="ssr" rel="preconnect" href="https://i.snssdk.com/" crossorigin="anonymous"><link data-n-head="ssr" rel="dns-prefetch" href="https://lf3-short.ibytedapm.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://lf3-cdn-tos.bytescm.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://api.juejin.cn/"><link data-n-head="ssr" rel="dns-prefetch" href="https://lf-cdn-tos.bytescm.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://unpkg.byted-static.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://p1-juejin.byteimg.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://p3-juejin.byteimg.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://p6-juejin.byteimg.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://p9-juejin.byteimg.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://p1-jj.byteimg.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://p2-jj.byteimg.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://p6-jj.byteimg.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://p9-jj.byteimg.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://mcs.snssdk.com/"><link data-n-head="ssr" rel="dns-prefetch" href="https://i.snssdk.com/"><link data-n-head="ssr" rel="apple-touch-icon" sizes="180x180" href="https://lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/static/favicons/apple-touch-icon.png"><link data-n-head="ssr" rel="icon" type="image/png" sizes="32x32" href="https://lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/static/favicons/favicon-32x32.png"><link data-n-head="ssr" rel="icon" type="image/png" sizes="16x16" href="https://lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/static/favicons/favicon-16x16.png"><link data-n-head="ssr" rel="mask-icon" href="https://lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/static/favicons/safari-pinned-tab.svg" color="#1E80FF"><link data-n-head="ssr" rel="manifest" href="https://lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/static/favicons/site.webmanifest"><link data-n-head="ssr" rel="search" title="掘金" href="https://lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/static/search.xml" type="application/opensearchdescription+xml"><link data-n-head="ssr" rel="stylesheet" href="./ts和js的区别_files/bytedesign.min.css"><link data-n-head="ssr" rel="canonical" href="https://juejin.cn/post/6872111128135073806"><script data-n-head="ssr" type="text/javascript" data-sdk-glue-default="load" src="./ts和js的区别_files/sdk-glue.js.下载"></script><script data-n-head="ssr" type="text/javascript" data-sdk-glue-default="init">
        (function (){
          var options = {
            bdms: {
              aid: 2608,
              paths: [
                '/growth_api/v1/publish_benefit_history',
                '/growth_api/v1/check_in',
                '/growth_api/v1/lottery/draw',
                '/growth_api/v1/lottery/ten_draw',
                '/web_shorten',
                '/user_api/v1/user/get',
                '/interact_api/v1/digg/save',
                '/interact_api/v1/digg/query_page',
                '/interact_api/v1/comment/list',
                '/interact_api/v1/comment/hots',
                '/content_api/v1/article/detail',
                '/user_api/v1/follow/followees',
                '/user_api/v1/follow/followers',
                '/interact_api/v1/follow/tag_list',
                '/recommend_api/v1/article/recommend_cate_feed',
                '/interact_api/v1/comment/publish',
                '/interact_api/v1/reply/publish',
                '/growth_api/v1/get_benefit_page',
                '/growth_api/v1/get_cur_point',
                '/growth_api/v1/ten_draw', 
                '/growth_api/v1/draw',
                '/growth_api/v1/lottery_config/get',
              ]
            },
            verifyCenter: {
              interceptPathList: [
                '/user_api/v1/user/get',
                '/interact_api/v1/digg/save',
                '/interact_api/v1/digg/query_page',
                '/interact_api/v1/comment/list',
                '/interact_api/v1/comment/hots',
                '/content_api/v1/article/detail',
                '/user_api/v1/follow/followees',
                '/user_api/v1/follow/followers',
                '/interact_api/v1/follow/tag_list',
                '/recommend_api/v1/article/recommend_cate_feed',
              ],
              commonOptions: {
                aid: 2608,
                repoId: 56081
              },
              captchaOptions: {
                showMode: 'mask',
              },
            }
          }
        var sdkInfo = {
          bdms: {
            init: function (options) {
              window.bdms.init(options)
            },
            isLoaded: function () {
              return !!window.bdms
            },
            srcList: [
              'https://lf-headquarters-speed.yhgfb-cn-static.com/obj/rc-client-security/web/stable/1.0.0.33/bdms.js',
              'https://lf-c-flwb.bytetos.com/obj/rc-client-security/web/stable/1.0.0.33/bdms.js',
            ],
          },
          verifyCenter: {
            init: function (options) {
              window.TTGCaptcha.init(options);
            },
            isLoaded: function () {
              return !!window.TTGCaptcha;
            },
            srcList: [
              'https://lf-cdn-tos.bytescm.com/obj/rc-verifycenter/sec_sdk_build/4.0.10/captcha/index.js',
              'https://lf-rc1.yhgfb-cn-static.com/obj/rc-verifycenter/sec_sdk_build/4.0.10/captcha/index.js',
            ],
          }
        }
        window._SdkGlueInit(options, sdkInfo)
        })();
        </script><script src="./ts和js的区别_files/bdms.js.下载"></script><script src="./ts和js的区别_files/index.js.下载"></script><script data-n-head="ssr" vmid="slardar" type="text/javascript" crossorigin="anonymous">;(function (w, d, u, b, n, pc, ga, ae, po, s, p, e, t, pp) {pc = 'precollect';ga = 'getAttribute';ae = 'addEventListener';po = 'PerformanceObserver';s = function (m) {p = [].slice.call(arguments);p.push(Date.now(), location.href);(m == pc ? s.p.a : s.q).push(p)};s.q = [];s.p = { a: [] };w[n] = s;e = document.createElement('script');e.src = u + '?bid=' + b + '&globalName=' + n;e.crossOrigin = u.indexOf('sdk-web') > 0 ? 'anonymous' : 'use-credentials';d.getElementsByTagName('head')[0].appendChild(e);if (ae in w) {s.pcErr = function (e) {e = e || w.event;t = e.target || e.srcElement;if (t instanceof Element || t instanceof HTMLElement) {if (t[ga]('integrity')) {w[n](pc, 'sri', t[ga]('href') || t[ga]('src'))} else {w[n](pc, 'st', { tagName: t.tagName, url: t[ga]('href') || t[ga]('src') })}} else {w[n](pc, 'err', e.error || e.message)}};s.pcRej = function (e) {e = e || w.event;w[n](pc, 'err', e.reason || (e.detail && e.detail.reason))};w[ae]('error', s.pcErr, true);w[ae]('unhandledrejection', s.pcRej, true);};if('PerformanceLongTaskTiming' in w) {pp = s.pp = { entries: [] };pp.observer = new PerformanceObserver(function (l) {pp.entries = pp.entries.concat(l.getEntries())});pp.observer.observe({ entryTypes: ['longtask', 'largest-contentful-paint','layout-shift'] })}})(window,document,'https://lf3-short.ibytedapm.com/slardar/fe/sdk-web/browser.cn.js','2608','SlardarWeb')</script><script src="./ts和js的区别_files/browser.cn.js.下载" crossorigin="anonymous"></script><script data-n-head="ssr" type="text/javascript" src="./ts和js的区别_files/imageReport.js.下载"></script><script data-n-head="ssr" type="text/javascript" src="./ts和js的区别_files/bundle-dcf007.js.下载" id="cdn-retry" defer=""></script><link rel="preload" href="./ts和js的区别_files/24ba9b3.js.下载" as="script"><link rel="preload" href="./ts和js的区别_files/235eadc.js.下载" as="script"><link rel="preload" href="./ts和js的区别_files/17d6529.js.下载" as="script"><link rel="preload" href="./ts和js的区别_files/app.017cea4.css" as="style"><link rel="preload" href="./ts和js的区别_files/2675b41.js.下载" as="script"><link rel="preload" href="./ts和js的区别_files/default.291588e.css" as="style"><link rel="preload" href="./ts和js的区别_files/b23e408.js.下载" as="script"><link rel="preload" href="./ts和js的区别_files/65f3008.js.下载" as="script"><link rel="preload" href="./ts和js的区别_files/12.b8a5429.css" as="style"><link rel="preload" href="./ts和js的区别_files/7161742.js.下载" as="script"><link rel="stylesheet" href="./ts和js的区别_files/app.017cea4.css"><link rel="stylesheet" href="./ts和js的区别_files/default.291588e.css"><link rel="stylesheet" href="./ts和js的区别_files/12.b8a5429.css">
  <style>._container_1lxa9_1{display:flex;flex-direction:column;align-items:center;width:100%;transition:all .4s ease-in-out}._container_1lxa9_1 svg{display:block}._second_1lxa9_11{display:flex;align-items:center;position:absolute;height:120px;font-size:40px;transition:opacity .2s ease-in-out}._tips_1lxa9_19{margin-top:18px;transition:opacity .2s ease-in-out;text-align:center;padding:0 8px}._tips_1lxa9_19 span{color:#fd6f8e}._cancelButton_1lxa9_28{width:72px;height:32px;margin-top:24px;color:#fff;background:rgba(255,255,255,.1);border:none;border-radius:8px;cursor:pointer}._stopped_1lxa9_38,._stopped_1lxa9_38 ._tips_1lxa9_19,._stopped_1lxa9_38 ._second_1lxa9_11{opacity:0}._container_2hh0t_1{display:flex;flex-direction:column;padding:16px}._title_2hh0t_6{color:#fff;margin-bottom:12px}._message_2hh0t_10{color:#98a2b3}._buttons_2hh0t_13{display:flex;flex-grow:1;justify-content:flex-end;align-items:flex-end}._buttons_2hh0t_13 button{min-width:80px;height:28px;margin-left:8px;border:none;color:#fff;background:rgba(255,255,255,.1);border-radius:4px;cursor:pointer}._buttons_2hh0t_13 button._primary_2hh0t_29{background:linear-gradient(90deg,#fe1889 0%,#ff5f7d 100%),#f63d68}._container_15hlf_1{width:36px;height:36px;border-radius:36px;cursor:pointer;opacity:1}._container_15hlf_1:hover{opacity:1}._circle_15hlf_11{display:flex;width:36px;height:36px;align-items:center;justify-content:center;border-radius:36px;border:2px solid white}._rect_15hlf_20{width:14px;height:14px;background:#e54136;border-radius:2px}._active_15hlf_26._container_15hlf_1 ._rect_15hlf_20{animation:1.2s infinite alternate _stop-button-animation_15hlf_1}@keyframes _stop-button-animation_15hlf_1{0%{opacity:1}70%{opacity:.7}to{opacity:1}}._container_14o0x_1{display:flex;align-items:center}._stopButton_14o0x_5{transition:all .4s ease-in-out}._timeDisplay_14o0x_8{margin-left:9px;font-size:14px;transition:all .3s ease-in-out}._buttons_14o0x_13{display:flex;margin-left:4px}.mini ._container_14o0x_1{width:64px;height:32px}.mini ._container_14o0x_1._recording_14o0x_21{animation:1.2s infinite alternate _mini-recorder-controller-animation_14o0x_1}.mini ._container_14o0x_1 ._stopButton_14o0x_5{transform:scale(0);width:0;opacity:0}.mini ._container_14o0x_1 ._buttons_14o0x_13{opacity:0}._container_36akj_7{display:flex;align-items:center;justify-content:center;position:fixed;z-index:9999999;width:136px;height:48px;color:#fff;background:linear-gradient(63.44deg,#1d2939 16.72%,#475467 83.39%);border-radius:32px;-webkit-user-select:none;user-select:none;font-size:14px;font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Open Sans,Helvetica Neue,sans-serif;cursor:default;transition:all .3s ease-in-out}._container_36akj_7 *{box-sizing:border-box}._overlay_36akj_27{position:fixed;z-index:9999998;left:0;right:0;top:0;bottom:0;-webkit-user-select:none;user-select:none;transition:all .3s ease-in-out}._overlay_36akj_27._masking_36akj_37{-webkit-user-select:all;user-select:all;-webkit-backdrop-filter:brightness(66%) blur(4px);backdrop-filter:brightness(66%) blur(4px)}._controller_36akj_41{position:absolute;margin-left:8px;opacity:0;transition:all .3s ease-in-out}._countdown_36akj_47{position:absolute;opacity:0;transition:all .5s ease-in-out}._messageBox_36akj_52{position:absolute;left:0;right:0;top:0;bottom:0;opacity:0;pointer-events:none;transition:all .24s ease-in-out}._handleBar_36akj_62{display:flex;flex-wrap:wrap;position:absolute;right:16px;width:24px;height:24px;padding:2px 4px;pointer-events:none;cursor:move;opacity:0;transition:opacity .3s ease-in-out}._handleBar_36akj_62 ._dot_36akj_78{display:flex;align-items:center;justify-content:center;flex-grow:0;flex-shrink:0;width:50%;height:33%}._handleBar_36akj_62 ._dot_36akj_78>div{width:3px;height:3px;border-radius:100%;background:#d9d9d9}._initial_36akj_93._container_36akj_7{opacity:0;transform:translateY(-100px)}._countingDown_36akj_97._container_36akj_7{width:216px;height:268px;border-radius:24px;transition:all .5s ease-in-out}._countingDown_36akj_97._container_36akj_7._center_36akj_103{transform:translate(-40px)}._countingDown_36akj_97._container_36akj_7 ._controller_36akj_41 ::global(._stopButton_36akj_106){transform:translate(200px) scale(7)}._countingDown_36akj_97._container_36akj_7 ._countdown_36akj_47{opacity:1;transform:none}._recording_36akj_113._container_36akj_7{justify-content:flex-start;transition:all .3s ease-in-out}._recording_36akj_113._container_36akj_7 ._controller_36akj_41{opacity:1}._recording_36akj_113._container_36akj_7 ._countdown_36akj_47{transform:scale(.3) translate(-200px,-20px)}._recording_36akj_113._container_36akj_7 ._handleBar_36akj_62{opacity:.5;pointer-events:all}._recording_36akj_113._container_36akj_7 ._handleBar_36akj_62:hover{opacity:1}._mini_36akj_130._container_36akj_7{overflow:hidden;width:64px;height:32px;border-radius:24px;background:linear-gradient(63.44deg,#1d2939 16.72%,#475467 83.39%);transition:all .4s ease-in-out}._mini_36akj_130._container_36akj_7.recording{animation:1.2s infinite alternate _mini-recorder-controller-animation_36akj_1}._mini_36akj_130._container_36akj_7._center_36akj_103{transform:translate(36px)}._mini_36akj_130._container_36akj_7 ._controller_36akj_41{opacity:1}._message_36akj_52._container_36akj_7{width:300px;height:140px;border-radius:24px}._message_36akj_52._container_36akj_7._center_36akj_103{transform:translate(-82px)}._message_36akj_52._container_36akj_7 ._messageBox_36akj_52{opacity:1;pointer-events:all}@keyframes _mini-recorder-controller-animation_36akj_1{0%{background:#f04438}70%{background:#d92d20}to{background:#f04438}}._dragContainer_36akj_170{position:absolute;top:0;left:0;right:0;bottom:0;z-index:9999997}</style><script charset="utf-8" src="./ts和js的区别_files/de00a41.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/471b785.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/8a22af1.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/46f959d.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/89ea211.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/380afeb.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/0.628f5a2.css"><script charset="utf-8" src="./ts和js的区别_files/1ecf200.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/29.9ccface.css"><script charset="utf-8" src="./ts和js的区别_files/67252ae.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/41.e2822bd.css"><script charset="utf-8" src="./ts和js的区别_files/466fbfd.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/56.6c20120.css"><script charset="utf-8" src="./ts和js的区别_files/a2af38a.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/49.814dd70.css"><script charset="utf-8" src="./ts和js的区别_files/3ef1200.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/26.226eb75.css"><script charset="utf-8" src="./ts和js的区别_files/da8b460.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/44.af49dd2.css"><script charset="utf-8" src="./ts和js的区别_files/5bc012e.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/085013d.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/b3c2dcb.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/54.d07dab4.css"><script charset="utf-8" src="./ts和js的区别_files/dee5e5b.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/53.a12b7c3.css"><script charset="utf-8" src="./ts和js的区别_files/fea9ada.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/42.f6517d5.css"><script charset="utf-8" src="./ts和js的区别_files/c7981b8.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/21.7f8b2fc.css"><script charset="utf-8" src="./ts和js的区别_files/0a988f1.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/5acb9bb.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/39.f010777.css"><script charset="utf-8" src="./ts和js的区别_files/d7f8408.js.下载"></script><link rel="preload" as="style" href="./ts和js的区别_files/40.eae763c.css"><script charset="utf-8" src="./ts和js的区别_files/3c78ff3.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/de7916c.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/e17dee8.js.下载"></script><script charset="utf-8" src="./ts和js的区别_files/84181b8.js.下载"></script><script crossorigin="anonymous" src="./ts和js的区别_files/index(1).js.下载"></script><style type="text/css">.medium-zoom-overlay{position:fixed;top:0;right:0;bottom:0;left:0;opacity:0;transition:opacity .3s;will-change:opacity}.medium-zoom--opened .medium-zoom-overlay{cursor:pointer;cursor:zoom-out;opacity:1}.medium-zoom-image{cursor:pointer;cursor:zoom-in;transition:transform .3s cubic-bezier(.2,0,.2,1)!important}.medium-zoom-image--hidden{visibility:hidden}.medium-zoom-image--opened{position:relative;cursor:pointer;cursor:zoom-out;will-change:transform}</style><style class="code-block-extension-style">
.code-block-extension-header{
  display: flex;
  // background-color: inherit;
  user-select: none;
  height:28px;
  align-items: center;
  justify-content: space-between;
  box-shadow: 0px 4px 5px -6px #888888;
  margin-bottom: 3px;
}
.code-block-extension-header.code-block-extension-fold{
  box-shadow: none;
  margin-bottom:0;
}
.code-block-extension-headerLeft, .code-block-extension-headerRight{
  display: flex;
  align-items: center;
}
.code-block-extension-headerLeft{
  margin-left: 10px;
}
.code-block-extension-headerRight{
  margin-right:10px;
}

.code-block-extension-headerLeft > .code-block-extension-foldBtn{
 display:flex;
 align-items: center;
 justify-content: center;
 width: 18px;
 height: 18px;
 filter: invert(0.8);
}
.code-block-extension-headerLeft > .code-block-extension-foldBtn:hover{
  filter: invert(0.5);
  cursor: pointer;
}
.code-block-extension-foldBtn > svg{
  height:100%;
}
.code-block-extension-headerLeft > .code-block-extension-foldBtn.code-block-extension-fold{
  transform: rotate(-90deg);
}
.code-block-extension-lang{
  margin-left: 20px;
  font-size: 12px;
  filter: invert(0.5);
  opacity:0.6;
}

.code-block-extension-copyCodeBtn{
  font-size: 12px;
  filter: invert(0.5);
  margin:0 10px;
  opacity:0.6;
}
.code-block-extension-copyCodeBtn:hover{
  filter: invert(0.7);
  cursor: pointer;
}

pre > code.code-block-extension-fold{
  display: none !important;
}

pre > code.code-block-extension-codeShowNum {
  padding-left: 0 !important;
}



.code-block-extension-lineNumHide.code-block-extension-codeLine:before{
  display: none !important;
}

.code-block-extension-codeLine{
  background-color: inherit;
}
.code-block-extension-codeLine:before{
  content: attr(data-line-num);
  color: gray;
  user-select: none;
  background-color: inherit;
  text-align: center;
  display: inline-block;
  width: 18px;
  padding: 0 10px;
  box-sizing: content-box;
  position: sticky;
  left: 0; 
}

.code-block-extension-lineNumBtnContainer{
  display:flex;
  align-items: center;
}
.code-block-extension-lineNumText{
  filter: invert(0.5);
  font-size: 12px; 
  margin-left:3px;
}
.code-block-extension-lineNumCheckbox::before{
  display: none !important;
}
.copy-code-btn{
  display: none !important;
}
.hljs[lang]::before{
  display: none !important;
}
</style><style>.main-container > .column-view > .recommended-links.main-area{
  margin-top: 1.5rem;
}</style><script src="./ts和js的区别_files/index(2).js.下载"></script><script src="./ts和js的区别_files/collect-base.js.下载" async=""></script><link rel="preload" as="style" href="./ts和js的区别_files/34.7a01821.css"><script charset="utf-8" src="./ts和js的区别_files/d6b3d43.js.下载"></script><script src="./ts和js的区别_files/collect-base.js.下载" async=""></script><script data-n-head="ssr" type="application/ld+json">[{"@context":"https://schema.org","@type":"BlogPosting","mainEntityOfPage":{"@type":"WebPage","@id":"https://juejin.cn/post/6872111128135073806"},"headline":"一份不可多得的 TS 学习指南（1.8W字）","description":"阿宝哥第一次使用 TypeScript 是在 Angular 2.x 项目中，那时候 TypeScript 还没有进入大众的视野。然而现在学习 TypeScript 的小伙伴越来越多了，本文阿宝哥将从 16 个方面入手，带你一步步学习 TypeScript，感兴趣的小伙伴不要错…","image":["https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cb8fe2f21686416fab7a2ac94cfea6e2~tplv-k3u1fbpfcp-zoom-1.image"],"author":{"@type":"Organization","name":"阿宝哥"},"publisher":{"@type":"Organization","name":"掘金","logo":{"@type":"ImageObject","url":"//lf-web-assets.juejin.cn/obj/juejin-web/xitu_juejin_web/e08da34488b114bd4c665ba2fa520a31.svg"}},"datePublished":"2020-09-14T07:04:42+08:00","dateModified":"2020-09-22T08:17:21+08:00"},{"@context":"https://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","name":"稀土掘金","position":1,"item":"https://juejin.cn"},{"@type":"ListItem","name":"前端","position":2,"item":"https://juejin.cn/frontend"},{"@type":"ListItem","name":"文章","position":3}]}]</script><script src="./ts和js的区别_files/index(3).js.下载"></script><style type="text/css">@-webkit-keyframes skeleton-keyframes-data-v-d0b73df6{0%{background-position:0 0}to{background-position:480px 0}}@keyframes skeleton-keyframes-data-v-d0b73df6{0%{background-position:0 0}to{background-position:480px 0}}.collect-popover[data-v-d0b73df6]{position:absolute;left:63px;top:50%;transform:translateY(-50%);height:72px;background:rgba(0,0,0,.8);border-radius:8px;z-index:99999999;padding:12px 25px 12px 20px;box-sizing:border-box;display:none}.collect-popover[data-v-d0b73df6]:hover{cursor:default}.collect-popover.popover-show[data-v-d0b73df6]{display:block}.collect-popover[data-v-d0b73df6]:after{content:"";position:absolute;left:-12px;top:50%;z-index:10;border-width:6px;border-style:solid;border-color:rgba(0,0,0,.8) transparent transparent transparent;transform:translateY(-50%) rotate(90deg)}.collect-popover .title[data-v-d0b73df6]{font-weight:500;font-size:14px;line-height:22px;color:#fff;text-align:left}.collect-popover .sub-title[data-v-d0b73df6]{line-height:22px;margin-top:4px;color:#c2c8d1;font-size:13px;white-space:nowrap}.collect-popover .modify-btn[data-v-d0b73df6]{color:#1e80ff;font-weight:500}.collect-popover .modify-btn[data-v-d0b73df6]:hover{cursor:pointer}</style><style type="text/css">@-webkit-keyframes skeleton-keyframes-data-v-23631f0a{0%{background-position:0 0}to{background-position:480px 0}}@keyframes skeleton-keyframes-data-v-23631f0a{0%{background-position:0 0}to{background-position:480px 0}}div.byte-notification-message[data-v-23631f0a]{top:80px!important}div.byte-notification-message .byte-message--success[data-v-23631f0a],div.byte-notification-message .byte-message--warning[data-v-23631f0a]{border:1px solid #e4e6eb;box-shadow:0 4px 10px rgba(0,0,0,.1)}div.byte-notification-message .byte-message--error .byte-message__icon--error[data-v-23631f0a]{color:var(--juejin-font_danger)}body[data-theme=dark] div.byte-notification-message .byte-message--error[data-v-23631f0a],body[data-theme=dark] div.byte-notification-message .byte-message--info[data-v-23631f0a],body[data-theme=dark] div.byte-notification-message .byte-message--success[data-v-23631f0a],body[data-theme=dark] div.byte-notification-message .byte-message--warning[data-v-23631f0a]{border:1px solid var(--juejin-gray-1-1);box-shadow:0 4px 10px rgba(0,0,0,.1);background-color:var(--juejin-popover)}body[data-theme=dark] .byte-loading[data-v-23631f0a]{background-color:rgba(24,24,24,.1)}div.byte-message[data-v-23631f0a]{box-sizing:border-box;font-size:14px;color:var(--juejin-font-2)}div.byte-message .byte-message__content[data-v-23631f0a]{margin:0}div.byte-message .byte-message__content a[data-v-23631f0a]{color:var(--juejin-brand-1-normal)}div.byte-tooltip[data-v-23631f0a]{padding:12px;border-radius:4px;font-size:12px;line-height:20px}div.byte-tooltip--dark[data-v-23631f0a]{background:var(--juejin-popover);box-shadow:0 4px 8px rgba(0,0,0,.16)}div.byte-tooltip--light[data-v-23631f0a]{background:var(--juejin-popup);color:var(--juejin-font-2)}.byte-tab-nav--active[data-v-23631f0a]:hover,div.byte-tab-nav .byte-tab-nav__item.byte-tab-nav--active[data-v-23631f0a]{color:var(--juejin-font-brand1-normal);font-weight:500}div.byte-tab-nav .byte-tab-nav__item[data-v-23631f0a]:hover{color:var(--juejin-font-brand1-normal);font-weight:400}div.byte-tab-nav div.byte-tab-nav__item[data-v-23631f0a]{color:var(--juejin-font-3)}div .byte-pagination[data-v-23631f0a]{text-align:center}ul .byte-pagination__item[disabled][data-v-23631f0a]{background-color:#fff}ul .byte-pagination__item[data-v-23631f0a]{background-color:#fff;padding:0;margin-left:8px}ul .byte-pagination__item--active[data-v-23631f0a],ul .byte-pagination__item[data-v-23631f0a]:hover{color:#1e80ff;background-color:#eaf2ff}.byte-alert--info[data-v-23631f0a]{background-color:var(--juejin-brand-5-light);border:1px solid var(--juejin-brand-1-normal)}.byte-alert--info .byte-alert__icon[data-v-23631f0a]{color:var(--juejin-brand-1-normal)}.byte-alert--info .byte-alert__title[data-v-23631f0a],.byte-select-dropdown[data-v-23631f0a]{color:var(--juejin-font-1)}.byte-select-dropdown[data-v-23631f0a]{border-color:var(--juejin-gray-2);background-color:var(--juejin-layer-1);box-sizing:border-box;left:1px!important}.byte-select-dropdown[data-v-23631f0a] *{box-sizing:border-box}.byte-select-dropdown .byte-select-option--hover[data-v-23631f0a]{background-color:var(--juejin-gray-1-1)}.byte-select-dropdown .byte-select-option--selected[data-v-23631f0a]{color:var(--juejin-font-brand1-normal)}.byte-date-picker__panel-wrapper[data-v-23631f0a]{color:var(--juejin-font-1);background-color:var(--juejin-layer-1);box-sizing:border-box}.byte-date-picker__panel-wrapper[data-v-23631f0a] *{box-sizing:border-box}.byte-date-picker__panel-wrapper .byte-date-picker__panel-cell--outside[data-v-23631f0a]{color:var(--juejin-font-1);background-color:var(--juejin-layer-1)}.byte-date-picker__panel-wrapper .byte-date-picker__panel-header[data-v-23631f0a]{color:var(--juejin-font-1)}.byte-date-picker__panel-wrapper .byte-date-picker__panel-cell--selected[data-v-23631f0a],.byte-date-picker__panel-wrapper .byte-date-picker__panel-cell--selected[data-v-23631f0a]:hover{color:var(--juejin-font-white);background-color:var(--juejin-brand-1-normal)}.byte-date-picker__panel-wrapper .byte-date-picker__panel-cell--inner[data-v-23631f0a]:hover{color:var(--juejin-font-1);background-color:var(--juejin-gray-1-2)}.byte-menu .byte-menu-item--active[data-v-23631f0a]{font-weight:400}.byte-menu .byte-menu-item--active[data-v-23631f0a],.byte-menu .byte-submenu--active[data-v-23631f0a]{color:var(--juejin-font-brand1-normal)}.byte-menu .byte-menu-item--active .icon path[fill][data-v-23631f0a],.byte-menu .byte-menu-item--active .icon rect[data-v-23631f0a],.byte-menu .byte-submenu--active .icon path[fill][data-v-23631f0a],.byte-menu .byte-submenu--active .icon rect[data-v-23631f0a]{fill:var(--juejin-font-brand1-normal)}.byte-menu .byte-menu-item--active .byte-submenu__title[data-v-23631f0a],.byte-menu .byte-menu-item--active .title[data-v-23631f0a]:not(.fake-menu),.byte-menu .byte-submenu--active .byte-submenu__title[data-v-23631f0a],.byte-menu .byte-submenu--active .title[data-v-23631f0a]:not(.fake-menu){color:var(--juejin-font-brand1-normal)}.byte-menu .byte-menu-item--active .byte-submenu__title .icon path[fill][data-v-23631f0a],.byte-menu .byte-menu-item--active .byte-submenu__title .icon rect[data-v-23631f0a],.byte-menu .byte-menu-item--active .title:not(.fake-menu) .icon path[fill][data-v-23631f0a],.byte-menu .byte-menu-item--active .title:not(.fake-menu) .icon rect[data-v-23631f0a],.byte-menu .byte-submenu--active .byte-submenu__title .icon path[fill][data-v-23631f0a],.byte-menu .byte-submenu--active .byte-submenu__title .icon rect[data-v-23631f0a],.byte-menu .byte-submenu--active .title:not(.fake-menu) .icon path[fill][data-v-23631f0a],.byte-menu .byte-submenu--active .title:not(.fake-menu) .icon rect[data-v-23631f0a]{fill:var(--juejin-font-brand1-normal)}.byte-menu .byte-submenu__title[data-v-23631f0a]{border:none;margin:0 8px}.byte-menu .byte-menu-item[data-v-23631f0a]:hover,.byte-menu .byte-submenu__title[data-v-23631f0a]:hover{color:var(--juejin-font-brand1-normal)}.byte-menu .byte-menu-item:hover .icon path[fill][data-v-23631f0a],.byte-menu .byte-menu-item:hover .icon rect[data-v-23631f0a],.byte-menu .byte-submenu__title:hover .icon path[fill][data-v-23631f0a],.byte-menu .byte-submenu__title:hover .icon rect[data-v-23631f0a]{fill:var(--juejin-font-brand1-normal)}.byte-menu .byte-submenu .byte-menu-item[data-v-23631f0a]:hover,.byte-menu .byte-submenu .byte-submenu__title[data-v-23631f0a]:hover{color:var(--juejin-font-brand1-normal);background-color:#fafafa}.byte-menu .byte-menu-item[data-v-23631f0a],.byte-menu .byte-submenu .item.byte-menu-item[data-v-23631f0a],.byte-menu .byte-submenu .item.byte-submenu__title[data-v-23631f0a]{margin:0 8px;border:none;text-indent:-1px}.byte-menu .byte-menu-item--active[data-v-23631f0a],.byte-menu .byte-submenu .item.byte-menu-item--active[data-v-23631f0a]{font-weight:400;color:var(--juejin-font-brand1-normal);background-color:#e8f3ff;border:none}div.byte-modal .byte-modal__content[data-v-23631f0a]{padding:0;overflow:auto;width:400px;border-radius:4px;background-color:var(--juejin-popup)}div.byte-modal .byte-modal__content .byte-modal__header[data-v-23631f0a]{padding:16px 20px;border-bottom:1px solid #e4e6eb}div.byte-modal .byte-modal__content .byte-modal__body[data-v-23631f0a],div.byte-modal .byte-modal__content .byte-modal__footer[data-v-23631f0a]{padding:0 20px}div.byte-modal .byte-modal__content .byte-modal__footer[data-v-23631f0a]{margin-bottom:16px}div.byte-modal .byte-modal__content .byte-modal-confirm[data-v-23631f0a]{display:flex;flex-direction:column;align-items:center}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__head[data-v-23631f0a]{display:flex;align-items:center;padding:24px 0;margin:0}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__head i[data-v-23631f0a]{height:17.5px;width:17.5px;color:#1e80ff}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__head .byte-modal-confirm__head--title[data-v-23631f0a]{font-weight:500;font-size:16px;line-height:24px;color:var(--juejin-font-2);padding-left:9px;width:auto}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__body[data-v-23631f0a]{font-size:14px;line-height:22px;text-align:center;color:var(--juejin-font-2)}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer[data-v-23631f0a]{padding-top:24px;padding-bottom:32px;margin:0}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer button+button[data-v-23631f0a]{margin-left:12px}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer button[data-v-23631f0a]{padding:0 19px;height:34px}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer .byte-btn--primary[data-v-23631f0a]{background:var(--juejin-brand-1-normal)!important}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer .byte-btn--default[data-v-23631f0a]{background-color:var(--juejin-brand-fill1-normal);color:var(--juejin-font-brand1-normal);border-color:var(--juejin-brand-4-disable)}.byte-drawer__content[data-v-23631f0a]{background-color:var(--juejin-layer-1)}.byte-popover[data-v-23631f0a]{background-color:var(--juejin-popup)}.collection-modal[data-v-23631f0a] .byte-modal__header{display:none}.collection-modal[data-v-23631f0a] .byte-modal__content{padding:0;top:50%;transform:translateY(-50%);border-radius:4px;overflow:visible}@media (max-width:600px){.collection-modal[data-v-23631f0a] .byte-modal__content{width:96%!important}}.collection-modal[data-v-23631f0a] .byte-modal__content .byte-modal__body{padding:20px 24px}.collection-modal .closeIcon[data-v-23631f0a]{position:absolute;top:16px;right:20px;width:18px;height:18px;z-index:11;color:#8a919f}.collection-modal .closeIcon[data-v-23631f0a]:hover{cursor:pointer}.collection-modal .title[data-v-23631f0a]{font-weight:600;font-size:20px;line-height:28px;text-align:center;color:var(--juejin-font-1);margin-bottom:28px}.collection-modal .form[data-v-23631f0a]{padding:0}.collection-modal .form[data-v-23631f0a] .byte-form-item{margin:0 0 16px}.collection-modal .form[data-v-23631f0a] .byte-form-item.label-no .byte-form-item__content{margin-left:0!important;padding-left:0}.collection-modal .form[data-v-23631f0a] .byte-form-item.switch-item{margin-top:-12px}.collection-modal .form[data-v-23631f0a] .byte-form-item.switch-item .byte-form-item__content{line-height:28px}@media (max-width:600px){.collection-modal .form[data-v-23631f0a] .byte-form-item.switch-item .byte-switch{display:flex}}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-form-item__label{line-height:36px;font-size:14px;color:var(--juejin-font-2);padding:0;white-space:nowrap}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-form-item__content{padding-left:4px}.collection-modal .form[data-v-23631f0a] .byte-form-item .suffix{font-weight:600;font-size:12px;line-height:20px;color:#8a919f;display:flex;align-items:center}.collection-modal .form[data-v-23631f0a] .byte-form-item .text-suffix{position:absolute;bottom:4px;right:8px;content:"";font-weight:400;z-index:10}.collection-modal .form[data-v-23631f0a] .byte-form-item .suffix-blue{color:#1e80ff}.collection-modal .form[data-v-23631f0a] .byte-form-item .switch-suffix{font-weight:400;margin-left:6px;display:unset}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper{display:flex;align-items:center}@media (max-width:600px){.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper{margin-right:0}}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper:first-child{margin-bottom:8px}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper .byte-radio__radio-inner{margin-right:0;margin-left:-16px}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper .byte-radio__radio{width:14px;height:14px;border-width:2px;border-style:solid;border-color:#e4e6eb;box-sizing:border-box}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper.byte-radio__wrapper--checked .byte-radio__radio{border-color:#3370ff}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper.byte-radio__wrapper--disabled .byte-radio__radio{background:var(--juejin-background)}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper.byte-radio__wrapper--disabled .byte-radio__radio:after{display:none}.collection-modal .form[data-v-23631f0a] .byte-form-item .radio-item{line-height:24px;padding-left:22px;position:relative;transition:all .3s linear}.collection-modal .form[data-v-23631f0a] .byte-form-item .radio-item:hover:after{position:absolute;left:-5px;top:1px;content:"";background:var(--juejin-gray-2);width:24px;height:24px;border-radius:50%;z-index:-1}@media (max-width:600px){.collection-modal .form[data-v-23631f0a] .byte-form-item .radio-item{display:flex;align-items:center}}.collection-modal .form[data-v-23631f0a] .byte-form-item .radio-item .label{color:var(--juejin-font-2);font-size:14px;margin-right:8px}@media (max-width:600px){.collection-modal .form[data-v-23631f0a] .byte-form-item .radio-item .label{flex:0 0 auto}}.collection-modal .form[data-v-23631f0a] .byte-form-item .radio-item .desc{font-size:13px;color:var(--juejin-font-3)}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-radio__wrapper--disabled .radio-item .label{color:#c2c8d1}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-switch{background-color:unset}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-switch:after{opacity:0}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-switch .byte-switch__inner{margin:0}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-switch .switch-button{height:28px;line-height:26px;padding:0 8px;border:1px solid transparent;font-size:14px;border-radius:4px;color:#1e80ff;font-weight:400}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-switch .switch-unopen{border-color:#1e80ff;background-color:#fff}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-switch .switch-open{background-color:#eaf2ff;border-color:#eaf2ff;display:flex;align-items:center}.collection-modal .form[data-v-23631f0a] .byte-form-item .byte-switch .switch-selected{width:12px;height:12px;margin-right:4px}.collection-modal .input[data-v-23631f0a] .byte-input__input,.collection-modal .input[data-v-23631f0a] .byte-input__textarea{color:var(--juejin-font-1);background:var(--juejin-gray-2)}.collection-modal .input[data-v-23631f0a] .byte-input__input::-moz-placeholder,.collection-modal .input[data-v-23631f0a] .byte-input__textarea::-moz-placeholder{color:var(--juejin-font-3)}.collection-modal .input[data-v-23631f0a] .byte-input__input:-ms-input-placeholder,.collection-modal .input[data-v-23631f0a] .byte-input__textarea:-ms-input-placeholder{color:var(--juejin-font-3)}.collection-modal .input[data-v-23631f0a] .byte-input__input::placeholder,.collection-modal .input[data-v-23631f0a] .byte-input__textarea::placeholder{color:var(--juejin-font-3)}.collection-modal .input[data-v-23631f0a] .byte-input__input:hover,.collection-modal .input[data-v-23631f0a] .byte-input__textarea:hover{background:var(--juejin-gray-2);border-color:var(--juejin-gray-2);box-shadow:none}.collection-modal .input[data-v-23631f0a] .byte-input__input:not([disabled=disabled]):active,.collection-modal .input[data-v-23631f0a] .byte-input__textarea:not([disabled=disabled]):active{background:var(--juejin-layer-1);border-color:var(--juejin-font-brand1-normal);box-shadow:none}.collection-modal .input[data-v-23631f0a] .byte-input__input:focus-within,.collection-modal .input[data-v-23631f0a] .byte-input__textarea:focus-within{background:var(--juejin-layer-1);border-color:var(--juejin-font-brand1-normal);box-shadow:none}.collection-modal .input.input-warning[data-v-23631f0a] .byte-input__input,.collection-modal .input[data-v-23631f0a] .byte-input__textarea{background:var(--juejin-gray-2);border-color:var(--juejin-gray-2)}.collection-modal .input[data-v-23631f0a] .byte-input__textarea{position:relative;padding:5px 12px;height:160px;border-radius:4px;color:var(--juejin-font-2)}.collection-modal .input[data-v-23631f0a] .byte-input__textarea:hover{border-color:var(--juejin-gray-2);background-color:var(--juejin-gray-2)}.collection-modal .input[data-v-23631f0a] .byte-input__textarea:focus-within{background-color:var(--juejin-layer-1);border-color:var(--juejin-font-brand1-normal)}.collection-modal .input[data-v-23631f0a] .byte-input__input{padding-right:50px;background-color:var(--juejin-gray-2);border-color:var(--juejin-gray-2);border-radius:4px;color:var(--juejin-font-2);font-size:14px}.collection-modal .input[data-v-23631f0a] .byte-input__input:hover{background:var(--juejin-gray-2);border-color:var(--juejin-gray-2);box-shadow:none}.collection-modal .input[data-v-23631f0a] .byte-input__input:active{background:var(--juejin-layer-1);border-color:var(--juejin-font-brand1-normal);box-shadow:none}.collection-modal .input[data-v-23631f0a] .byte-input__input:focus-within{background:var(--juejin-layer-1);border-color:var(--juejin-font-brand1-normal);box-shadow:none}.collection-modal .input[data-v-23631f0a] .byte-input__suffix{white-space:nowrap;width:50px;text-align:right;justify-content:flex-end;padding:0 8px}.collection-modal .input[data-v-23631f0a] .error_icon{position:absolute;right:10px;top:10px;display:none}.collection-modal .input[data-v-23631f0a] .suffix{font-weight:600;font-size:12px;line-height:20px;color:#8a919f}.collection-modal .input[data-v-23631f0a] .suffix-red{color:#f64242}.collection-modal .input[data-v-23631f0a] .remove-icon:hover{cursor:pointer}.collection-modal .button_wrapper[data-v-23631f0a]{display:flex;justify-content:flex-end;padding-top:5px}.collection-modal .button_wrapper .button[data-v-23631f0a]{width:88px;height:36px;line-height:34px;text-align:center;box-sizing:border-box;border:1px solid transparent;border-radius:4px;font-size:14px;padding:0}.collection-modal .button_wrapper .button.submit[data-v-23631f0a]{background:var(--juejin-brand-1-normal);color:#fafafa;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:4px}.collection-modal .button_wrapper .button.submit[data-v-23631f0a]:hover{background:var(--juejin-brand-2-hover);cursor:pointer}.collection-modal .button_wrapper .button.submit[data-v-23631f0a]:visited{background:#0060dd}.collection-modal .button_wrapper .button.close[data-v-23631f0a]{color:#1e80ff;background:rgba(30,128,255,.05);border:1px solid rgba(30,128,255,.3);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border-radius:4px}.collection-modal .button_wrapper .button.close[data-v-23631f0a]:hover{cursor:pointer;background:rgba(30,128,255,.1);border:1px solid rgba(30,128,255,.45)}.collection-modal .button_wrapper .button.finished[data-v-23631f0a]{background:var(--juejin-brand-4-disable);border-color:var(--juejin-brand-4-disable);color:#fff}.collection-modal .button_wrapper button+button[data-v-23631f0a]{margin-left:16px}</style><style type="text/css">@-webkit-keyframes skeleton-keyframes-data-v-23fe1cc4{0%{background-position:0 0}to{background-position:480px 0}}@keyframes skeleton-keyframes-data-v-23fe1cc4{0%{background-position:0 0}to{background-position:480px 0}}.common-empty[data-v-23fe1cc4]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-align:center;display:flex;justify-content:center;align-items:center;flex-direction:column}.common-empty[data-v-23fe1cc4]:after{content:"";display:block;height:40px;width:100%}.common-empty .img-empty-wrap[data-v-23fe1cc4]{display:flex;justify-content:center;margin-bottom:8px}.common-empty .img-empty[data-v-23fe1cc4]{display:block;width:180px;height:180px;background-size:cover;background-position:50%;background-repeat:no-repeat}.common-empty .title[data-v-23fe1cc4]{font-size:22px;line-height:32px;font-weight:500;color:var(--juejin-font-brand1-normal);margin-bottom:8px}.common-empty .content-slot-wrap[data-v-23fe1cc4],.common-empty .description[data-v-23fe1cc4]{font-size:16px;font-weight:400;color:var(--juejin-font-3)}.common-empty .description[data-v-23fe1cc4]{line-height:28px}.common-empty .button-default[data-v-23fe1cc4],.common-empty .button-link[data-v-23fe1cc4],.common-empty .button-login[data-v-23fe1cc4]{margin-top:40px;background:var(--juejin-brand-fill1-normal);border:1px solid var(--juejin-brand-stroke1-normal);border-radius:4px;padding:0 20px;height:40px;font-size:16px;box-sizing:border-box;display:flex;justify-content:center;align-items:center;color:var(--juejin-font-brand1-normal)}.common-empty .button-default[data-v-23fe1cc4]:hover,.common-empty .button-link[data-v-23fe1cc4]:hover,.common-empty .button-login[data-v-23fe1cc4]:hover{cursor:pointer;background:var(--juejin-brand-fill2-hover);border-color:var(--juejin-brand-stroke2-hover)}.common-empty .button-default[data-v-23fe1cc4]:active,.common-empty .button-link[data-v-23fe1cc4]:active,.common-empty .button-login[data-v-23fe1cc4]:active{background:var(--juejin-brand-fill3-click);border-color:var(--juejin-brand-stroke3-click)}@media (max-width:600px){.common-empty .title[data-v-23fe1cc4]{font-size:18px}.common-empty .content-slot-wrap[data-v-23fe1cc4],.common-empty .description[data-v-23fe1cc4]{font-size:14px}}</style><style type="text/css">@-webkit-keyframes skeleton-keyframes-data-v-090682e2{0%{background-position:0 0}to{background-position:480px 0}}@keyframes skeleton-keyframes-data-v-090682e2{0%{background-position:0 0}to{background-position:480px 0}}.emoji.old[data-v-090682e2]{transform:scale(.9)}@media (max-width:600px){.web-only[data-v-090682e2]{display:none}}.xitu-skeleton-animated .xitu-skeleton-avatar[data-v-090682e2],.xitu-skeleton-animated .xitu-skeleton-line[data-v-090682e2]{background:linear-gradient(90deg,var(--juejin-layer-loading-start),var(--juejin-layer-loading-end),var(--juejin-layer-loading-start));background-size:480px 480px;-webkit-animation:skeleton-keyframes-data-v-090682e2 .6s linear infinite;animation:skeleton-keyframes-data-v-090682e2 .6s linear infinite}.xitu-skeleton[data-v-090682e2]{width:100%;background-color:var(--juejin-layer-1)}.xitu-skeleton-avatar[data-v-090682e2]{float:left;margin-right:12px;background-color:var(--juejin-gray-1-1);display:block}.xitu-skeleton-avatar-circle[data-v-090682e2]{border-radius:50%}.xitu-skeleton-avatar-square[data-v-090682e2]{border-radius:15%}.xitu-skeleton-item[data-v-090682e2]{padding-bottom:21px;margin-bottom:21px;border-bottom:1px solid var(--juejin-gray-1-1)}.xitu-skeleton-item[data-v-090682e2]:last-child{padding:0;margin:0;border:none}.xitu-skeleton-content[data-v-090682e2]{overflow:hidden;padding:20px}.xitu-skeleton-line[data-v-090682e2]{width:100%;margin-bottom:16px;height:14px}.xitu-skeleton-line[data-v-090682e2]:first-child{width:40%;margin-top:8px}.xitu-skeleton-line[data-v-090682e2]:nth-child(3){width:80%}.xitu-skeleton-line[data-v-090682e2]:last-child{width:60%;margin-bottom:0}</style><style type="text/css">@-webkit-keyframes skeleton-keyframes-data-v-2f646e9c{0%{background-position:0 0}to{background-position:480px 0}}@keyframes skeleton-keyframes-data-v-2f646e9c{0%{background-position:0 0}to{background-position:480px 0}}div.byte-notification-message[data-v-2f646e9c]{top:80px!important}div.byte-notification-message .byte-message--success[data-v-2f646e9c],div.byte-notification-message .byte-message--warning[data-v-2f646e9c]{border:1px solid #e4e6eb;box-shadow:0 4px 10px rgba(0,0,0,.1)}div.byte-notification-message .byte-message--error .byte-message__icon--error[data-v-2f646e9c]{color:var(--juejin-font_danger)}body[data-theme=dark] div.byte-notification-message .byte-message--error[data-v-2f646e9c],body[data-theme=dark] div.byte-notification-message .byte-message--info[data-v-2f646e9c],body[data-theme=dark] div.byte-notification-message .byte-message--success[data-v-2f646e9c],body[data-theme=dark] div.byte-notification-message .byte-message--warning[data-v-2f646e9c]{border:1px solid var(--juejin-gray-1-1);box-shadow:0 4px 10px rgba(0,0,0,.1);background-color:var(--juejin-popover)}body[data-theme=dark] .byte-loading[data-v-2f646e9c]{background-color:rgba(24,24,24,.1)}div.byte-message[data-v-2f646e9c]{box-sizing:border-box;font-size:14px;color:var(--juejin-font-2)}div.byte-message .byte-message__content[data-v-2f646e9c]{margin:0}div.byte-message .byte-message__content a[data-v-2f646e9c]{color:var(--juejin-brand-1-normal)}div.byte-tooltip[data-v-2f646e9c]{padding:12px;border-radius:4px;font-size:12px;line-height:20px}div.byte-tooltip--dark[data-v-2f646e9c]{background:var(--juejin-popover);box-shadow:0 4px 8px rgba(0,0,0,.16)}div.byte-tooltip--light[data-v-2f646e9c]{background:var(--juejin-popup);color:var(--juejin-font-2)}.byte-tab-nav--active[data-v-2f646e9c]:hover,div.byte-tab-nav .byte-tab-nav__item.byte-tab-nav--active[data-v-2f646e9c]{color:var(--juejin-font-brand1-normal);font-weight:500}div.byte-tab-nav .byte-tab-nav__item[data-v-2f646e9c]:hover{color:var(--juejin-font-brand1-normal);font-weight:400}div.byte-tab-nav div.byte-tab-nav__item[data-v-2f646e9c]{color:var(--juejin-font-3)}div .byte-pagination[data-v-2f646e9c]{text-align:center}ul .byte-pagination__item[disabled][data-v-2f646e9c]{background-color:#fff}ul .byte-pagination__item[data-v-2f646e9c]{background-color:#fff;padding:0;margin-left:8px}ul .byte-pagination__item--active[data-v-2f646e9c],ul .byte-pagination__item[data-v-2f646e9c]:hover{color:#1e80ff;background-color:#eaf2ff}.byte-alert--info[data-v-2f646e9c]{background-color:var(--juejin-brand-5-light);border:1px solid var(--juejin-brand-1-normal)}.byte-alert--info .byte-alert__icon[data-v-2f646e9c]{color:var(--juejin-brand-1-normal)}.byte-alert--info .byte-alert__title[data-v-2f646e9c],.byte-select-dropdown[data-v-2f646e9c]{color:var(--juejin-font-1)}.byte-select-dropdown[data-v-2f646e9c]{border-color:var(--juejin-gray-2);background-color:var(--juejin-layer-1);box-sizing:border-box;left:1px!important}.byte-select-dropdown[data-v-2f646e9c] *{box-sizing:border-box}.byte-select-dropdown .byte-select-option--hover[data-v-2f646e9c]{background-color:var(--juejin-gray-1-1)}.byte-select-dropdown .byte-select-option--selected[data-v-2f646e9c]{color:var(--juejin-font-brand1-normal)}.byte-date-picker__panel-wrapper[data-v-2f646e9c]{color:var(--juejin-font-1);background-color:var(--juejin-layer-1);box-sizing:border-box}.byte-date-picker__panel-wrapper[data-v-2f646e9c] *{box-sizing:border-box}.byte-date-picker__panel-wrapper .byte-date-picker__panel-cell--outside[data-v-2f646e9c]{color:var(--juejin-font-1);background-color:var(--juejin-layer-1)}.byte-date-picker__panel-wrapper .byte-date-picker__panel-header[data-v-2f646e9c]{color:var(--juejin-font-1)}.byte-date-picker__panel-wrapper .byte-date-picker__panel-cell--selected[data-v-2f646e9c],.byte-date-picker__panel-wrapper .byte-date-picker__panel-cell--selected[data-v-2f646e9c]:hover{color:var(--juejin-font-white);background-color:var(--juejin-brand-1-normal)}.byte-date-picker__panel-wrapper .byte-date-picker__panel-cell--inner[data-v-2f646e9c]:hover{color:var(--juejin-font-1);background-color:var(--juejin-gray-1-2)}.byte-menu .byte-menu-item--active[data-v-2f646e9c]{font-weight:400}.byte-menu .byte-menu-item--active[data-v-2f646e9c],.byte-menu .byte-submenu--active[data-v-2f646e9c]{color:var(--juejin-font-brand1-normal)}.byte-menu .byte-menu-item--active .icon path[fill][data-v-2f646e9c],.byte-menu .byte-menu-item--active .icon rect[data-v-2f646e9c],.byte-menu .byte-submenu--active .icon path[fill][data-v-2f646e9c],.byte-menu .byte-submenu--active .icon rect[data-v-2f646e9c]{fill:var(--juejin-font-brand1-normal)}.byte-menu .byte-menu-item--active .byte-submenu__title[data-v-2f646e9c],.byte-menu .byte-menu-item--active .title[data-v-2f646e9c]:not(.fake-menu),.byte-menu .byte-submenu--active .byte-submenu__title[data-v-2f646e9c],.byte-menu .byte-submenu--active .title[data-v-2f646e9c]:not(.fake-menu){color:var(--juejin-font-brand1-normal)}.byte-menu .byte-menu-item--active .byte-submenu__title .icon path[fill][data-v-2f646e9c],.byte-menu .byte-menu-item--active .byte-submenu__title .icon rect[data-v-2f646e9c],.byte-menu .byte-menu-item--active .title:not(.fake-menu) .icon path[fill][data-v-2f646e9c],.byte-menu .byte-menu-item--active .title:not(.fake-menu) .icon rect[data-v-2f646e9c],.byte-menu .byte-submenu--active .byte-submenu__title .icon path[fill][data-v-2f646e9c],.byte-menu .byte-submenu--active .byte-submenu__title .icon rect[data-v-2f646e9c],.byte-menu .byte-submenu--active .title:not(.fake-menu) .icon path[fill][data-v-2f646e9c],.byte-menu .byte-submenu--active .title:not(.fake-menu) .icon rect[data-v-2f646e9c]{fill:var(--juejin-font-brand1-normal)}.byte-menu .byte-submenu__title[data-v-2f646e9c]{border:none;margin:0 8px}.byte-menu .byte-menu-item[data-v-2f646e9c]:hover,.byte-menu .byte-submenu__title[data-v-2f646e9c]:hover{color:var(--juejin-font-brand1-normal)}.byte-menu .byte-menu-item:hover .icon path[fill][data-v-2f646e9c],.byte-menu .byte-menu-item:hover .icon rect[data-v-2f646e9c],.byte-menu .byte-submenu__title:hover .icon path[fill][data-v-2f646e9c],.byte-menu .byte-submenu__title:hover .icon rect[data-v-2f646e9c]{fill:var(--juejin-font-brand1-normal)}.byte-menu .byte-submenu .byte-menu-item[data-v-2f646e9c]:hover,.byte-menu .byte-submenu .byte-submenu__title[data-v-2f646e9c]:hover{color:var(--juejin-font-brand1-normal);background-color:#fafafa}.byte-menu .byte-menu-item[data-v-2f646e9c],.byte-menu .byte-submenu .item.byte-menu-item[data-v-2f646e9c],.byte-menu .byte-submenu .item.byte-submenu__title[data-v-2f646e9c]{margin:0 8px;border:none;text-indent:-1px}.byte-menu .byte-menu-item--active[data-v-2f646e9c],.byte-menu .byte-submenu .item.byte-menu-item--active[data-v-2f646e9c]{font-weight:400;color:var(--juejin-font-brand1-normal);background-color:#e8f3ff;border:none}div.byte-modal .byte-modal__content[data-v-2f646e9c]{padding:0;overflow:auto;width:400px;border-radius:4px;background-color:var(--juejin-popup)}div.byte-modal .byte-modal__content .byte-modal__header[data-v-2f646e9c]{padding:16px 20px;border-bottom:1px solid #e4e6eb}div.byte-modal .byte-modal__content .byte-modal__body[data-v-2f646e9c],div.byte-modal .byte-modal__content .byte-modal__footer[data-v-2f646e9c]{padding:0 20px}div.byte-modal .byte-modal__content .byte-modal__footer[data-v-2f646e9c]{margin-bottom:16px}div.byte-modal .byte-modal__content .byte-modal-confirm[data-v-2f646e9c]{display:flex;flex-direction:column;align-items:center}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__head[data-v-2f646e9c]{display:flex;align-items:center;padding:24px 0;margin:0}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__head i[data-v-2f646e9c]{height:17.5px;width:17.5px;color:#1e80ff}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__head .byte-modal-confirm__head--title[data-v-2f646e9c]{font-weight:500;font-size:16px;line-height:24px;color:var(--juejin-font-2);padding-left:9px;width:auto}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__body[data-v-2f646e9c]{font-size:14px;line-height:22px;text-align:center;color:var(--juejin-font-2)}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer[data-v-2f646e9c]{padding-top:24px;padding-bottom:32px;margin:0}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer button+button[data-v-2f646e9c]{margin-left:12px}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer button[data-v-2f646e9c]{padding:0 19px;height:34px}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer .byte-btn--primary[data-v-2f646e9c]{background:var(--juejin-brand-1-normal)!important}div.byte-modal .byte-modal__content .byte-modal-confirm .byte-modal-confirm__footer .byte-btn--default[data-v-2f646e9c]{background-color:var(--juejin-brand-fill1-normal);color:var(--juejin-font-brand1-normal);border-color:var(--juejin-brand-4-disable)}.byte-drawer__content[data-v-2f646e9c]{background-color:var(--juejin-layer-1)}.byte-popover[data-v-2f646e9c]{background-color:var(--juejin-popup)}.collection-list-modal .checkbox-icon[data-v-2f646e9c]{margin-right:0;line-height:14px}.collection-list-modal .checkbox-icon.byte-checkbox__wrapper--indeterminate[data-v-2f646e9c] .byte-checkbox__checkbox-inner .byte-checkbox__checkbox{border:none}.collection-list-modal .checkbox-icon.byte-checkbox__wrapper--indeterminate[data-v-2f646e9c] .byte-checkbox__checkbox-inner .byte-checkbox__checkbox:after{height:6px;width:4px;left:4px;top:2px}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner{width:14px;height:14px}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner input[type=checkbox]:checked+.byte-checkbox__checkbox:after{height:6px;width:3px;left:3px;top:0}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner .byte-checkbox__checkbox{width:14px;height:14px;border:2px solid #c2c8d1;box-sizing:border-box}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner input[type=checkbox]:checked+.byte-checkbox__checkbox{border:2px solid #1d7dfa}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner{width:16px;height:16px;transition:all .3s linear}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner:hover:before{content:"";position:absolute;left:-5px;top:-5px;background:var(--juejin-gray-2);width:26px;height:26px;z-index:-2;border-radius:50%}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner .byte-checkbox__checkbox{width:100%;height:100%;border:2px solid var(--juejin-layer-loading-end);background-color:var(--juejin-popup)}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner input[type=checkbox]:checked+.byte-checkbox__checkbox{background-color:var(--juejin-brand-1-normal)}.collection-list-modal .checkbox-icon[data-v-2f646e9c] .byte-checkbox__checkbox-inner input[type=checkbox]:checked+.byte-checkbox__checkbox:after{height:8px;left:4px;border-color:var(--juejin-popup)}.collection-list-modal.collection-list-modal-hide[data-v-2f646e9c]{opacity:0}.collection-list-modal .modal-wrap[data-v-2f646e9c]{padding:20px 0}.collection-list-modal .modal-wrap[data-v-2f646e9c] .xitu-skeleton{background-color:var(--juejin-popup)}.collection-list-modal[data-v-2f646e9c] .byte-modal__header{display:none}.collection-list-modal[data-v-2f646e9c] .byte-modal__content{padding:0;top:50%;transform:translateY(-50%);border-radius:4px;overflow:visible}@media (max-width:600px){.collection-list-modal[data-v-2f646e9c] .byte-modal__content{width:96%!important}}.collection-list-modal[data-v-2f646e9c] .byte-modal__content .byte-modal__body{padding:0}.collection-list-modal .closeIcon[data-v-2f646e9c]{position:absolute;top:16px;right:20px;width:18px;height:18px;z-index:11;color:#8a919f}.collection-list-modal .closeIcon[data-v-2f646e9c]:hover{cursor:pointer}.collection-list-modal .title[data-v-2f646e9c]{font-weight:600;font-size:20px;line-height:28px;text-align:center;color:var(--juejin-font-1)}.collection-list-modal .sub-title[data-v-2f646e9c]{color:var(--juejin-font-3);font-size:12px;line-height:20px;text-align:center;margin:4px 0 8px}.collection-list-modal .list[data-v-2f646e9c]{height:330px;overflow:auto}.collection-list-modal .list .list-item[data-v-2f646e9c]{margin:0 24px;padding:12px 0;box-sizing:border-box;display:flex;align-items:center;justify-content:space-between;position:relative}.collection-list-modal .list .list-item[data-v-2f646e9c]:after{display:inline-block;position:absolute;bottom:0;left:0;right:0;height:1px;content:" ";background:var(--juejin-gray-1-1)}@media (-webkit-min-device-pixel-ratio:2){.collection-list-modal .list .list-item[data-v-2f646e9c]:after{transform:scaleY(.5)}}@media (-webkit-min-device-pixel-ratio:3){.collection-list-modal .list .list-item[data-v-2f646e9c]:after{transform:scaleY(.333)}}.collection-list-modal .list .list-item[data-v-2f646e9c]:hover{cursor:pointer}.collection-list-modal .list .list-item[data-v-2f646e9c]:last-child:after{display:none}.collection-list-modal .list .item-left[data-v-2f646e9c]{flex:1}.collection-list-modal .list .item-right[data-v-2f646e9c]{flex:0 0 auto;margin-left:20px}.collection-list-modal .list[data-v-2f646e9c]::-webkit-scrollbar{width:4px;background:var(--juejin-popup)}.collection-list-modal .list[data-v-2f646e9c]::-webkit-scrollbar-thumb{border-radius:4px;background:var(--juejin-gray-1-1)}.collection-list-modal .title-box[data-v-2f646e9c]{line-height:24px;display:flex;align-items:center}.collection-list-modal .title-box .name[data-v-2f646e9c]{color:var(--juejin-font-1);font-weight:500;font-size:16px}.collection-list-modal .message-box[data-v-2f646e9c]{font-size:13px;line-height:22px;margin-top:8px;color:var(--juejin-font-3)}.collection-list-modal .permission-icon[data-v-2f646e9c]{margin-left:4px}.collection-list-modal .tag-default[data-v-2f646e9c]{font-size:12px;border-radius:2px;padding:0 6px;height:20px;line-height:20px;color:var(--juejin-brand-1-normal);background:var(--juejin-brand-5-light);margin-left:4px}.collection-list-modal .add-collection[data-v-2f646e9c]{display:flex;align-items:center;color:#1e80ff;font-size:14px}.collection-list-modal .add-collection[data-v-2f646e9c]:hover{cursor:pointer}.collection-list-modal .add-collection .add-icon[data-v-2f646e9c]{width:10px;height:10px;margin-right:5px}.collection-list-modal .footer-wrap[data-v-2f646e9c]{padding:20px 24px 0;display:flex;justify-content:space-between}.collection-list-modal .footer-wrap .confirm-btn[data-v-2f646e9c]{background:var(--juejin-brand-1-normal);color:#fafafa;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:88px;height:36px;line-height:36px;text-align:center;border-radius:4px;font-size:14px}.collection-list-modal .footer-wrap .confirm-btn[data-v-2f646e9c]:hover{background:var(--juejin-brand-2-hover);cursor:pointer}.collection-list-modal .footer-wrap .confirm-btn[data-v-2f646e9c]:visited{background:#0060dd}</style><style type="text/css">.sprite-icon[data-v-6e70c50a]{width:1em;height:1em;fill:currentColor;vertical-align:middle;transition:all .15s linear}</style><style type="text/css">@-webkit-keyframes skeleton-keyframes-data-v-67be6428{0%{background-position:0 0}to{background-position:480px 0}}@keyframes skeleton-keyframes-data-v-67be6428{0%{background-position:0 0}to{background-position:480px 0}}.tooltip[data-v-67be6428]{display:block;font-size:0}.tooltip[data-v-67be6428] .byte-tooltip__wrapper{display:inline-block}.article-suspended-panel[data-v-67be6428]{position:fixed;margin-left:-7rem;top:140px;z-index:2}@media (max-width:600px){.article-suspended-panel[data-v-67be6428]{display:none}}.article-suspended-panel.dynamic-data-ready .panel-btn:not(.share-btn).active .sprite-icon[data-v-67be6428]{color:var(--juejin-brand-1-normal)}.article-suspended-panel.dynamic-data-ready .panel-btn:not(.share-btn).active .sprite-icon.icon-collect[data-v-67be6428]{color:#ffb800}.article-suspended-panel.dynamic-data-ready .panel-btn:not(.share-btn).active.with-badge[data-v-67be6428]:after{background-color:var(--juejin-brand-1-normal)}.article-suspended-panel.dynamic-data-ready .panel-btn.with-badge[data-v-67be6428]:after{content:attr(badge);position:absolute;top:0;left:75%;height:17px;line-height:17px;padding:0 5px;border-radius:9px;font-size:11px;text-align:center;white-space:nowrap;background-color:var(--juejin-font-4);color:#fff}.article-suspended-panel .panel-btn[data-v-67be6428]{position:relative;margin-bottom:1.667rem;width:4rem;height:4rem;background-color:var(--juejin-layer-5);background-position:50%;background-repeat:no-repeat;border-radius:50%;box-shadow:0 2px 4px 0 rgba(50,50,50,.04);cursor:pointer;text-align:center;font-size:1.67rem}.article-suspended-panel .panel-btn .sprite-icon[data-v-67be6428]{color:var(--juejin-font-3);height:100%}.article-suspended-panel .panel-btn:hover .sprite-icon[data-v-67be6428]{color:var(--juejin-font-2)}.article-suspended-panel .panel-btn.share-btn[data-v-67be6428]:after{display:block;content:" ";position:absolute;width:100%;height:100%;top:0;left:50%}.article-suspended-panel .panel-btn.share-btn:hover .share-popup[data-v-67be6428]{display:flex}.article-suspended-panel .panel-btn.share-btn .share-popup[data-v-67be6428]{display:none;position:absolute;top:0;flex-direction:column;left:calc(100% + 14px);z-index:30;background:var(--juejin-layer-1);border-radius:4px;padding:9px 0;width:-webkit-max-content;width:-moz-max-content;width:max-content;box-shadow:0 8px 24px rgba(81,87,103,.16)}.article-suspended-panel .panel-btn.share-btn .share-popup[data-v-67be6428]:after{position:absolute;width:0;height:0;content:" ";right:100%;top:14px;border-left:12px solid transparent;border-top:12px solid transparent;border-bottom:12px solid transparent;border-right:12px solid var(--juejin-layer-1)}.article-suspended-panel .panel-btn.share-btn .share-popup .share-item[data-v-67be6428]{display:flex;align-items:center;height:44px;padding:0 15px}.article-suspended-panel .panel-btn.share-btn .share-popup .share-item[data-v-67be6428]:hover{background-color:var(--juejin-layer-3-fill)}.article-suspended-panel .panel-btn.share-btn .share-popup .share-item:hover.wechat .wechat-qrcode[data-v-67be6428]{display:flex}.article-suspended-panel .panel-btn.share-btn .share-popup .share-item:hover .share-icon[data-v-67be6428]{color:var(--juejin-font-2)}.article-suspended-panel .panel-btn.share-btn .share-popup .share-item .share-item-title[data-v-67be6428]{margin-left:8px;font-size:14px;color:var(--juejin-font-2)}.article-suspended-panel .panel-btn.share-btn .share-popup .share-item .share-icon[data-v-67be6428]{color:#8a919f;width:20px;height:20px;font-size:1.67rem}.article-suspended-panel .panel-btn.author .avatar[data-v-67be6428]{cursor:pointer;width:48px;height:48px;display:flex;position:relative}.article-suspended-panel .panel-btn.author .follow-area[data-v-67be6428]{cursor:pointer;padding:0 3px 3px 3px;position:absolute;bottom:-9px;left:50%;transition:tr;transform:translateX(-50%)}.article-suspended-panel .panel-btn.author .follow-area .follow-text[data-v-67be6428]{text-align:center;font-size:10px;font-style:normal;font-weight:400;line-height:10px;display:flex;width:32px;white-space:nowrap}.article-suspended-panel .panel-btn.author .follow-area .follow-success[data-v-67be6428],.article-suspended-panel .panel-btn.author .follow-area .follow-text[data-v-67be6428]{color:var(--juejin-font-white);border-radius:100px;background:var(--juejin-brand-1-normal);justify-content:center;align-items:center;height:16px}.article-suspended-panel .panel-btn.author .follow-area .follow-success[data-v-67be6428]{display:none;font-size:12px;width:16px}.article-suspended-panel .panel-btn.author .follow-area.user-action .follow-success[data-v-67be6428]{display:flex}.share-title[data-v-67be6428]{margin:2.5rem 0 1rem 0;font-size:1rem;text-align:center;color:#c6c6c6;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.wechat-qrcode[data-v-67be6428]{display:none;flex-direction:column;align-items:center;position:absolute;top:0;left:calc(100% + 8px);border-radius:4px;background-color:var(--juejin-layer-4-dropdown);padding:20px 0 16px;box-shadow:0 8px 24px rgba(81,87,103,.16);width:120px}.wechat-qrcode .wechat-qrcode-img[data-v-67be6428]{width:80px;height:80px}.wechat-qrcode .wechat-qrcode-title[data-v-67be6428]{font-size:14px;line-height:22px;color:var(--juejin-font-2);margin-top:12px}.guide-collect-popover[data-v-67be6428]{width:200px;box-sizing:border-box;background-color:var(--juejin-popover);padding:12px 20px;border-radius:8px;font-size:13px;color:var(--juejin-font-3);line-height:22px;text-align:left;position:absolute;left:4rem;top:-10px;margin-left:15px;box-shadow:0 8px 24px rgba(81,87,103,.26);cursor:default}.guide-collect-popover[data-v-67be6428]:after{content:"";display:block;width:0;height:0;border-top:12px solid var(--juejin-popover);border-left:12px solid var(--juejin-popover);transform:rotate(45deg);position:absolute;top:30px;left:-6px}.guide-collect-popover-title[data-v-67be6428]{color:var(--juejin-font-white);font-weight:500;font-size:14px;margin-bottom:4px}.guide-collect-popover-content[data-v-67be6428]{display:flex;flex-direction:row}.guide-collect-popover-button[data-v-67be6428]{color:var(--juejin-brand-1-normal);font-weight:500;cursor:pointer;margin-right:4px}.guide-collect-popover-text[data-v-67be6428]{color:var(--juejin-font-4)}.guide-collect-popover-close[data-v-67be6428]{cursor:pointer;width:1.3rem;height:1.3rem;position:absolute;top:1rem;right:1rem;transform:rotate(45deg)}.guide-collect-popover-close[data-v-67be6428]:after,.guide-collect-popover-close[data-v-67be6428]:before{content:"";width:1rem;height:2px;display:block;position:absolute;background:var(--juejin-font-3);left:50%;top:50%;transform:translate(-50%,-50%)}.guide-collect-popover-close[data-v-67be6428]:after{transform:translate(-50%,-50%) rotate(90deg)}</style><script src="./ts和js的区别_files/common-monitors.1.14.1.js.下载" crossorigin="anonymous"></script><script src="./ts和js的区别_files/common-monitors.1.1.6.js.下载" crossorigin="anonymous"></script><script src="./ts和js的区别_files/blank-screen.1.1.6.js.下载" crossorigin="anonymous"></script></head>
  <body data-theme="light">
    <script data-n-head="ssr" type="text/javascript" data-pbody="true">(function () {
    const pages = [
        /^\/$/,
        /^\/following$/,
        /^\/recommended$/,
        '^/pins.*',
        '^/pin.*',
        /^\/course(?!\/payment\/)/,
        /^\/post\/.*/,
        '^/hot.*',
        /^\/book\/\d+/,
        /^\/video\/\d+/,
        /^\/user\/settings.*/,
        /^\/spost\/\d+/,
        /^\/notification(?!\/im)/,
        '^/backend',
        '^/frontend',
        '^/android',
        '^/ios',
        '^/ai',
        '^/freebie',
        '^/career',
        '^/article',
        '^/player',
    ];
    function isInJuejinApp() {
        const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent : '';
        return /juejin/i.test(userAgent);
    }
    if (typeof window !== 'undefined' && !isInJuejinApp()) {
        try {
            const path = window.location.pathname;
            const isAvailable = pages.some((page) => {
                const reg = new RegExp(page);
                return reg.test(path);
            });
            if (isAvailable) {
                const localValue = localStorage.getItem('juejin_2608_theme') || '{}';
                let { theme = 'light', isFollowSystem = false } = JSON.parse(localValue);
                if (isFollowSystem) {
                    const themeMedia = window.matchMedia('(prefers-color-scheme: light)');
                    theme = themeMedia.matches ? 'light' : 'dark';
                    localStorage.setItem('juejin_2608_theme', JSON.stringify({ theme, isFollowSystem }));
                }
                document.body.setAttribute('data-theme', theme);
            }
            else {
                document.body.setAttribute('data-theme', 'light');
            }
        }
        catch (e) {
            console.error('浏览器不支持localStorage');
        }
    }
})()</script><div id="__nuxt"><div id="__layout"><div id="juejin"><div class="view-container" data-v-cd15ceae="" data-v-3a7d5dfe=""><div class="main-header-box" data-v-cd15ceae=""><header data-fetch-key="0" class="main-header main-header" data-v-05c85cd5="" data-v-cd15ceae=""><div class="container" data-v-05c85cd5=""><a href="https://juejin.cn/" class="logo" data-v-05c85cd5=""><img src="./ts和js的区别_files/e08da34488b114bd4c665ba2fa520a31.svg" alt="稀土掘金" class="logo-img" data-v-05c85cd5=""> <img src="./ts和js的区别_files/6c61ae65d1c41ae8221a670fa32d05aa.svg" alt="稀土掘金" class="mobile" data-v-05c85cd5=""></a> <!----> <nav role="navigation" class="main-nav" data-v-05c85cd5=""><ul class="nav-list" data-v-05c85cd5=""><!----> <li class="main-nav-list" data-v-05c85cd5=""><div class="phone-show-menu isResourceVisible" data-v-05c85cd5=""><span data-v-05c85cd5="">首页</span> <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class="unfold16-icon" data-v-05c85cd5=""><path d="M2.45025 4.82431C2.17422 4.49957 2.40501 4.00049 2.83122 4.00049H9.16878C9.59498 4.00049 9.82578 4.49957 9.54975 4.82431L6.38097 8.55229C6.1813 8.78719 5.8187 8.78719 5.61903 8.55229L2.45025 4.82431Z" data-v-05c85cd5=""></path></svg></div> <ul class="phone-hide isResourceVisible" data-v-05c85cd5=""><li class="nav-item link-item" data-v-05c85cd5=""><a href="https://juejin.cn/" data-v-05c85cd5="">首页</a></li> <li class="nav-item link-item bots" data-v-05c85cd5=""><a href="https://juejin.cn/bots" data-v-05c85cd5="">
                BOT
                <span class="text" data-v-05c85cd5=""></span></a></li> <li class="nav-item link-item activities" data-v-05c85cd5=""><a href="https://juejin.cn/pins" data-v-05c85cd5="">
                沸点
                <span class="text" data-v-05c85cd5=""></span></a></li> <li class="nav-item link-item book" data-v-05c85cd5=""><a href="https://juejin.cn/course" data-v-05c85cd5="">
                课程
                </a></li> <li class="nav-item link-item" data-v-05c85cd5=""><a href="https://juejin.cn/live" data-v-05c85cd5="">
                直播
              </a></li> <li class="nav-item link-item" data-v-05c85cd5=""><a href="https://juejin.cn/events/all" data-v-05c85cd5="">活动</a></li> <li class="nav-item link-item" data-v-05c85cd5=""><a href="https://juejin.cn/problemset" data-v-05c85cd5="">AI刷题</a> <span class="new-font" data-v-05c85cd5="">NEW</span></li> <nav class="nav-item link-item" data-v-05c85cd5=""><a href="https://detail.youzan.com/show/goods/newest?kdt_id=104340304" target="_blank" rel="nofollow noopener noreferrer" class="jj-link nav-item link-item no-border" data-v-65b50b51="" data-v-05c85cd5=""><span data-v-65b50b51="" data-v-05c85cd5="">商城</span></a> <!----></nav> <nav class="nav-item link-item download-icon isResourceVisible" data-v-05c85cd5=""><a href="https://juejin.cn/app?utm_source=jj_nav" target="_blank" class="download-app no-border" data-v-05c85cd5="">
                APP
              </a></nav> <nav class="nav-item link-item extension-icon" data-v-05c85cd5=""><a href="https://juejin.cn/extension?utm_source=jj_nav" target="_blank" rel="nofollow noopener noreferrer" class="jj-link broswer-extension no-border isResourceVisible" data-v-65b50b51="" data-v-05c85cd5=""><span data-v-65b50b51="" data-v-05c85cd5="">插件</span></a></nav> <li data-v-05c85cd5="" tag="li" class="nav-item link-item special-activity-item"><a data-v-05c85cd5="" target="_blank" href="https://juejin.cn/user/center/signin?avatar_menu&amp;utm_source=practice&amp;utm_medium=dailynewtask&amp;utm_campaign=weblan" class="activity no-hover special-activity"><img data-v-5244ef91="" data-v-05c85cd5="" src="./ts和js的区别_files/8363889c3fe5354c2247171d62182944.png~tplv-k3u1fbpfcp-jj_201_0_0_0_q75.avis" alt="image" class="lazy" loading="lazy" style="max-width: 115px; vertical-align: middle;"></a></li></ul></li> <ul class="right-side-nav" data-v-05c85cd5=""><li class="search-add" data-v-05c85cd5=""><ul class="search-add-ul isResourceVisible" data-v-05c85cd5=""><li class="nav-item search" data-v-05c85cd5=""><form role="search" class="search-form isResourceVisible" data-v-05c85cd5=""><input type="search" maxlength="64" placeholder="探索稀土掘金" value="" class="search-input isResourceVisible" data-v-05c85cd5=""> <div class="seach-icon-container" data-v-05c85cd5=""><svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg" class="search-icon" data-v-05c85cd5=""><path d="M12.4008 12.4008C14.744 10.0577 14.744 6.25871 12.4008 3.91556C10.0577 1.57242 6.25871 1.57242 3.91556 3.91556C1.57242 6.25871 1.57242 10.0577 3.91556 12.4008C6.25871 14.744 10.0577 14.744 12.4008 12.4008ZM12.4008 12.4008L15.5828 15.5828" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" data-v-05c85cd5=""></path></svg></div> <!----> <div class="typehead" style="display:none;" data-v-05c85cd5=""><!----> <div class="title" data-v-05c85cd5=""><span data-v-05c85cd5="">搜索历史</span> <span class="clear" data-v-05c85cd5="">
                        清空
                      </span></div> <div class="list" data-v-05c85cd5=""><div data-v-05c85cd5="">
                        ts
                      </div><div data-v-05c85cd5="">
                        js 防抖节流
                      </div><div data-v-05c85cd5="">
                        稀疏数组
                      </div><div data-v-05c85cd5="">
                        js 稀疏数组
                      </div><div data-v-05c85cd5="">
                        js map 实现
                      </div><div data-v-05c85cd5="">
                        JSBridge
                      </div></div></div></form></li> <li class="nav-item add creator-item" data-v-05c85cd5=""><div class="add-group" data-v-17cc1c49="" data-v-05c85cd5=""><!----> <button class="add-btn" data-v-17cc1c49="">
    创作者中心
  </button> <div class="more" data-v-17cc1c49=""><svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class="unfold12-icon" data-v-17cc1c49=""><path d="M2.45025 4.82383C2.17422 4.49908 2.40501 4 2.83122 4H9.16878C9.59499 4 9.82578 4.49908 9.54975 4.82382L6.38097 8.5518C6.1813 8.7867 5.8187 8.7867 5.61903 8.5518L2.45025 4.82383Z" fill="white" data-v-17cc1c49=""></path></svg> <div class="more-mask" data-v-17cc1c49=""></div> <div class="more-list" data-v-17cc1c49=""><ul class="menu" data-v-17cc1c49=""><li class="item" data-v-17cc1c49=""><div class="icon write-article" data-v-17cc1c49=""></div> <div class="title" data-v-17cc1c49="">写文章</div></li><li class="item" data-v-17cc1c49=""><div class="icon issue-points" data-v-17cc1c49=""></div> <div class="title" data-v-17cc1c49="">发沸点</div></li><li class="item" data-v-17cc1c49=""><div class="icon write-note" data-v-17cc1c49=""></div> <div class="title" data-v-17cc1c49="">写笔记</div></li><li class="item" data-v-17cc1c49=""><div class="icon create-jcode" data-v-17cc1c49=""></div> <div class="title" data-v-17cc1c49="">写代码</div></li><li class="item" data-v-17cc1c49=""><div class="icon drafts" data-v-17cc1c49=""></div> <div class="title" data-v-17cc1c49="">草稿箱</div></li></ul> <div class="divider" data-v-17cc1c49=""></div> <div class="inspiration" data-v-17cc1c49=""><div class="info" data-v-17cc1c49=""><span class="title" data-v-17cc1c49="">创作灵感</span> <span class="more-info" data-v-17cc1c49="">
            查看更多
            <i class="icon byte-icon byte-icon--right" data-v-17cc1c49=""><svg t="1561636167146" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="404349" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M630.4 512L283.52 165.12a21.12 21.12 0 0 1 0-30.08l30.08-30.08a21.12 21.12 0 0 1 30.08 0l377.6 376.96a42.24 42.24 0 0 1 0 60.16l-377.6 376.96a21.12 21.12 0 0 1-30.08 0l-30.08-30.08a21.12 21.12 0 0 1 0-30.08z" p-id="404350"></path></svg></i></span></div> <div class="list" data-v-17cc1c49=""><div data-v-17cc1c49="" class="item"><span data-v-17cc1c49="" class="icon icon-activity">活动</span> <span data-v-17cc1c49="" class="title">🌟送矿石了｜豆包MarsCode AI 刷题现已接入掘金社区「每日签到」—&gt;「我的任务」中啦。</span></div><div data-v-17cc1c49="" class="item"><span data-v-17cc1c49="" class="icon icon-activity">活动</span> <span data-v-17cc1c49="" class="title">🔥掘金签约季｜人工智能创作者签约计划</span></div> <div data-v-17cc1c49="" class="item"><span data-v-17cc1c49="" class="icon icon-topic">话题</span> <span data-v-17cc1c49="" class="title topic-title">豆包MarsCode AI练中学</span></div> <div class="item" data-v-21339fef="" data-v-17cc1c49=""></div></div></div></div></div> </div></li></ul></li> <li class="nav-item vip-entry" data-v-05c85cd5=""><div class="vip-title" data-v-05c85cd5=""><div class="vip-entry-img" data-v-05c85cd5=""><img src="./ts和js的区别_files/ffd3e238ee7f46eab42bf88af17f5528~tplv-k3u1fbpfcp-image.image" alt="vip" class="vip-img" data-v-05c85cd5=""> </div> <div class="vip-words" data-v-05c85cd5="">会员</div></div></li> <li data-v-05c85cd5="" class="nav-item notification"><a data-v-05c85cd5="" class="jj-noti-link notification-a" href="https://juejin.cn/notification"><svg data-v-05c85cd5="" width="18" height="21" viewBox="0 0 18 21" fill="none" xmlns="http://www.w3.org/2000/svg" class="notification-icon"><path data-v-05c85cd5="" d="M10.457 2.21484C10.457 1.38642 9.78546 0.714844 8.95703 0.714844C8.1286 0.714844 7.45703 1.38642 7.45703 2.21484V2.69324C6.2566 2.94818 5.19205 3.50792 4.33932 4.34674C3.13874 5.52773 2.41008 7.20991 2.26438 9.23124C2.13761 10.9899 1.87805 12.4178 0.441105 14.4515C-0.126181 15.2544 0.396205 16.4637 1.46658 16.4637H16.5354C17.6058 16.4637 18.1282 15.2544 17.5609 14.4515C16.124 12.4178 15.8644 10.9899 15.7376 9.23124C15.5919 7.20991 14.8633 5.52773 13.6627 4.34674C12.7892 3.48749 11.6934 2.92108 10.457 2.67516V2.21484Z"></path><path data-v-05c85cd5="" d="M6.57422 17.3574C6.41191 17.3574 6.2597 17.4362 6.16599 17.5687C6.07227 17.7012 6.04871 17.871 6.1028 18.024C6.52421 19.2163 7.66123 20.0717 8.99933 20.0717C10.3374 20.0717 11.4745 19.2163 11.8959 18.024C11.9499 17.871 11.9264 17.7012 11.8327 17.5687C11.739 17.4362 11.5868 17.3574 11.4244 17.3574H6.57422Z"></path></svg> <span data-v-05c85cd5="" class="count">
                44
              </span></a> <ul data-v-1ac9f6c6="" data-v-05c85cd5="" class="menu-list notification-dropdown-menu"><li data-v-1ac9f6c6="" class="menu-item"><a data-v-1ac9f6c6="" href="https://juejin.cn/notification" class="item-link"><span data-v-1ac9f6c6="" class="item-name">评论</span> <!----></a></li><li data-v-1ac9f6c6="" class="menu-item"><a data-v-1ac9f6c6="" href="https://juejin.cn/notification/digg" class="item-link"><span data-v-1ac9f6c6="" class="item-name">赞和收藏</span> <!----></a></li><li data-v-1ac9f6c6="" class="menu-item"><a data-v-1ac9f6c6="" href="https://juejin.cn/notification/follow" class="item-link"><span data-v-1ac9f6c6="" class="item-name">新增粉丝</span> <!----></a></li><li data-v-1ac9f6c6="" class="menu-item"><a data-v-1ac9f6c6="" href="https://juejin.cn/notification/im" class="item-link"><span data-v-1ac9f6c6="" class="item-name">私信</span> <!----></a></li><li data-v-1ac9f6c6="" class="menu-item"><a data-v-1ac9f6c6="" href="https://juejin.cn/notification/system" class="item-link"><span data-v-1ac9f6c6="" class="item-name">系统通知</span> <div data-v-1ac9f6c6="" class="item-count">
        44
      </div></a></li></ul></li>  <li class="nav-item menu" data-v-05c85cd5=""><div class="avatar-wrapper" data-v-05c85cd5=""><div data-v-03256cc6="" data-v-05c85cd5="" class="avatar jj-avatar avatar"><img data-v-5244ef91="" data-v-03256cc6="" loading="eager" src="./ts和js的区别_files/5112637127~70x70.awebp" alt="用户530417131521的头像" class="lazy avatar-img immediate"> </div> <!----></div> <!----> <!----></li> <!----></ul></ul></nav></div></header></div>  <main class="container main-container" style="max-width:1140px;" data-v-cd15ceae=""><div class="view column-view" data-v-cd15ceae="" data-v-3a7d5dfe=""><!----> <div class="main-area article-area" data-v-cd15ceae="" data-v-3a7d5dfe=""><article itemscope="itemscope" itemtype="http://schema.org/Article" data-entry-id="6872111128135073806" data-draft-id="6871373256880816141" data-original-type="0" class="article" data-v-3a7d5dfe="" data-v-cd15ceae=""><!----> <meta itemprop="headline" content="一份不可多得的 TS 学习指南（1.8W字）"> <meta itemprop="keywords" content="前端,TypeScript"> <meta itemprop="datePublished" content="2020-09-13T23:04:42.000Z"> <meta itemprop="image" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-128.png~tplv-t2oaga2asx-image.image"> <div itemprop="author" itemscope="itemscope" itemtype="http://schema.org/Person"><meta itemprop="name" content="阿宝哥"> <meta itemprop="url" content="https://juejin.cn/user/764915822103079"></div> <div itemprop="publisher" itemscope="itemscope" itemtype="http://schema.org/Organization"><meta itemprop="name" content="掘金"> <div itemprop="logo" itemscope="itemscope" itemtype="https://schema.org/ImageObject"><meta itemprop="url" content="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-assets/icon/icon-white-180.png~tplv-t2oaga2asx-image.image"> <meta itemprop="width" content="180"> <meta itemprop="height" content="180"></div></div> <h1 class="article-title" data-v-3a7d5dfe="">
            一份不可多得的 TS 学习指南（1.8W字）
            <!----> <!----></h1> <div class="author-info-block" data-v-3a7d5dfe=""><div class="author-info-box" data-v-3a7d5dfe=""><div class="author-name" data-v-3a7d5dfe=""><a href="https://juejin.cn/user/764915822103079/posts" target="_blank" rel="" class="jj-link username username ellipsis" data-v-65b50b51="" data-v-1800aadb="" data-v-3a7d5dfe=""><span class="name" style="max-width:160px;" data-v-65b50b51="" data-v-1800aadb="">
    阿宝哥
  </span> <!----> <!----> <!----> </a></div> <div class="meta-box" data-v-3a7d5dfe=""><time datetime="2020-09-13T23:04:42.000Z" title="Mon Sep 14 2020 07:04:42 GMT+0800 (香港标准时间)" class="time" data-v-3a7d5dfe="">
                    2020-09-14
                  </time> <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="read-icon" data-v-3a7d5dfe=""><path d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor" data-v-3a7d5dfe=""></path><circle cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor" data-v-3a7d5dfe=""></circle></svg> <span class="views-count" data-v-3a7d5dfe="">
                    221,432
                  </span> <span class="read-time" data-v-3a7d5dfe=""><svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" data-v-3a7d5dfe="" class=""><rect width="16" height="16" fill="none" data-v-3a7d5dfe=""></rect><circle cx="8" cy="8" r="5.65625" stroke="#8A919F" data-v-3a7d5dfe=""></circle><path d="M7.69141 5.18652V8.30924H10.8141" stroke="#8A919F" stroke-linecap="round" stroke-linejoin="round" data-v-3a7d5dfe=""></path></svg>
                    阅读27分钟
                  </span> <div data-v-3a7d5dfe="" class="first-column"><div data-v-3a7d5dfe="" class="gap"></div> <div data-v-3a7d5dfe="" class="word"><svg data-v-3a7d5dfe="" width="14" height="13" viewBox="0 0 14 13" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path data-v-3a7d5dfe="" fill-rule="evenodd" clip-rule="evenodd" d="M1.60043 0.961914C1.09407 0.961914 0.683594 1.37239 0.683594 1.87875V11.6807C0.683594 12.1871 1.09407 12.5976 1.60042 12.5976H3.6425C4.14885 12.5976 4.55933 12.1871 4.55933 11.6807V1.87875C4.55933 1.37239 4.14885 0.961914 3.6425 0.961914H1.60043ZM1.70043 1.97875H3.5425V11.5807H1.70042L1.70043 1.97875Z" fill="#8A919F"></path><path data-v-3a7d5dfe="" fill-rule="evenodd" clip-rule="evenodd" d="M4.45589 0.961914C3.94954 0.961914 3.53906 1.37239 3.53906 1.87875V11.6807C3.53906 12.1871 3.94954 12.5976 4.45589 12.5976H6.49797C7.00432 12.5976 7.4148 12.1871 7.4148 11.6807V1.87875C7.4148 1.37239 7.00432 0.961914 6.49797 0.961914H4.45589ZM4.55589 1.97875H6.39797V11.5807H4.55589L4.55589 1.97875Z" fill="#8A919F"></path><path data-v-3a7d5dfe="" fill-rule="evenodd" clip-rule="evenodd" d="M7.48055 1.42132C6.99145 1.55238 6.7012 2.05511 6.83225 2.54421L9.36919 12.0122C9.50024 12.5013 10.003 12.7915 10.4921 12.6605L12.4646 12.132C12.9537 12.0009 13.2439 11.4982 13.1129 11.0091L10.5759 1.54109C10.4449 1.052 9.94214 0.761742 9.45304 0.892796L7.48055 1.42132ZM7.84031 2.37763L9.61963 1.90086L12.1048 11.1757L10.3255 11.6524L7.84031 2.37763Z" fill="#8A919F"></path></svg>
                      专栏：&nbsp;
                    </div> <div data-v-3a7d5dfe="" class="title">
                      跟着阿宝哥学前端
                    </div></div></div></div> <div style="flex:1;" data-v-3a7d5dfe=""></div> <!----> <button data-v-090b3d46="" data-v-3a7d5dfe="" class="jj-follow-button follow"><span data-v-090b3d46="" class="text">关注</span></button></div> <!----> <!----> <!----> <div data-v-7f8f1dfc="" class="article-summary"><div data-v-0a1273ea="" data-v-7f8f1dfc="" class="article-summary-title"><div data-v-0a1273ea="" class="left"><div data-v-0a1273ea="" class="collapse"><i data-v-0a1273ea="" class="byte-icon byte-icon--caret-down"><svg t="1561625742692" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="35464" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M195.2 341.12H832a21.76 21.76 0 0 1 21.12 21.76 20.48 20.48 0 0 1-5.12 13.44l-320 372.48a21.12 21.12 0 0 1-30.08 0L179.2 376.32a21.12 21.12 0 0 1 0-30.08 21.76 21.76 0 0 1 16-5.12z" p-id="35465"></path></svg></i></div> <svg data-v-0a1273ea="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-0a1273ea="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-0a1273ea=""><radialgradient data-v-0a1273ea="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-0a1273ea="" stop-color="#FF8A01"></stop><stop data-v-0a1273ea="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-0a1273ea="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-0a1273ea="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-0a1273ea="" class="txt">智能总结</span> <span data-v-0a1273ea=""><span class="byte-tooltip__wrapper"><i data-v-0a1273ea="" class="desc-icon byte-icon byte-icon--info-circle"><svg t="1573039088347" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="71536" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M512 1024a512 512 0 1 1 512-512 512 512 0 0 1-512 512z m0-928a416 416 0 1 0 416 416A416 416 0 0 0 512 96z m0 672a48 48 0 0 1-48-48V464a48 48 0 0 1 96 0v256a48 48 0 0 1-48 48z m0-416a48 48 0 1 1 48-48 48 48 0 0 1-48 48z" p-id="71537"></path></svg></i></span></span></div> <div data-v-0a1273ea="" class="button-group"><div data-v-0a1273ea="" class="first button-layout"><i data-v-0a1273ea="" class="byte-icon byte-icon--copy"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48"><path fill="none" d="M0 0h48v48H0z"></path><path d="M32 12c1.1 0 2 .9 2 2v28.2c0 1-.8 1.8-1.9 1.8H7.9c-1 0-1.9-.8-1.9-1.8V13.8c0-1 .8-1.8 1.9-1.8H32zm-2 4H10v24h20V16zM40 4c1.1 0 2 .9 2 2v25c0 .6-.4 1-1 1h-2c-.6 0-1-.4-1-1V8H19c-.6 0-1-.4-1-1V5c0-.6.4-1 1-1h21z"></path></svg></i> <span data-v-0a1273ea="">复制</span></div> <div data-v-0a1273ea="" class="button-layout"><i data-v-0a1273ea="" class="byte-icon byte-icon--refresh"><svg t="1562227788110" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="16157" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M757.333333 341.333333c-53.333333-76.8-142.933333-128-245.333333-128-164.266667 0-298.666667 134.4-298.666667 298.666667s134.4 298.666667 298.666667 298.666667c134.4 0 249.6-89.6 285.866667-213.333334h87.466666c-38.4 170.666667-192 298.666667-375.466666 298.666667-211.2 0-384-172.8-384-384S300.8 128 512 128c121.6 0 228.266667 55.466667 298.666667 142.933333V149.333333c0-12.8 8.533333-21.333333 21.333333-21.333333h42.666667c12.8 0 21.333333 8.533333 21.333333 21.333333v234.666667c0 23.466667-19.2 42.666667-42.666667 42.666667H618.666667c-12.8 0-21.333333-8.533333-21.333334-21.333334v-42.666666c0-12.8 8.533333-21.333333 21.333334-21.333334h138.666666z" p-id="16158"></path></svg></i> <span data-v-0a1273ea="">重新生成</span></div></div></div> <div data-v-7f8f1dfc="" class="content"><div data-v-7f8f1dfc="" class="byte-divider byte-divider--horizontal" style="margin: 12px 0px;"><!----></div> <div data-v-2434fb10="" data-v-7f8f1dfc="" class="article-summary-content" loading-text="AI智能总结首次生成速度较慢, 请耐心等待"><div data-v-2434fb10="" class="message"><p>这篇文章是关于 TypeScript 的全面介绍，涵盖基础类型、断言、类型守卫、联合与交叉类型、函数、数组、对象、接口、类、泛型、装饰器、新特性、编译上下文和开发辅助工具等众多方面，通过详细讲解和示例，帮助开发者深入理解和运用 TypeScript 进行编程。</p>
</div> <div data-v-2434fb10="" class="questions"><span data-v-2434fb10="">关联问题:</span> <span data-v-2434fb10="" class="guidance">
      TS 指南实用吗
    </span><span data-v-2434fb10="" class="guidance">
      1.8W 字有重点吗
    </span><span data-v-2434fb10="" class="guidance">
      TS 学习难不难
    </span></div><div class="byte-loading" style="display: none;"><div class="byte-loading__spinner"><i class="circular byte-icon byte-icon--loading"><svg t="1553157954893" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2605" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M980.752 313.697c-25.789-60.972-62.702-115.725-109.713-162.736-47.012-47.011-101.764-83.924-162.736-109.713C645.161 14.542 578.106 1 509 1c-2.242 0-4.48 0.015-6.715 0.043-16.567 0.211-29.826 13.812-29.615 30.38 0.209 16.438 13.599 29.618 29.99 29.618l0.39-0.002c1.98-0.026 3.963-0.039 5.95-0.039 61.033 0 120.224 11.947 175.93 35.508 53.82 22.764 102.162 55.359 143.683 96.879s74.115 89.862 96.88 143.683C949.054 392.776 961 451.967 961 513c0 16.568 13.432 30 30 30s30-13.432 30-30c0-69.106-13.541-136.162-40.248-199.303z" p-id="2606"></path></svg></i><p class="byte-loading__text">AI智能总结首次生成速度较慢, 请耐心等待</p></div></div></div> <div data-v-7f8f1dfc="" style="margin-top: 10px;"></div> <div data-v-489bd83e="" data-v-7f8f1dfc="" class="edit-container"><div data-v-489bd83e="" class="main"><textarea data-v-489bd83e="" rows="1" placeholder="基于该文章内容继续向AI提问" class="input" style="height: 22px;"></textarea> <div data-v-489bd83e="" class="icon"></div></div></div></div></div><div id="article-root" itemprop="articleBody" class="main" data-v-3a7d5dfe=""><div class="article-viewer markdown-body cache result"><style>.markdown-body{word-break:break-word;line-height:1.75;font-weight:400;font-size:16px;overflow-x:hidden;color:#252933}.markdown-body h1,.markdown-body h2,.markdown-body h3,.markdown-body h4,.markdown-body h5,.markdown-body h6{line-height:1.5;margin-top:35px;margin-bottom:10px;padding-bottom:5px}.markdown-body h1{font-size:24px;line-height:38px;margin-bottom:5px}.markdown-body h2{font-size:22px;line-height:34px;padding-bottom:12px;border-bottom:1px solid #ececec}.markdown-body h3{font-size:20px;line-height:28px}.markdown-body h4{font-size:18px;line-height:26px}.markdown-body h5{font-size:17px;line-height:24px}.markdown-body h6{font-size:16px;line-height:24px}.markdown-body p{line-height:inherit;margin-top:22px;margin-bottom:22px}.markdown-body img{max-width:100%}.markdown-body hr{border:none;border-top:1px solid #ddd;margin-top:32px;margin-bottom:32px}.markdown-body code{word-break:break-word;border-radius:2px;overflow-x:auto;background-color:#fff5f5;color:#ff502c;font-size:.87em;padding:.065em .4em}.markdown-body code,.markdown-body pre{font-family:Menlo,Monaco,Consolas,Courier New,monospace}.markdown-body pre{overflow:auto;position:relative;line-height:1.75}.markdown-body pre>code{font-size:12px;padding:15px 12px;margin:0;word-break:normal;display:block;overflow-x:auto;color:#333;background:#f8f8f8}.markdown-body a{text-decoration:none;color:#0269c8;border-bottom:1px solid #d1e9ff}.markdown-body a:active,.markdown-body a:hover{color:#275b8c}.markdown-body table{display:inline-block!important;font-size:12px;width:auto;max-width:100%;overflow:auto;border:1px solid #f6f6f6}.markdown-body thead{background:#f6f6f6;color:#000;text-align:left}.markdown-body tr:nth-child(2n){background-color:#fcfcfc}.markdown-body td,.markdown-body th{padding:12px 7px;line-height:24px}.markdown-body td{min-width:120px}.markdown-body blockquote{color:#666;padding:1px 23px;margin:22px 0;border-left:4px solid #cbcbcb;background-color:#f8f8f8}.markdown-body blockquote:after{display:block;content:""}.markdown-body blockquote>p{margin:10px 0}.markdown-body ol,.markdown-body ul{padding-left:28px}.markdown-body ol li,.markdown-body ul li{margin-bottom:0;list-style:inherit}.markdown-body ol li .task-list-item,.markdown-body ul li .task-list-item{list-style:none}.markdown-body ol li .task-list-item ol,.markdown-body ol li .task-list-item ul,.markdown-body ul li .task-list-item ol,.markdown-body ul li .task-list-item ul{margin-top:0}.markdown-body ol ol,.markdown-body ol ul,.markdown-body ul ol,.markdown-body ul ul{margin-top:3px}.markdown-body ol li{padding-left:6px}.markdown-body .contains-task-list{padding-left:0}.markdown-body .task-list-item{list-style:none}@media (max-width:720px){.markdown-body h1{font-size:24px}.markdown-body h2{font-size:20px}.markdown-body h3{font-size:18px}}</style><style data-highlight="" data-highlight-key="juejin">.markdown-body pre,.markdown-body pre>code.hljs{color:#333;background:#f8f8f8}.hljs-comment,.hljs-quote{color:#998;font-style:italic}.hljs-keyword,.hljs-selector-tag,.hljs-subst{color:#333;font-weight:700}.hljs-literal,.hljs-number,.hljs-tag .hljs-attr,.hljs-template-variable,.hljs-variable{color:teal}.hljs-doctag,.hljs-string{color:#d14}.hljs-section,.hljs-selector-id,.hljs-title{color:#900;font-weight:700}.hljs-subst{font-weight:400}.hljs-class .hljs-title,.hljs-type{color:#458;font-weight:700}.hljs-attribute,.hljs-name,.hljs-tag{color:navy;font-weight:400}.hljs-link,.hljs-regexp{color:#009926}.hljs-bullet,.hljs-symbol{color:#990073}.hljs-built_in,.hljs-builtin-name{color:#0086b3}.hljs-meta{color:#999;font-weight:700}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}</style><p>阿宝哥第一次使用 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.typescriptlang.org%2F" target="_blank" title="https://www.typescriptlang.org/" ref="nofollow noopener noreferrer">TypeScript</a> 是在 Angular 2.x 项目中，那时候 TypeScript 还没有进入大众的视野。然而现在学习 TypeScript 的小伙伴越来越多了，本文阿宝哥将从 <strong>16</strong> 个方面入手，带你一步步学习 TypeScript，感兴趣的小伙伴不要错过。</p>
<p><img src="./ts和js的区别_files/d88a00458ce14c73bd3114239f5cb7e2~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<h3 data-id="heading-0">一、TypeScript 是什么</h3>
<p><a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.typescriptlang.org%2F" target="_blank" title="https://www.typescriptlang.org/" ref="nofollow noopener noreferrer">TypeScript</a> 是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。</p>
<p>TypeScript 提供最新的和不断发展的 JavaScript 特性，包括那些来自 2015 年的 ECMAScript 和未来的提案中的特性，比如异步功能和 Decorators，以帮助建立健壮的组件。下图显示了 TypeScript 与 ES5、ES2015 和 ES2016 之间的关系：</p>
<p><img src="./ts和js的区别_files/abcaa2a4d7b5416f95091b78492f8d6a~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<h4 data-id="heading-1">1.1 TypeScript 与 JavaScript 的区别</h4>

































<table><thead><tr><th align="center">TypeScript</th><th align="center">JavaScript</th></tr></thead><tbody><tr><td align="center">JavaScript 的超集用于解决大型项目的代码复杂性</td><td align="center">一种脚本语言，用于创建动态网页</td></tr><tr><td align="center">可以在编译期间发现并纠正错误</td><td align="center">作为一种解释型语言，只能在运行时发现错误</td></tr><tr><td align="center">强类型，支持静态和动态类型</td><td align="center">弱类型，没有静态类型选项</td></tr><tr><td align="center">最终被编译成 JavaScript 代码，使浏览器可以理解</td><td align="center">可以直接在浏览器中使用</td></tr><tr><td align="center">支持模块、泛型和接口</td><td align="center">不支持模块，泛型或接口</td></tr><tr><td align="center">社区的支持仍在增长，而且还不是很大</td><td align="center">大量的社区支持以及大量文档和解决问题的支持</td></tr></tbody></table>
<h4 data-id="heading-2">1.2 获取 TypeScript</h4>
<p>命令行的 TypeScript 编译器可以使用 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.npmjs.com%2F" target="_blank" title="https://www.npmjs.com/" ref="nofollow noopener noreferrer">npm</a> 包管理器来安装。</p>
<h5 data-id="heading-3">1.安装 TypeScript</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">shell</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-shell code-block-extension-codeShowNum" lang="shell"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta prompt_">$ </span><span class="bash">npm install -g typescript</span></span>
</code></pre>
<h5 data-id="heading-4">2.验证 TypeScript</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">shell</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-shell code-block-extension-codeShowNum" lang="shell"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta prompt_">$ </span><span class="bash">tsc -v</span> </span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-meta prompt_"># </span><span class="bash">Version 4.0.2</span></span>
</code></pre>
<h5 data-id="heading-5">3.编译 TypeScript 文件</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">shell</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-shell code-block-extension-codeShowNum" lang="shell"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta prompt_">$ </span><span class="bash">tsc helloworld.ts</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-meta prompt_"># </span><span class="bash">helloworld.ts =&gt; helloworld.js</span></span>
</code></pre>
<p>当然，对刚入门 TypeScript 的小伙伴来说，也可以不用安装 <code>typescript</code>，而是直接使用线上的 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%2F" target="_blank" title="https://www.typescriptlang.org/play/" ref="nofollow noopener noreferrer">TypeScript Playground</a> 来学习新的语法或新特性。通过配置 <strong>TS Config</strong> 的 Target，可以设置不同的编译目标，从而编译生成不同的目标代码。</p>
<p>下图示例中所设置的编译目标是 ES5：</p>
<p><img src="./ts和js的区别_files/5db52f7a4d664d93a72a3da6e6a92ae0~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>（图片来源：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%25EF%25BC%2589" target="_blank" title="https://www.typescriptlang.org/play%EF%BC%89" ref="nofollow noopener noreferrer">www.typescriptlang.org/play）</a></p>
<h4 data-id="heading-6">1.3 典型 TypeScript 工作流程</h4>
<p><img src="./ts和js的区别_files/dea0cbad55b246a8a7e65aec57273ade~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>如你所见，在上图中包含 3 个 ts 文件：a.ts、b.ts 和 c.ts。这些文件将被 TypeScript 编译器，根据配置的编译选项编译成 3 个 js 文件，即 a.js、b.js 和 c.js。对于大多数使用 TypeScript 开发的 Web 项目，我们还会对编译生成的 js 文件进行打包处理，然后在进行部署。</p>
<h4 data-id="heading-7">1.4 TypeScript 初体验</h4>
<p>新建一个 <code>hello.ts</code> 文件，并输入以下内容：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">greet</span>(<span class="hljs-params">person: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">return</span> <span class="hljs-string">'Hello, '</span> + person;</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
<span class="code-block-extension-codeLine" data-line-num="4"></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">greet</span>(<span class="hljs-string">"TypeScript"</span>));</span>
</code></pre>
<p>然后执行 <code>tsc hello.ts</code> 命令，之后会生成一个编译好的文件 <code>hello.js</code>：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">javascript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-javascript code-block-extension-codeShowNum" lang="javascript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta">"use strict"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">function</span> <span class="hljs-title function_">greet</span>(<span class="hljs-params">person</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-keyword">return</span> <span class="hljs-string">'Hello, '</span> + person;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">greet</span>(<span class="hljs-string">"TypeScript"</span>));</span>
</code></pre>
<p>观察以上编译后的输出结果，我们发现 <code>person</code> 参数的类型信息在编译后被擦除了。TypeScript 只会在编译阶段对类型进行静态检查，如果发现有错误，编译时就会报错。而在运行时，编译生成的 JS 与普通的 JavaScript 文件一样，并不会进行类型检查。</p>
<h3 data-id="heading-8">二、TypeScript 基础类型</h3>
<h4 data-id="heading-9">2.1 Boolean 类型</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">isDone</span>: <span class="hljs-built_in">boolean</span> = <span class="hljs-literal">false</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-comment">// ES5：var isDone = false;</span></span>
</code></pre>
<h4 data-id="heading-10">2.2 Number 类型</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">count</span>: <span class="hljs-built_in">number</span> = <span class="hljs-number">10</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-comment">// ES5：var count = 10;</span></span>
</code></pre>
<h4 data-id="heading-11">2.3 String 类型</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">"semliker"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-comment">// ES5：var name = 'semlinker';</span></span>
</code></pre>
<h4 data-id="heading-12">2.4 Symbol 类型</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">const</span> sym = <span class="hljs-title class_">Symbol</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">let</span> obj = {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  [sym]: <span class="hljs-string">"semlinker"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="4">};</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(obj[sym]); <span class="hljs-comment">// semlinker </span></span>
</code></pre>
<h4 data-id="heading-13">2.5 Array 类型</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">list</span>: <span class="hljs-built_in">number</span>[] = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-comment">// ES5：var list = [1,2,3];</span></span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-keyword">let</span> <span class="hljs-attr">list</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-built_in">number</span>&gt; = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]; <span class="hljs-comment">// Array&lt;number&gt;泛型语法</span></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-comment">// ES5：var list = [1,2,3];</span></span>
</code></pre>
<h4 data-id="heading-14">2.6 Enum 类型</h4>
<p>使用枚举我们可以定义一些带名字的常量。 使用枚举可以清晰地表达意图或创建一组有区别的用例。 TypeScript 支持数字的和基于字符串的枚举。</p>
<h5 data-id="heading-15">1.数字枚举</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Direction</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable constant_">NORTH</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable constant_">SOUTH</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-variable constant_">EAST</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-variable constant_">WEST</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="6">}</span>
<span class="code-block-extension-codeLine" data-line-num="7"></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">let</span> <span class="hljs-attr">dir</span>: <span class="hljs-title class_">Direction</span> = <span class="hljs-title class_">Direction</span>.<span class="hljs-property">NORTH</span>;</span>
</code></pre>
<p>默认情况下，NORTH 的初始值为 0，其余的成员会从 1 开始自动增长。换句话说，Direction.SOUTH 的值为 1，Direction.EAST 的值为 2，Direction.WEST 的值为 3。</p>
<p>以上的枚举示例经编译后，对应的 ES5 代码如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">javascript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-javascript code-block-extension-codeShowNum" lang="javascript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta">"use strict"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">var</span> <span class="hljs-title class_">Direction</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">(<span class="hljs-keyword">function</span> (<span class="hljs-params">Direction</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-title class_">Direction</span>[(<span class="hljs-title class_">Direction</span>[<span class="hljs-string">"NORTH"</span>] = <span class="hljs-number">0</span>)] = <span class="hljs-string">"NORTH"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-title class_">Direction</span>[(<span class="hljs-title class_">Direction</span>[<span class="hljs-string">"SOUTH"</span>] = <span class="hljs-number">1</span>)] = <span class="hljs-string">"SOUTH"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-title class_">Direction</span>[(<span class="hljs-title class_">Direction</span>[<span class="hljs-string">"EAST"</span>] = <span class="hljs-number">2</span>)] = <span class="hljs-string">"EAST"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-title class_">Direction</span>[(<span class="hljs-title class_">Direction</span>[<span class="hljs-string">"WEST"</span>] = <span class="hljs-number">3</span>)] = <span class="hljs-string">"WEST"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">})(<span class="hljs-title class_">Direction</span> || (<span class="hljs-title class_">Direction</span> = {}));</span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-keyword">var</span> dir = <span class="hljs-title class_">Direction</span>.<span class="hljs-property">NORTH</span>;</span>
</code></pre>
<p>当然我们也可以设置 NORTH 的初始值，比如：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Direction</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable constant_">NORTH</span> = <span class="hljs-number">3</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable constant_">SOUTH</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-variable constant_">EAST</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-variable constant_">WEST</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="6">}</span>
</code></pre>
<h5 data-id="heading-16">2.字符串枚举</h5>
<p>在 TypeScript 2.4 版本，允许我们使用字符串枚举。在一个字符串枚举里，每个成员都必须用字符串字面量，或另外一个字符串枚举成员进行初始化。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Direction</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable constant_">NORTH</span> = <span class="hljs-string">"NORTH"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable constant_">SOUTH</span> = <span class="hljs-string">"SOUTH"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-variable constant_">EAST</span> = <span class="hljs-string">"EAST"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-variable constant_">WEST</span> = <span class="hljs-string">"WEST"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="6">}</span>
</code></pre>
<p>以上代码对应的 ES5 代码如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta">"use strict"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">var</span> <span class="hljs-title class_">Direction</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">(<span class="hljs-keyword">function</span> (<span class="hljs-params">Direction</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="4">    <span class="hljs-title class_">Direction</span>[<span class="hljs-string">"NORTH"</span>] = <span class="hljs-string">"NORTH"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">    <span class="hljs-title class_">Direction</span>[<span class="hljs-string">"SOUTH"</span>] = <span class="hljs-string">"SOUTH"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="6">    <span class="hljs-title class_">Direction</span>[<span class="hljs-string">"EAST"</span>] = <span class="hljs-string">"EAST"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-title class_">Direction</span>[<span class="hljs-string">"WEST"</span>] = <span class="hljs-string">"WEST"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">})(<span class="hljs-title class_">Direction</span> || (<span class="hljs-title class_">Direction</span> = {}));</span>
</code></pre>
<p>通过观察数字枚举和字符串枚举的编译结果，我们可以知道数字枚举除了支持 <strong>从成员名称到成员值</strong> 的普通映射之外，它还支持 <strong>从成员值到成员名称</strong> 的反向映射：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Direction</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable constant_">NORTH</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable constant_">SOUTH</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-variable constant_">EAST</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-variable constant_">WEST</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="6">}</span>
<span class="code-block-extension-codeLine" data-line-num="7"></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">let</span> dirName = <span class="hljs-title class_">Direction</span>[<span class="hljs-number">0</span>]; <span class="hljs-comment">// NORTH</span></span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-keyword">let</span> dirVal = <span class="hljs-title class_">Direction</span>[<span class="hljs-string">"NORTH"</span>]; <span class="hljs-comment">// 0</span></span>
</code></pre>
<p>另外，对于纯字符串枚举，我们不能省略任何初始化程序。而数字枚举如果没有显式设置值时，则会使用默认规则进行初始化。</p>
<h5 data-id="heading-17">3.常量枚举</h5>
<p>除了数字枚举和字符串枚举之外，还有一种特殊的枚举 —— 常量枚举。它是使用 <code>const</code> 关键字修饰的枚举，常量枚举会使用内联语法，不会为枚举类型编译生成任何 JavaScript。为了更好地理解这句话，我们来看一个具体的例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">const</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">Direction</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable constant_">NORTH</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable constant_">SOUTH</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-variable constant_">EAST</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-variable constant_">WEST</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="6">}</span>
<span class="code-block-extension-codeLine" data-line-num="7"></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">let</span> <span class="hljs-attr">dir</span>: <span class="hljs-title class_">Direction</span> = <span class="hljs-title class_">Direction</span>.<span class="hljs-property">NORTH</span>;</span>
</code></pre>
<p>以上代码对应的 ES5 代码如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">javascript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-javascript code-block-extension-codeShowNum" lang="javascript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta">"use strict"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">var</span> dir = <span class="hljs-number">0</span> <span class="hljs-comment">/* NORTH */</span>;</span>
</code></pre>
<h5 data-id="heading-18">4.异构枚举</h5>
<p>异构枚举的成员值是数字和字符串的混合：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">Enum</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  A,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  B,</span>
<span class="code-block-extension-codeLine" data-line-num="4">  C = <span class="hljs-string">"C"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="5">  D = <span class="hljs-string">"D"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="6">  E = <span class="hljs-number">8</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="7">  F,</span>
<span class="code-block-extension-codeLine" data-line-num="8">}</span>
</code></pre>
<p>以上代码对于的 ES5 代码如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta">"use strict"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">var</span> <span class="hljs-title class_">Enum</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">(<span class="hljs-keyword">function</span> (<span class="hljs-params">Enum</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="4">    <span class="hljs-title class_">Enum</span>[<span class="hljs-title class_">Enum</span>[<span class="hljs-string">"A"</span>] = <span class="hljs-number">0</span>] = <span class="hljs-string">"A"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">    <span class="hljs-title class_">Enum</span>[<span class="hljs-title class_">Enum</span>[<span class="hljs-string">"B"</span>] = <span class="hljs-number">1</span>] = <span class="hljs-string">"B"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="6">    <span class="hljs-title class_">Enum</span>[<span class="hljs-string">"C"</span>] = <span class="hljs-string">"C"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-title class_">Enum</span>[<span class="hljs-string">"D"</span>] = <span class="hljs-string">"D"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-title class_">Enum</span>[<span class="hljs-title class_">Enum</span>[<span class="hljs-string">"E"</span>] = <span class="hljs-number">8</span>] = <span class="hljs-string">"E"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-title class_">Enum</span>[<span class="hljs-title class_">Enum</span>[<span class="hljs-string">"F"</span>] = <span class="hljs-number">9</span>] = <span class="hljs-string">"F"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="10">})(<span class="hljs-title class_">Enum</span> || (<span class="hljs-title class_">Enum</span> = {}));</span>
</code></pre>
<p>通过观察上述生成的 ES5 代码，我们可以发现数字枚举相对字符串枚举多了 “反向映射”：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">javascript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-javascript code-block-extension-codeShowNum" lang="javascript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Enum</span>.<span class="hljs-property">A</span>) <span class="hljs-comment">//输出：0</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title class_">Enum</span>[<span class="hljs-number">0</span>]) <span class="hljs-comment">// 输出：A</span></span>
</code></pre>
<h4 data-id="heading-19">2.7 Any 类型</h4>
<p>在 TypeScript 中，任何类型都可以被归为 any 类型。这让 any 类型成为了类型系统的顶级类型（也被称作全局超级类型）。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">notSure</span>: <span class="hljs-built_in">any</span> = <span class="hljs-number">666</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2">notSure = <span class="hljs-string">"semlinker"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">notSure = <span class="hljs-literal">false</span>;</span>
</code></pre>
<p><code>any</code> 类型本质上是类型系统的一个逃逸舱。作为开发者，这给了我们很大的自由：TypeScript 允许我们对 <code>any</code> 类型的值执行任何操作，而无需事先执行任何形式的检查。比如：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">value</span>: <span class="hljs-built_in">any</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3">value.<span class="hljs-property">foo</span>.<span class="hljs-property">bar</span>; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">value.<span class="hljs-title function_">trim</span>(); <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-title function_">value</span>(); <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">new</span> <span class="hljs-title function_">value</span>(); <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="7">value[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]; <span class="hljs-comment">// OK</span></span>
</code></pre>
<p>在许多场景下，这太宽松了。使用 <code>any</code> 类型，可以很容易地编写类型正确但在运行时有问题的代码。如果我们使用 <code>any</code> 类型，就无法使用 TypeScript 提供的大量的保护机制。为了解决 <code>any</code> 带来的问题，TypeScript 3.0 引入了 <code>unknown</code> 类型。</p>
<h4 data-id="heading-20">2.8 Unknown 类型</h4>
<p>就像所有类型都可以赋值给 <code>any</code>，所有类型也都可以赋值给 <code>unknown</code>。这使得 <code>unknown</code> 成为 TypeScript 类型系统的另一种顶级类型（另一种是 <code>any</code>）。下面我们来看一下 <code>unknown</code> 类型的使用示例：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">value</span>: <span class="hljs-built_in">unknown</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3">value = <span class="hljs-literal">true</span>; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">value = <span class="hljs-number">42</span>; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">value = <span class="hljs-string">"Hello World"</span>; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="6">value = []; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="7">value = {}; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="8">value = <span class="hljs-title class_">Math</span>.<span class="hljs-property">random</span>; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="9">value = <span class="hljs-literal">null</span>; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="10">value = <span class="hljs-literal">undefined</span>; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="11">value = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TypeError</span>(); <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="12">value = <span class="hljs-title class_">Symbol</span>(<span class="hljs-string">"type"</span>); <span class="hljs-comment">// OK</span></span>
</code></pre>
<p>对 <code>value</code> 变量的所有赋值都被认为是类型正确的。但是，当我们尝试将类型为 <code>unknown</code> 的值赋值给其他类型的变量时会发生什么？</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">value</span>: <span class="hljs-built_in">unknown</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">let</span> <span class="hljs-attr">value1</span>: <span class="hljs-built_in">unknown</span> = value; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-keyword">let</span> <span class="hljs-attr">value2</span>: <span class="hljs-built_in">any</span> = value; <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">let</span> <span class="hljs-attr">value3</span>: <span class="hljs-built_in">boolean</span> = value; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">let</span> <span class="hljs-attr">value4</span>: <span class="hljs-built_in">number</span> = value; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">let</span> <span class="hljs-attr">value5</span>: <span class="hljs-built_in">string</span> = value; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">let</span> <span class="hljs-attr">value6</span>: <span class="hljs-built_in">object</span> = value; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-keyword">let</span> <span class="hljs-attr">value7</span>: <span class="hljs-built_in">any</span>[] = value; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="10"><span class="hljs-keyword">let</span> <span class="hljs-attr">value8</span>: <span class="hljs-title class_">Function</span> = value; <span class="hljs-comment">// Error</span></span>
</code></pre>
<p><code>unknown</code> 类型只能被赋值给 <code>any</code> 类型和 <code>unknown</code> 类型本身。直观地说，这是有道理的：只有能够保存任意类型值的容器才能保存 <code>unknown</code> 类型的值。毕竟我们不知道变量 <code>value</code> 中存储了什么类型的值。</p>
<p>现在让我们看看当我们尝试对类型为 <code>unknown</code> 的值执行操作时会发生什么。以下是我们在之前 <code>any</code> 章节看过的相同操作：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">value</span>: <span class="hljs-built_in">unknown</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3">value.<span class="hljs-property">foo</span>.<span class="hljs-property">bar</span>; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">value.<span class="hljs-title function_">trim</span>(); <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-title function_">value</span>(); <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">new</span> <span class="hljs-title function_">value</span>(); <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="7">value[<span class="hljs-number">0</span>][<span class="hljs-number">1</span>]; <span class="hljs-comment">// Error</span></span>
</code></pre>
<p>将 <code>value</code> 变量类型设置为 <code>unknown</code> 后，这些操作都不再被认为是类型正确的。通过将 <code>any</code> 类型改变为 <code>unknown</code> 类型，我们已将允许所有更改的默认设置，更改为禁止任何更改。</p>
<h4 data-id="heading-21">2.9 Tuple 类型</h4>
<p><strong>众所周知，数组一般由同种类型的值组成，但有时我们需要在单个变量中存储不同类型的值，这时候我们就可以使用元组</strong>。在 JavaScript 中是没有元组的，元组是 TypeScript 中特有的类型，其工作方式类似于数组。</p>
<p>元组可用于定义具有有限数量的未命名属性的类型。每个属性都有一个关联的类型。使用元组时，必须提供每个属性的值。为了更直观地理解元组的概念，我们来看一个具体的例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">tupleType</span>: [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">boolean</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="2">tupleType = [<span class="hljs-string">"semlinker"</span>, <span class="hljs-literal">true</span>];</span>
</code></pre>
<p>在上面代码中，我们定义了一个名为 <code>tupleType</code> 的变量，它的类型是一个类型数组 <code>[string, boolean]</code>，然后我们按照正确的类型依次初始化 tupleType 变量。与数组一样，我们可以通过下标来访问元组中的元素：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(tupleType[<span class="hljs-number">0</span>]); <span class="hljs-comment">// semlinker</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(tupleType[<span class="hljs-number">1</span>]); <span class="hljs-comment">// true</span></span>
</code></pre>
<p>在元组初始化的时候，如果出现类型不匹配的话，比如：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1">tupleType = [<span class="hljs-literal">true</span>, <span class="hljs-string">"semlinker"</span>];</span>
</code></pre>
<p>此时，TypeScript 编译器会提示以下错误信息：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">python</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-python code-block-extension-codeShowNum" lang="python"><span class="code-block-extension-codeLine" data-line-num="1">[<span class="hljs-number">0</span>]: <span class="hljs-type">Type</span> <span class="hljs-string">'true'</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> assignable to <span class="hljs-built_in">type</span> <span class="hljs-string">'string'</span>.</span>
<span class="code-block-extension-codeLine" data-line-num="2">[<span class="hljs-number">1</span>]: <span class="hljs-type">Type</span> <span class="hljs-string">'string'</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> assignable to <span class="hljs-built_in">type</span> <span class="hljs-string">'boolean'</span>.</span>
</code></pre>
<p>很明显是因为类型不匹配导致的。在元组初始化的时候，我们还必须提供每个属性的值，不然也会出现错误，比如：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1">tupleType = [<span class="hljs-string">"semlinker"</span>];</span>
</code></pre>
<p>此时，TypeScript 编译器会提示以下错误信息：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-title class_">Property</span> <span class="hljs-string">'1'</span> is missing <span class="hljs-keyword">in</span> <span class="hljs-keyword">type</span> <span class="hljs-string">'[string]'</span> but required <span class="hljs-keyword">in</span> <span class="hljs-keyword">type</span> <span class="hljs-string">'[string, boolean]'</span>.</span>
</code></pre>
<h4 data-id="heading-22">2.10 Void 类型</h4>
<p>某种程度上来说，void 类型像是与 any 类型相反，它表示没有任何类型。当一个函数没有返回值时，你通常会见到其返回值类型是 void：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// 声明函数返回值为void</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">function</span> <span class="hljs-title function_">warnUser</span>(<span class="hljs-params"></span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"This is my warning message"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
</code></pre>
<p>以上代码编译生成的 ES5 代码如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta">"use strict"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">function</span> <span class="hljs-title function_">warnUser</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"This is my warning message"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
</code></pre>
<p>需要注意的是，声明一个 void 类型的变量没有什么作用，因为在严格模式下，它的值只能为 <code>undefined</code>：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">unusable</span>: <span class="hljs-built_in">void</span> = <span class="hljs-literal">undefined</span>;</span>
</code></pre>
<h4 data-id="heading-23">2.11 Null 和 Undefined 类型</h4>
<p>TypeScript 里，<code>undefined</code> 和 <code>null</code> 两者有各自的类型分别为 <code>undefined</code> 和 <code>null</code>。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">u</span>: <span class="hljs-literal">undefined</span> = <span class="hljs-literal">undefined</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">let</span> <span class="hljs-attr">n</span>: <span class="hljs-literal">null</span> = <span class="hljs-literal">null</span>;</span>
</code></pre>
<h4 data-id="heading-24">2.12 object, Object 和 {} 类型</h4>
<h5 data-id="heading-25">1.object 类型</h5>
<p>object 类型是：TypeScript 2.2 引入的新类型，它用于表示非原始类型。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// node_modules/typescript/lib/lib.es5.d.ts</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ObjectConstructor</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-title function_">create</span>(<span class="hljs-attr">o</span>: <span class="hljs-built_in">object</span> | <span class="hljs-literal">null</span>): <span class="hljs-built_in">any</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-comment">// ...</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">}</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">const</span> proto = {};</span>
<span class="code-block-extension-codeLine" data-line-num="8"></span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(proto);     <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="10"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">null</span>);      <span class="hljs-comment">// OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">undefined</span>); <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="12"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-number">1337</span>);      <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="13"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-literal">true</span>);      <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="14"><span class="hljs-title class_">Object</span>.<span class="hljs-title function_">create</span>(<span class="hljs-string">"oops"</span>);    <span class="hljs-comment">// Error</span></span>
</code></pre>
<h5 data-id="heading-26">2.Object 类型</h5>
<p>Object 类型：它是所有 Object 类的实例的类型，它由以下两个接口来定义：</p>
<ul>
<li>Object 接口定义了 Object.prototype 原型对象上的属性；</li>
</ul>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// node_modules/typescript/lib/lib.es5.d.ts</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Object</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">constructor</span>: <span class="hljs-title class_">Function</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-title function_">toString</span>(): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-title function_">toLocaleString</span>(): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-title function_">valueOf</span>(): <span class="hljs-title class_">Object</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-title function_">hasOwnProperty</span>(<span class="hljs-attr">v</span>: <span class="hljs-title class_">PropertyKey</span>): <span class="hljs-built_in">boolean</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-title function_">isPrototypeOf</span>(<span class="hljs-attr">v</span>: <span class="hljs-title class_">Object</span>): <span class="hljs-built_in">boolean</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="9">  <span class="hljs-title function_">propertyIsEnumerable</span>(<span class="hljs-attr">v</span>: <span class="hljs-title class_">PropertyKey</span>): <span class="hljs-built_in">boolean</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="10">}</span>
</code></pre>
<ul>
<li>ObjectConstructor 接口定义了 Object 类的属性。</li>
</ul>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// node_modules/typescript/lib/lib.es5.d.ts</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">ObjectConstructor</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-comment">/** Invocation via `new` */</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-title function_">new</span>(value?: <span class="hljs-built_in">any</span>): <span class="hljs-title class_">Object</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-comment">/** Invocation via function calls */</span></span>
<span class="code-block-extension-codeLine" data-line-num="6">  (value?: <span class="hljs-built_in">any</span>): <span class="hljs-built_in">any</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-keyword">readonly</span> <span class="hljs-attr">prototype</span>: <span class="hljs-title class_">Object</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-title function_">getPrototypeOf</span>(<span class="hljs-attr">o</span>: <span class="hljs-built_in">any</span>): <span class="hljs-built_in">any</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="9">  <span class="hljs-comment">// ···</span></span>
<span class="code-block-extension-codeLine" data-line-num="10">}</span>
<span class="code-block-extension-codeLine" data-line-num="11"></span>
<span class="code-block-extension-codeLine" data-line-num="12"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">var</span> <span class="hljs-title class_">Object</span>: <span class="hljs-title class_">ObjectConstructor</span>;</span>
</code></pre>
<p>Object 类的所有实例都继承了 Object 接口中的所有属性。</p>
<h5 data-id="heading-27">3.{} 类型</h5>
<p>{} 类型描述了一个没有成员的对象。当你试图访问这样一个对象的任意属性时，TypeScript 会产生一个编译时错误。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// Type {}</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">const</span> obj = {};</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-comment">// Error: Property 'prop' does not exist on type '{}'.</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">obj.<span class="hljs-property">prop</span> = <span class="hljs-string">"semlinker"</span>;</span>
</code></pre>
<p>但是，你仍然可以使用在 Object 类型上定义的所有属性和方法，这些属性和方法可通过 JavaScript 的原型链隐式地使用：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// Type {}</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">const</span> obj = {};</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-comment">// "[object Object]"</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">obj.<span class="hljs-title function_">toString</span>();</span>
</code></pre>
<h4 data-id="heading-28">2.13 Never 类型</h4>
<p><code>never</code> 类型表示的是那些永不存在的值的类型。 例如，<code>never</code> 类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// 返回never的函数必须存在无法达到的终点</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">function</span> <span class="hljs-title function_">error</span>(<span class="hljs-params">message: <span class="hljs-built_in">string</span></span>): <span class="hljs-built_in">never</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(message);</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">function</span> <span class="hljs-title function_">infiniteLoop</span>(<span class="hljs-params"></span>): <span class="hljs-built_in">never</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-keyword">while</span> (<span class="hljs-literal">true</span>) {}</span>
<span class="code-block-extension-codeLine" data-line-num="8">}</span>
</code></pre>
<p>在 TypeScript 中，可以利用 never 类型的特性来实现全面性检查，具体示例如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Foo</span> = <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">function</span> <span class="hljs-title function_">controlFlowAnalysisWithNever</span>(<span class="hljs-params">foo: Foo</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> foo === <span class="hljs-string">"string"</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="5">    <span class="hljs-comment">// 这里 foo 被收窄为 string 类型</span></span>
<span class="code-block-extension-codeLine" data-line-num="6">  } <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> foo === <span class="hljs-string">"number"</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-comment">// 这里 foo 被收窄为 number 类型</span></span>
<span class="code-block-extension-codeLine" data-line-num="8">  } <span class="hljs-keyword">else</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-comment">// foo 在这里是 never</span></span>
<span class="code-block-extension-codeLine" data-line-num="10">    <span class="hljs-keyword">const</span> <span class="hljs-attr">check</span>: <span class="hljs-built_in">never</span> = foo;</span>
<span class="code-block-extension-codeLine" data-line-num="11">  }</span>
<span class="code-block-extension-codeLine" data-line-num="12">}</span>
</code></pre>
<p>注意在 else 分支里面，我们把收窄为 never 的 foo 赋值给一个显示声明的 never 变量。如果一切逻辑正确，那么这里应该能够编译通过。但是假如后来有一天你的同事修改了 Foo 的类型：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Foo</span> = <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span> | <span class="hljs-built_in">boolean</span>;</span>
</code></pre>
<p>然而他忘记同时修改 <code>controlFlowAnalysisWithNever</code> 方法中的控制流程，这时候 else 分支的 foo 类型会被收窄为 <code>boolean</code> 类型，导致无法赋值给 never 类型，这时就会产生一个编译错误。通过这个方式，我们可以确保</p>
<p><code>controlFlowAnalysisWithNever</code> 方法总是穷尽了 Foo 的所有可能类型。 通过这个示例，我们可以得出一个结论：<strong>使用 never 避免出现新增了联合类型没有对应的实现，目的就是写出类型绝对安全的代码。</strong></p>
<h3 data-id="heading-29">三、TypeScript 断言</h3>
<h4 data-id="heading-30">3.1 类型断言</h4>
<p>有时候你会遇到这样的情况，你会比 TypeScript 更了解某个值的详细信息。通常这会发生在你清楚地知道一个实体具有比它现有类型更确切的类型。</p>
<p>通过类型断言这种方式可以告诉编译器，“相信我，我知道自己在干什么”。类型断言好比其他语言里的类型转换，但是不进行特殊的数据检查和解构。它没有运行时的影响，只是在编译阶段起作用。</p>
<p>类型断言有两种形式：</p>
<h5 data-id="heading-31">1.“尖括号” 语法</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">someValue</span>: <span class="hljs-built_in">any</span> = <span class="hljs-string">"this is a string"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">let</span> <span class="hljs-attr">strLength</span>: <span class="hljs-built_in">number</span> = (&lt;<span class="hljs-built_in">string</span>&gt;someValue).<span class="hljs-property">length</span>;</span>
</code></pre>
<h5 data-id="heading-32">2.as 语法</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">someValue</span>: <span class="hljs-built_in">any</span> = <span class="hljs-string">"this is a string"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">let</span> <span class="hljs-attr">strLength</span>: <span class="hljs-built_in">number</span> = (someValue <span class="hljs-keyword">as</span> <span class="hljs-built_in">string</span>).<span class="hljs-property">length</span>;</span>
</code></pre>
<h4 data-id="heading-33">3.2 非空断言</h4>
<p>在上下文中当类型检查器无法断定类型时，一个新的后缀表达式操作符 <code>!</code> 可以用于断言操作对象是非 null 和非 undefined 类型。<strong>具体而言，x! 将从 x 值域中排除 null 和 undefined 。</strong></p>
<p>那么非空断言操作符到底有什么用呢？下面我们先来看一下非空断言操作符的一些使用场景。</p>
<h5 data-id="heading-34">1.忽略 undefined 和 null 类型</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">myFunc</span>(<span class="hljs-params">maybeString: <span class="hljs-built_in">string</span> | <span class="hljs-literal">undefined</span> | <span class="hljs-literal">null</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-comment">// Type 'string | null | undefined' is not assignable to type 'string'.</span></span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-comment">// Type 'undefined' is not assignable to type 'string'. </span></span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-keyword">const</span> <span class="hljs-attr">onlyString</span>: <span class="hljs-built_in">string</span> = maybeString; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-keyword">const</span> <span class="hljs-attr">ignoreUndefinedAndNull</span>: <span class="hljs-built_in">string</span> = maybeString!; <span class="hljs-comment">// Ok</span></span>
<span class="code-block-extension-codeLine" data-line-num="6">}</span>
</code></pre>
<h5 data-id="heading-35">2.调用函数时忽略 undefined 类型</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">NumGenerator</span> = <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">function</span> <span class="hljs-title function_">myFunc</span>(<span class="hljs-params">numGenerator: NumGenerator | <span class="hljs-literal">undefined</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-comment">// Object is possibly 'undefined'.(2532)</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-comment">// Cannot invoke an object which is possibly 'undefined'.(2722)</span></span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-keyword">const</span> num1 = <span class="hljs-title function_">numGenerator</span>(); <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-keyword">const</span> num2 = numGenerator!(); <span class="hljs-comment">//OK</span></span>
<span class="code-block-extension-codeLine" data-line-num="8">}</span>
</code></pre>
<p>因为 <code>!</code> 非空断言操作符会从编译生成的 JavaScript 代码中移除，所以在实际使用的过程中，要特别注意。比如下面这个例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">const</span> <span class="hljs-attr">a</span>: <span class="hljs-built_in">number</span> | <span class="hljs-literal">undefined</span> = <span class="hljs-literal">undefined</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">const</span> <span class="hljs-attr">b</span>: <span class="hljs-built_in">number</span> = a!;</span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b); </span>
</code></pre>
<p>以上 TS 代码会编译生成以下 ES5 代码：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">javascript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-javascript code-block-extension-codeShowNum" lang="javascript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta">"use strict"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">const</span> a = <span class="hljs-literal">undefined</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">const</span> b = a;</span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b);</span>
</code></pre>
<p>虽然在 TS 代码中，我们使用了非空断言，使得 <code>const b: number = a!;</code> 语句可以通过 TypeScript 类型检查器的检查。但在生成的 ES5 代码中，<code>!</code> 非空断言操作符被移除了，所以在浏览器中执行以上代码，在控制台会输出 <code>undefined</code>。</p>
<h4 data-id="heading-36">3.3 确定赋值断言</h4>
<p>在 TypeScript 2.7 版本中引入了确定赋值断言，即允许在实例属性和变量声明后面放置一个 <code>!</code> 号，从而告诉 TypeScript 该属性会被明确地赋值。为了更好地理解它的作用，我们来看个具体的例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-title function_">initialize</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-comment">// Variable 'x' is used before being assigned.(2454)</span></span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">2</span> * x); <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">function</span> <span class="hljs-title function_">initialize</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  x = <span class="hljs-number">10</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">}</span>
</code></pre>
<p>很明显该异常信息是说变量 x 在赋值前被使用了，要解决该问题，我们可以使用确定赋值断言：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> x!: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-title function_">initialize</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-number">2</span> * x); <span class="hljs-comment">// Ok</span></span>
<span class="code-block-extension-codeLine" data-line-num="4"></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">function</span> <span class="hljs-title function_">initialize</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="6">  x = <span class="hljs-number">10</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="7">}</span>
</code></pre>
<p>通过 <code>let x!: number;</code> 确定赋值断言，TypeScript 编译器就会知道该属性会被明确地赋值。</p>
<h3 data-id="heading-37">四、类型守卫</h3>
<p><strong>类型保护是可执行运行时检查的一种表达式，用于确保该类型在一定的范围内。</strong> 换句话说，类型保护可以保证一个字符串是一个字符串，尽管它的值也可以是一个数值。类型保护与特性检测并不是完全不同，其主要思想是尝试检测属性、方法或原型，以确定如何处理值。目前主要有四种的方式来实现类型保护：</p>
<h4 data-id="heading-38">4.1 in 关键字</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Admin</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">privileges</span>: <span class="hljs-built_in">string</span>[];</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Employee</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-attr">startDate</span>: <span class="hljs-title class_">Date</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="9">}</span>
<span class="code-block-extension-codeLine" data-line-num="10"></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-keyword">type</span> <span class="hljs-title class_">UnknownEmployee</span> = <span class="hljs-title class_">Employee</span> | <span class="hljs-title class_">Admin</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="12"></span>
<span class="code-block-extension-codeLine" data-line-num="13"><span class="hljs-keyword">function</span> <span class="hljs-title function_">printEmployeeInformation</span>(<span class="hljs-params">emp: UnknownEmployee</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="14">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Name: "</span> + emp.<span class="hljs-property">name</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="15">  <span class="hljs-keyword">if</span> (<span class="hljs-string">"privileges"</span> <span class="hljs-keyword">in</span> emp) {</span>
<span class="code-block-extension-codeLine" data-line-num="16">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Privileges: "</span> + emp.<span class="hljs-property">privileges</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="17">  }</span>
<span class="code-block-extension-codeLine" data-line-num="18">  <span class="hljs-keyword">if</span> (<span class="hljs-string">"startDate"</span> <span class="hljs-keyword">in</span> emp) {</span>
<span class="code-block-extension-codeLine" data-line-num="19">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Start Date: "</span> + emp.<span class="hljs-property">startDate</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="20">  }</span>
<span class="code-block-extension-codeLine" data-line-num="21">}</span>
</code></pre>
<h4 data-id="heading-39">4.2 typeof 关键字</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">padLeft</span>(<span class="hljs-params">value: <span class="hljs-built_in">string</span>, padding: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">number</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> padding === <span class="hljs-string">"number"</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">      <span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>(padding + <span class="hljs-number">1</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">" "</span>) + value;</span>
<span class="code-block-extension-codeLine" data-line-num="4">  }</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> padding === <span class="hljs-string">"string"</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="6">      <span class="hljs-keyword">return</span> padding + value;</span>
<span class="code-block-extension-codeLine" data-line-num="7">  }</span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">`Expected string or number, got '<span class="hljs-subst">${padding}</span>'.`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="9">}</span>
</code></pre>
<p><code>typeof</code> 类型保护只支持两种形式：<code>typeof v === "typename"</code> 和 <code>typeof v !== typename</code>，<code>"typename"</code> 必须是 <code>"number"</code>， <code>"string"</code>， <code>"boolean"</code> 或 <code>"symbol"</code>。 但是 TypeScript 并不会阻止你与其它字符串比较，语言不会把那些表达式识别为类型保护。</p>
<h4 data-id="heading-40">4.3 instanceof 关键字</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Padder</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-title function_">getPaddingString</span>(): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
<span class="code-block-extension-codeLine" data-line-num="4"></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SpaceRepeatingPadder</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Padder</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> numSpaces: <span class="hljs-built_in">number</span></span>) {}</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-title function_">getPaddingString</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Array</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">numSpaces</span> + <span class="hljs-number">1</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">" "</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="9">  }</span>
<span class="code-block-extension-codeLine" data-line-num="10">}</span>
<span class="code-block-extension-codeLine" data-line-num="11"></span>
<span class="code-block-extension-codeLine" data-line-num="12"><span class="hljs-keyword">class</span> <span class="hljs-title class_">StringPadder</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Padder</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="13">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">private</span> value: <span class="hljs-built_in">string</span></span>) {}</span>
<span class="code-block-extension-codeLine" data-line-num="14">  <span class="hljs-title function_">getPaddingString</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="15">    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">value</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="16">  }</span>
<span class="code-block-extension-codeLine" data-line-num="17">}</span>
<span class="code-block-extension-codeLine" data-line-num="18"></span>
<span class="code-block-extension-codeLine" data-line-num="19"><span class="hljs-keyword">let</span> <span class="hljs-attr">padder</span>: <span class="hljs-title class_">Padder</span> = <span class="hljs-keyword">new</span> <span class="hljs-title class_">SpaceRepeatingPadder</span>(<span class="hljs-number">6</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="20"></span>
<span class="code-block-extension-codeLine" data-line-num="21"><span class="hljs-keyword">if</span> (padder <span class="hljs-keyword">instanceof</span> <span class="hljs-title class_">SpaceRepeatingPadder</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="22">  <span class="hljs-comment">// padder的类型收窄为 'SpaceRepeatingPadder'</span></span>
<span class="code-block-extension-codeLine" data-line-num="23">}</span>
</code></pre>
<h4 data-id="heading-41">4.4 自定义类型保护的类型谓词</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isNumber</span>(<span class="hljs-params">x: <span class="hljs-built_in">any</span></span>): x is <span class="hljs-built_in">number</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> x === <span class="hljs-string">"number"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
<span class="code-block-extension-codeLine" data-line-num="4"></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">function</span> <span class="hljs-title function_">isString</span>(<span class="hljs-params">x: <span class="hljs-built_in">any</span></span>): x is <span class="hljs-built_in">string</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-keyword">return</span> <span class="hljs-keyword">typeof</span> x === <span class="hljs-string">"string"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="7">}</span>
</code></pre>
<h3 data-id="heading-42">五、联合类型和类型别名</h3>
<h4 data-id="heading-43">5.1 联合类型</h4>
<p>联合类型通常与 <code>null</code> 或 <code>undefined</code> 一起使用：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">const</span> <span class="hljs-title function_">sayHello</span> = (<span class="hljs-params">name: <span class="hljs-built_in">string</span> | <span class="hljs-literal">undefined</span></span>) =&gt; {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-comment">/* ... */</span></span>
<span class="code-block-extension-codeLine" data-line-num="3">};</span>
</code></pre>
<p>例如，这里 <code>name</code> 的类型是 <code>string | undefined</code> 意味着可以将 <code>string</code> 或 <code>undefined</code> 的值传递给<code>sayHello</code> 函数。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-title function_">sayHello</span>(<span class="hljs-string">"semlinker"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-title function_">sayHello</span>(<span class="hljs-literal">undefined</span>);</span>
</code></pre>
<p>通过这个示例，你可以凭直觉知道类型 A 和类型 B 联合后的类型是同时接受 A 和 B 值的类型。此外，对于联合类型来说，你可能会遇到以下的用法：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">num</span>: <span class="hljs-number">1</span> | <span class="hljs-number">2</span> = <span class="hljs-number">1</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">type</span> <span class="hljs-title class_">EventNames</span> = <span class="hljs-string">'click'</span> | <span class="hljs-string">'scroll'</span> | <span class="hljs-string">'mousemove'</span>;</span>
</code></pre>
<p>以上示例中的 <code>1</code>、<code>2</code> 或 <code>'click'</code> 被称为字面量类型，用来约束取值只能是某几个值中的一个。</p>
<h4 data-id="heading-44">5.2 可辨识联合</h4>
<p>TypeScript 可辨识联合（Discriminated Unions）类型，也称为代数数据类型或标签联合类型。<strong>它包含 3 个要点：可辨识、联合类型和类型守卫。</strong></p>
<p>这种类型的本质是结合联合类型和字面量类型的一种类型保护方法。<strong>如果一个类型是多个类型的联合类型，且多个类型含有一个公共属性，那么就可以利用这个公共属性，来创建不同的类型保护区块。</strong></p>
<h5 data-id="heading-45">1.可辨识</h5>
<p>可辨识要求联合类型中的每个元素都含有一个单例类型属性，比如：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">enum</span> <span class="hljs-title class_">CarTransmission</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-title class_">Automatic</span> = <span class="hljs-number">200</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-title class_">Manual</span> = <span class="hljs-number">300</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Motorcycle</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-attr">vType</span>: <span class="hljs-string">"motorcycle"</span>; <span class="hljs-comment">// discriminant</span></span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-attr">make</span>: <span class="hljs-built_in">number</span>; <span class="hljs-comment">// year</span></span>
<span class="code-block-extension-codeLine" data-line-num="9">}</span>
<span class="code-block-extension-codeLine" data-line-num="10"></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Car</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-attr">vType</span>: <span class="hljs-string">"car"</span>; <span class="hljs-comment">// discriminant</span></span>
<span class="code-block-extension-codeLine" data-line-num="13">  <span class="hljs-attr">transmission</span>: <span class="hljs-title class_">CarTransmission</span></span>
<span class="code-block-extension-codeLine" data-line-num="14">}</span>
<span class="code-block-extension-codeLine" data-line-num="15"></span>
<span class="code-block-extension-codeLine" data-line-num="16"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Truck</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="17">  <span class="hljs-attr">vType</span>: <span class="hljs-string">"truck"</span>; <span class="hljs-comment">// discriminant</span></span>
<span class="code-block-extension-codeLine" data-line-num="18">  <span class="hljs-attr">capacity</span>: <span class="hljs-built_in">number</span>; <span class="hljs-comment">// in tons</span></span>
<span class="code-block-extension-codeLine" data-line-num="19">}</span>
</code></pre>
<p>在上述代码中，我们分别定义了 <code>Motorcycle</code>、 <code>Car</code> 和 <code>Truck</code> 三个接口，在这些接口中都包含一个 <code>vType</code> 属性，该属性被称为可辨识的属性，而其它的属性只跟特性的接口相关。</p>
<h5 data-id="heading-46">2.联合类型</h5>
<p>基于前面定义了三个接口，我们可以创建一个 <code>Vehicle</code> 联合类型：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Vehicle</span> = <span class="hljs-title class_">Motorcycle</span> | <span class="hljs-title class_">Car</span> | <span class="hljs-title class_">Truck</span>;</span>
</code></pre>
<p>现在我们就可以开始使用 <code>Vehicle</code> 联合类型，对于 <code>Vehicle</code> 类型的变量，它可以表示不同类型的车辆。</p>
<h5 data-id="heading-47">3.类型守卫</h5>
<p>下面我们来定义一个 <code>evaluatePrice</code> 方法，该方法用于根据车辆的类型、容量和评估因子来计算价格，具体实现如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">EVALUATION_FACTOR</span> = <span class="hljs-title class_">Math</span>.<span class="hljs-property">PI</span>; </span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">function</span> <span class="hljs-title function_">evaluatePrice</span>(<span class="hljs-params">vehicle: Vehicle</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-keyword">return</span> vehicle.<span class="hljs-property">capacity</span> * <span class="hljs-variable constant_">EVALUATION_FACTOR</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">}</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">const</span> <span class="hljs-attr">myTruck</span>: <span class="hljs-title class_">Truck</span> = { <span class="hljs-attr">vType</span>: <span class="hljs-string">"truck"</span>, <span class="hljs-attr">capacity</span>: <span class="hljs-number">9.5</span> };</span>
<span class="code-block-extension-codeLine" data-line-num="8">evaluatePrice(myTruck);</span>
</code></pre>
<p>对于以上代码，TypeScript 编译器将会提示以下错误信息：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">bash</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-bash code-block-extension-codeShowNum" lang="bash"><span class="code-block-extension-codeLine" data-line-num="1">Property <span class="hljs-string">'capacity'</span> does not exist on <span class="hljs-built_in">type</span> <span class="hljs-string">'Vehicle'</span>.</span>
<span class="code-block-extension-codeLine" data-line-num="2">Property <span class="hljs-string">'capacity'</span> does not exist on <span class="hljs-built_in">type</span> <span class="hljs-string">'Motorcycle'</span>.</span>
</code></pre>
<p>原因是在 Motorcycle 接口中，并不存在 <code>capacity</code> 属性，而对于 Car 接口来说，它也不存在 <code>capacity</code> 属性。那么，现在我们应该如何解决以上问题呢？这时，我们可以使用类型守卫。下面我们来重构一下前面定义的 <code>evaluatePrice</code> 方法，重构后的代码如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">evaluatePrice</span>(<span class="hljs-params">vehicle: Vehicle</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">switch</span>(vehicle.<span class="hljs-property">vType</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">    <span class="hljs-keyword">case</span> <span class="hljs-string">"car"</span>:</span>
<span class="code-block-extension-codeLine" data-line-num="4">      <span class="hljs-keyword">return</span> vehicle.<span class="hljs-property">transmission</span> * <span class="hljs-variable constant_">EVALUATION_FACTOR</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">    <span class="hljs-keyword">case</span> <span class="hljs-string">"truck"</span>:</span>
<span class="code-block-extension-codeLine" data-line-num="6">      <span class="hljs-keyword">return</span> vehicle.<span class="hljs-property">capacity</span> * <span class="hljs-variable constant_">EVALUATION_FACTOR</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-keyword">case</span> <span class="hljs-string">"motorcycle"</span>:</span>
<span class="code-block-extension-codeLine" data-line-num="8">      <span class="hljs-keyword">return</span> vehicle.<span class="hljs-property">make</span> * <span class="hljs-variable constant_">EVALUATION_FACTOR</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="9">  }</span>
<span class="code-block-extension-codeLine" data-line-num="10">}</span>
</code></pre>
<p>在以上代码中，我们使用 <code>switch</code> 和 <code>case</code> 运算符来实现类型守卫，从而确保在 <code>evaluatePrice</code> 方法中，我们可以安全地访问 <code>vehicle</code> 对象中的所包含的属性，来正确的计算该车辆类型所对应的价格。</p>
<h4 data-id="heading-48">5.3 类型别名</h4>
<p>类型别名用来给一个类型起个新名字。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Message</span> = <span class="hljs-built_in">string</span> | <span class="hljs-built_in">string</span>[];</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">let</span> <span class="hljs-title function_">greet</span> = (<span class="hljs-params">message: Message</span>) =&gt; {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-comment">// ...</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">};</span>
</code></pre>
<h3 data-id="heading-49">六、交叉类型</h3>
<p>在 TypeScript 中交叉类型是将多个类型合并为一个类型。通过 <code>&amp;</code> 运算符可以将现有的多种类型叠加到一起成为一种类型，它包含了所需的所有类型的特性。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">PartialPointX</span> = { <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; };</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Point</span> = <span class="hljs-title class_">PartialPointX</span> &amp; { <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; };</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-keyword">let</span> <span class="hljs-attr">point</span>: <span class="hljs-title class_">Point</span> = {</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-attr">x</span>: <span class="hljs-number">1</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-attr">y</span>: <span class="hljs-number">1</span></span>
<span class="code-block-extension-codeLine" data-line-num="7">}</span>
</code></pre>
<p>在上面代码中我们先定义了 <code>PartialPointX</code> 类型，接着使用 <code>&amp;</code> 运算符创建一个新的 <code>Point</code> 类型，表示一个含有 x 和 y 坐标的点，然后定义了一个 <code>Point</code> 类型的变量并初始化。</p>
<h4 data-id="heading-50">6.1 同名基础类型属性的合并</h4>
<p>那么现在问题来了，假设在合并多个类型的过程中，刚好出现某些类型存在相同的成员，但对应的类型又不一致，比如：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> X {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">c</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">d</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">interface</span> Y {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-attr">c</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-attr">e</span>: <span class="hljs-built_in">string</span></span>
<span class="code-block-extension-codeLine" data-line-num="9">}</span>
<span class="code-block-extension-codeLine" data-line-num="10"></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-keyword">type</span> <span class="hljs-variable constant_">XY</span> = X &amp; Y;</span>
<span class="code-block-extension-codeLine" data-line-num="12"><span class="hljs-keyword">type</span> <span class="hljs-variable constant_">YX</span> = Y &amp; X;</span>
<span class="code-block-extension-codeLine" data-line-num="13"></span>
<span class="code-block-extension-codeLine" data-line-num="14"><span class="hljs-keyword">let</span> <span class="hljs-attr">p</span>: <span class="hljs-variable constant_">XY</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="15"><span class="hljs-keyword">let</span> <span class="hljs-attr">q</span>: <span class="hljs-variable constant_">YX</span>;</span>
</code></pre>
<p>在上面的代码中，接口 X  和接口 Y 都含有一个相同的成员 c，但它们的类型不一致。对于这种情况，此时 XY 类型或 YX 类型中成员 c 的类型是不是可以是 <code>string</code> 或 <code>number</code> 类型呢？比如下面的例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1">p = { <span class="hljs-attr">c</span>: <span class="hljs-number">6</span>, <span class="hljs-attr">d</span>: <span class="hljs-string">"d"</span>, <span class="hljs-attr">e</span>: <span class="hljs-string">"e"</span> }; </span>
</code></pre>
<p><img src="./ts和js的区别_files/1bcfd462827046f1a4a5574de30780b2~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1">q = { <span class="hljs-attr">c</span>: <span class="hljs-string">"c"</span>, <span class="hljs-attr">d</span>: <span class="hljs-string">"d"</span>, <span class="hljs-attr">e</span>: <span class="hljs-string">"e"</span> }; </span>
</code></pre>
<p><img src="./ts和js的区别_files/1d4f87c84ea647308cac5393fdfa958a~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>为什么接口 X 和接口 Y 混入后，成员 c 的类型会变成 <code>never</code> 呢？这是因为混入后成员 c 的类型为 <code>string &amp; number</code>，即成员 c 的类型既可以是 <code>string</code> 类型又可以是 <code>number</code> 类型。很明显这种类型是不存在的，所以混入后成员 c 的类型为 <code>never</code>。</p>
<h4 data-id="heading-51">6.2 同名非基础类型属性的合并</h4>
<p>在上面示例中，刚好接口 X 和接口 Y 中内部成员 c 的类型都是基本数据类型，那么如果是非基本数据类型的话，又会是什么情形。我们来看个具体的例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> D { <span class="hljs-attr">d</span>: <span class="hljs-built_in">boolean</span>; }</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">interface</span> E { <span class="hljs-attr">e</span>: <span class="hljs-built_in">string</span>; }</span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">interface</span> F { <span class="hljs-attr">f</span>: <span class="hljs-built_in">number</span>; }</span>
<span class="code-block-extension-codeLine" data-line-num="4"></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">interface</span> A { <span class="hljs-attr">x</span>: D; }</span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">interface</span> B { <span class="hljs-attr">x</span>: E; }</span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">interface</span> C { <span class="hljs-attr">x</span>: F; }</span>
<span class="code-block-extension-codeLine" data-line-num="8"></span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-keyword">type</span> <span class="hljs-variable constant_">ABC</span> = A &amp; B &amp; C;</span>
<span class="code-block-extension-codeLine" data-line-num="10"></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-keyword">let</span> <span class="hljs-attr">abc</span>: <span class="hljs-variable constant_">ABC</span> = {</span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-attr">x</span>: {</span>
<span class="code-block-extension-codeLine" data-line-num="13">    <span class="hljs-attr">d</span>: <span class="hljs-literal">true</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="14">    <span class="hljs-attr">e</span>: <span class="hljs-string">'semlinker'</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="15">    <span class="hljs-attr">f</span>: <span class="hljs-number">666</span></span>
<span class="code-block-extension-codeLine" data-line-num="16">  }</span>
<span class="code-block-extension-codeLine" data-line-num="17">};</span>
<span class="code-block-extension-codeLine" data-line-num="18"></span>
<span class="code-block-extension-codeLine" data-line-num="19"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">'abc:'</span>, abc);</span>
</code></pre>
<p>以上代码成功运行后，控制台会输出以下结果：</p>
<p><img src="./ts和js的区别_files/9c7f386c9857412e8e464f13492d4068~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>由上图可知，在混入多个类型时，若存在相同的成员，且成员类型为非基本数据类型，那么是可以成功合并。</p>
<h3 data-id="heading-52">七、TypeScript 函数</h3>
<h4 data-id="heading-53">7.1 TypeScript 函数与 JavaScript 函数的区别</h4>





































<table><thead><tr><th>TypeScript</th><th>JavaScript</th></tr></thead><tbody><tr><td>含有类型</td><td>无类型</td></tr><tr><td>箭头函数</td><td>箭头函数（ES2015）</td></tr><tr><td>函数类型</td><td>无函数类型</td></tr><tr><td>必填和可选参数</td><td>所有参数都是可选的</td></tr><tr><td>默认参数</td><td>默认参数</td></tr><tr><td>剩余参数</td><td>剩余参数</td></tr><tr><td>函数重载</td><td>无函数重载</td></tr></tbody></table>
<h4 data-id="heading-54">7.2 箭头函数</h4>
<h5 data-id="heading-55">1.常见语法</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1">myBooks.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">'reading'</span>));</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3">myBooks.<span class="hljs-title function_">forEach</span>(<span class="hljs-function"><span class="hljs-params">title</span> =&gt;</span> <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(title));</span>
<span class="code-block-extension-codeLine" data-line-num="4"></span>
<span class="code-block-extension-codeLine" data-line-num="5">myBooks.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">title, idx, arr</span>) =&gt;</span></span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(idx + <span class="hljs-string">'-'</span> + title);</span>
<span class="code-block-extension-codeLine" data-line-num="7">);</span>
<span class="code-block-extension-codeLine" data-line-num="8"></span>
<span class="code-block-extension-codeLine" data-line-num="9">myBooks.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">title, idx, arr</span>) =&gt;</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="10">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(idx + <span class="hljs-string">'-'</span> + title);</span>
<span class="code-block-extension-codeLine" data-line-num="11">});</span>
</code></pre>
<h5 data-id="heading-56">2.使用示例</h5>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// 未使用箭头函数</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Book</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-keyword">let</span> self = <span class="hljs-variable language_">this</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">  self.<span class="hljs-property">publishDate</span> = <span class="hljs-number">2016</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-built_in">setInterval</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="6">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(self.<span class="hljs-property">publishDate</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="7">  }, <span class="hljs-number">1000</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="8">}</span>
<span class="code-block-extension-codeLine" data-line-num="9"></span>
<span class="code-block-extension-codeLine" data-line-num="10"><span class="hljs-comment">// 使用箭头函数</span></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Book</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-variable language_">this</span>.<span class="hljs-property">publishDate</span> = <span class="hljs-number">2016</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="13">  <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="14">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">publishDate</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="15">  }, <span class="hljs-number">1000</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="16">}</span>
</code></pre>
<h4 data-id="heading-57">7.3 参数类型和返回类型</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">createUserId</span>(<span class="hljs-params">name: <span class="hljs-built_in">string</span>, id: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">string</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">return</span> name + id;</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
</code></pre>
<h4 data-id="heading-58">7.4 函数类型</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-title class_">IdGenerator</span>: <span class="hljs-function">(<span class="hljs-params">chars: <span class="hljs-built_in">string</span>, nums: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">function</span> <span class="hljs-title function_">createUserId</span>(<span class="hljs-params">name: <span class="hljs-built_in">string</span>, id: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">string</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-keyword">return</span> name + id;</span>
<span class="code-block-extension-codeLine" data-line-num="5">}</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-title class_">IdGenerator</span> = createUserId;</span>
</code></pre>
<h4 data-id="heading-59">7.5 可选参数及默认参数</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// 可选参数</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">function</span> <span class="hljs-title function_">createUserId</span>(<span class="hljs-params">name: <span class="hljs-built_in">string</span>, id: <span class="hljs-built_in">number</span>, age?: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">string</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-keyword">return</span> name + id;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-comment">// 默认参数</span></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">function</span> <span class="hljs-title function_">createUserId</span>(<span class="hljs-params"></span></span>
<span class="code-block-extension-codeLine" data-line-num="8">  name: <span class="hljs-built_in">string</span> = <span class="hljs-string">"semlinker"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="9">  id: <span class="hljs-built_in">number</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="10">  age?: <span class="hljs-built_in">number</span></span>
<span class="code-block-extension-codeLine" data-line-num="11">): <span class="hljs-built_in">string</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-keyword">return</span> name + id;</span>
<span class="code-block-extension-codeLine" data-line-num="13">}</span>
</code></pre>
<p>在声明函数时，可以通过 <code>?</code> 号来定义可选参数，比如 <code>age?: number</code> 这种形式。<strong>在实际使用时，需要注意的是可选参数要放在普通参数的后面，不然会导致编译错误</strong>。</p>
<h4 data-id="heading-60">7.6 剩余参数</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">push</span>(<span class="hljs-params">array, ...items</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  items.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span> (<span class="hljs-params">item</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">    array.<span class="hljs-title function_">push</span>(item);</span>
<span class="code-block-extension-codeLine" data-line-num="4">  });</span>
<span class="code-block-extension-codeLine" data-line-num="5">}</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">let</span> a = [];</span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-title function_">push</span>(a, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>);</span>
</code></pre>
<h4 data-id="heading-61">7.7 函数重载</h4>
<p>函数重载或方法重载是使用相同名称和不同参数数量或类型创建多个方法的一种能力。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a: <span class="hljs-built_in">string</span>, b: <span class="hljs-built_in">string</span></span>): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a: <span class="hljs-built_in">string</span>, b: <span class="hljs-built_in">number</span></span>): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a: <span class="hljs-built_in">number</span>, b: <span class="hljs-built_in">string</span></span>): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a: Combinable, b: Combinable</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-comment">// type Combinable = string | number;</span></span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> a === <span class="hljs-string">'string'</span> || <span class="hljs-keyword">typeof</span> b === <span class="hljs-string">'string'</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">toString</span>() + b.<span class="hljs-title function_">toString</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="9">  }</span>
<span class="code-block-extension-codeLine" data-line-num="10">  <span class="hljs-keyword">return</span> a + b;</span>
<span class="code-block-extension-codeLine" data-line-num="11">}</span>
</code></pre>
<p>在以上代码中，我们为 add 函数提供了多个函数类型定义，从而实现函数的重载。在 TypeScript 中除了可以重载普通函数之外，我们还可以重载类中的成员方法。</p>
<p>方法重载是指在同一个类中方法同名，参数不同（参数类型不同、参数个数不同或参数个数相同时参数的先后顺序不同），调用时根据实参的形式，选择与它匹配的方法执行操作的一种技术。所以类中成员方法满足重载的条件是：在同一个类中，方法名相同且参数列表不同。下面我们来举一个成员方法重载的例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Calculator</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-title function_">add</span>(<span class="hljs-attr">a</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">b</span>: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-title function_">add</span>(<span class="hljs-attr">a</span>: <span class="hljs-built_in">string</span>, <span class="hljs-attr">b</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-title function_">add</span>(<span class="hljs-attr">a</span>: <span class="hljs-built_in">string</span>, <span class="hljs-attr">b</span>: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-title function_">add</span>(<span class="hljs-attr">a</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">b</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-title function_">add</span>(<span class="hljs-params">a: Combinable, b: Combinable</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> a === <span class="hljs-string">'string'</span> || <span class="hljs-keyword">typeof</span> b === <span class="hljs-string">'string'</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-keyword">return</span> a.<span class="hljs-title function_">toString</span>() + b.<span class="hljs-title function_">toString</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="9">  }</span>
<span class="code-block-extension-codeLine" data-line-num="10">    <span class="hljs-keyword">return</span> a + b;</span>
<span class="code-block-extension-codeLine" data-line-num="11">  }</span>
<span class="code-block-extension-codeLine" data-line-num="12">}</span>
<span class="code-block-extension-codeLine" data-line-num="13"></span>
<span class="code-block-extension-codeLine" data-line-num="14"><span class="hljs-keyword">const</span> calculator = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Calculator</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="15"><span class="hljs-keyword">const</span> result = calculator.<span class="hljs-title function_">add</span>(<span class="hljs-string">'Semlinker'</span>, <span class="hljs-string">' Kakuqo'</span>);</span>
</code></pre>
<p>这里需要注意的是，当 TypeScript 编译器处理函数重载时，它会查找重载列表，尝试使用第一个重载定义。 如果匹配的话就使用这个。 因此，在定义重载的时候，一定要把最精确的定义放在最前面。另外在 Calculator 类中，<code>add(a: Combinable, b: Combinable){ }</code> 并不是重载列表的一部分，因此对于 add 成员方法来说，我们只定义了四个重载方法。</p>
<h3 data-id="heading-62">八、TypeScript 数组</h3>
<h4 data-id="heading-63">8.1 数组解构</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; <span class="hljs-keyword">let</span> <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; <span class="hljs-keyword">let</span> <span class="hljs-attr">z</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">let</span> five_array = [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="3">[x,y,z] = five_array;</span>
</code></pre>
<h4 data-id="heading-64">8.2 数组展开运算符</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> two_array = [<span class="hljs-number">0</span>, <span class="hljs-number">1</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">let</span> five_array = [...two_array, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>];</span>
</code></pre>
<h4 data-id="heading-65">8.3 数组遍历</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">colors</span>: <span class="hljs-built_in">string</span>[] = [<span class="hljs-string">"red"</span>, <span class="hljs-string">"green"</span>, <span class="hljs-string">"blue"</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i <span class="hljs-keyword">of</span> colors) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(i);</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
</code></pre>
<h3 data-id="heading-66">九、TypeScript 对象</h3>
<h4 data-id="heading-67">9.1 对象解构</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> person = {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">name</span>: <span class="hljs-string">"Semlinker"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">gender</span>: <span class="hljs-string">"Male"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="4">};</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">let</span> { name, gender } = person;</span>
</code></pre>
<h4 data-id="heading-68">9.2 对象展开运算符</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> person = {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">name</span>: <span class="hljs-string">"Semlinker"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">gender</span>: <span class="hljs-string">"Male"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-attr">address</span>: <span class="hljs-string">"Xiamen"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="5">};</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-comment">// 组装对象</span></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">let</span> personWithAge = { ...person, <span class="hljs-attr">age</span>: <span class="hljs-number">33</span> };</span>
<span class="code-block-extension-codeLine" data-line-num="9"></span>
<span class="code-block-extension-codeLine" data-line-num="10"><span class="hljs-comment">// 获取除了某些项外的其它项</span></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-keyword">let</span> { name, ...rest } = person;</span>
</code></pre>
<h3 data-id="heading-69">十、TypeScript 接口</h3>
<p>在面向对象语言中，接口是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类去实现。</p>
<p>TypeScript 中的接口是一个非常灵活的概念，除了可用于<a href="https://link.juejin.cn/?target=https%3A%2F%2Fts.xcatliu.com%2Fadvanced%2Fclass-and-interfaces.html%23%25E7%25B1%25BB%25E5%25AE%259E%25E7%258E%25B0%25E6%258E%25A5%25E5%258F%25A3" target="_blank" title="https://ts.xcatliu.com/advanced/class-and-interfaces.html#%E7%B1%BB%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3" ref="nofollow noopener noreferrer">对类的一部分行为进行抽象</a>以外，也常用于对「对象的形状（Shape）」进行描述。</p>
<h4 data-id="heading-70">10.1 对象的形状</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">age</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">let</span> <span class="hljs-attr">semlinker</span>: <span class="hljs-title class_">Person</span> = {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-attr">name</span>: <span class="hljs-string">"semlinker"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-attr">age</span>: <span class="hljs-number">33</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="9">};</span>
</code></pre>
<h4 data-id="heading-71">10.2 可选 | 只读属性</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">readonly</span> <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  age?: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
</code></pre>
<p>只读属性用于限制只能在对象刚刚创建的时候修改其值。此外 TypeScript 还提供了 <code>ReadonlyArray&lt;T&gt;</code> 类型，它与 <code>Array&lt;T&gt;</code> 相似，只是把所有可变方法去掉了，因此可以确保数组创建后再也不能被修改。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> <span class="hljs-attr">a</span>: <span class="hljs-built_in">number</span>[] = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">let</span> <span class="hljs-attr">ro</span>: <span class="hljs-title class_">ReadonlyArray</span>&lt;<span class="hljs-built_in">number</span>&gt; = a;</span>
<span class="code-block-extension-codeLine" data-line-num="3">ro[<span class="hljs-number">0</span>] = <span class="hljs-number">12</span>; <span class="hljs-comment">// error!</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">ro.<span class="hljs-title function_">push</span>(<span class="hljs-number">5</span>); <span class="hljs-comment">// error!</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">ro.<span class="hljs-property">length</span> = <span class="hljs-number">100</span>; <span class="hljs-comment">// error!</span></span>
<span class="code-block-extension-codeLine" data-line-num="6">a = ro; <span class="hljs-comment">// error!</span></span>
</code></pre>
<h4 data-id="heading-72">10.3 任意属性</h4>
<p>有时候我们希望一个接口中除了包含必选和可选属性之外，还允许有其他的任意属性，这时我们可以使用 <strong>索引签名</strong> 的形式来满足上述要求。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  age?: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">  [<span class="hljs-attr">propName</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">}</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">const</span> p1 = { <span class="hljs-attr">name</span>: <span class="hljs-string">"semlinker"</span> };</span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">const</span> p2 = { <span class="hljs-attr">name</span>: <span class="hljs-string">"lolo"</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">5</span> };</span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-keyword">const</span> p3 = { <span class="hljs-attr">name</span>: <span class="hljs-string">"kakuqo"</span>, <span class="hljs-attr">sex</span>: <span class="hljs-number">1</span> }</span>
</code></pre>
<h4 data-id="heading-73">10.4 接口与类型别名的区别</h4>
<h5 data-id="heading-74">1.Objects/Functions</h5>
<p>接口和类型别名都可以用来描述对象的形状或函数签名：</p>
<p><strong>接口</strong></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Point</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">SetPoint</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  (<span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>, <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">void</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">}</span>
</code></pre>
<p><strong>类型别名</strong></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Point</span> = {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">};</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">type</span> <span class="hljs-title class_">SetPoint</span> = <span class="hljs-function">(<span class="hljs-params">x: <span class="hljs-built_in">number</span>, y: <span class="hljs-built_in">number</span></span>) =&gt;</span> <span class="hljs-built_in">void</span>;</span>
</code></pre>
<h5 data-id="heading-75">2.Other Types</h5>
<p>与接口类型不一样，类型别名可以用于一些其他类型，比如原始类型、联合类型和元组：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// primitive</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Name</span> = <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-comment">// object</span></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">type</span> <span class="hljs-title class_">PartialPointX</span> = { <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; };</span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">type</span> <span class="hljs-title class_">PartialPointY</span> = { <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; };</span>
<span class="code-block-extension-codeLine" data-line-num="7"></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-comment">// union</span></span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-keyword">type</span> <span class="hljs-title class_">PartialPoint</span> = <span class="hljs-title class_">PartialPointX</span> | <span class="hljs-title class_">PartialPointY</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="10"></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-comment">// tuple</span></span>
<span class="code-block-extension-codeLine" data-line-num="12"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Data</span> = [<span class="hljs-built_in">number</span>, <span class="hljs-built_in">string</span>];</span>
</code></pre>
<h5 data-id="heading-76">3.Extend</h5>
<p>接口和类型别名都能够被扩展，但语法有所不同。此外，接口和类型别名不是互斥的。接口可以扩展类型别名，而反过来是不行的。</p>
<p><strong>Interface extends interface</strong></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">PartialPointX</span> { <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; }</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Point</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PartialPointX</span> { </span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; </span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
</code></pre>
<p><strong>Type alias extends type alias</strong></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">PartialPointX</span> = { <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; };</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Point</span> = <span class="hljs-title class_">PartialPointX</span> &amp; { <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; };</span>
</code></pre>
<p><strong>Interface extends type alias</strong></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">PartialPointX</span> = { <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; };</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Point</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">PartialPointX</span> { <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; }</span>
</code></pre>
<p><strong>Type alias extends interface</strong></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">PartialPointX</span> { <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; }</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Point</span> = <span class="hljs-title class_">PartialPointX</span> &amp; { <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; };</span>
</code></pre>
<h5 data-id="heading-77">4.Implements</h5>
<p>类可以以相同的方式实现接口或类型别名，但类不能实现使用类型别名定义的联合类型：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Point</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SomePoint</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Point</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  x = <span class="hljs-number">1</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">  y = <span class="hljs-number">2</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="9">}</span>
<span class="code-block-extension-codeLine" data-line-num="10"></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Point2</span> = {</span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="13">  <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="14">};</span>
<span class="code-block-extension-codeLine" data-line-num="15"></span>
<span class="code-block-extension-codeLine" data-line-num="16"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SomePoint2</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Point2</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="17">  x = <span class="hljs-number">1</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="18">  y = <span class="hljs-number">2</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="19">}</span>
<span class="code-block-extension-codeLine" data-line-num="20"></span>
<span class="code-block-extension-codeLine" data-line-num="21"><span class="hljs-keyword">type</span> <span class="hljs-title class_">PartialPoint</span> = { <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; } | { <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; };</span>
<span class="code-block-extension-codeLine" data-line-num="22"></span>
<span class="code-block-extension-codeLine" data-line-num="23"><span class="hljs-comment">// A class can only implement an object type or </span></span>
<span class="code-block-extension-codeLine" data-line-num="24"><span class="hljs-comment">// intersection of object types with statically known members.</span></span>
<span class="code-block-extension-codeLine" data-line-num="25"><span class="hljs-keyword">class</span> <span class="hljs-title class_">SomePartialPoint</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">PartialPoint</span> { <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="26">  x = <span class="hljs-number">1</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="27">  y = <span class="hljs-number">2</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="28">}</span>
</code></pre>
<h5 data-id="heading-78">5.Declaration merging</h5>
<p>与类型别名不同，接口可以定义多次，会被自动合并为单个接口。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Point</span> { <span class="hljs-attr">x</span>: <span class="hljs-built_in">number</span>; }</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Point</span> { <span class="hljs-attr">y</span>: <span class="hljs-built_in">number</span>; }</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-keyword">const</span> <span class="hljs-attr">point</span>: <span class="hljs-title class_">Point</span> = { <span class="hljs-attr">x</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">y</span>: <span class="hljs-number">2</span> };</span>
</code></pre>
<h3 data-id="heading-79">十一、TypeScript 类</h3>
<h4 data-id="heading-80">11.1 类的属性与方法</h4>
<p>在面向对象语言中，类是一种面向对象计算机编程语言的构造，是创建对象的蓝图，描述了所创建的对象共同的属性和方法。</p>
<p>在 TypeScript 中，我们可以通过 <code>Class</code> 关键字来定义一个类：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Greeter</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-comment">// 静态属性</span></span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-keyword">static</span> <span class="hljs-attr">cname</span>: <span class="hljs-built_in">string</span> = <span class="hljs-string">"Greeter"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-comment">// 成员属性</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-attr">greeting</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-comment">// 构造函数 - 执行初始化操作</span></span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">message: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">greeting</span> = message;</span>
<span class="code-block-extension-codeLine" data-line-num="10">  }</span>
<span class="code-block-extension-codeLine" data-line-num="11"></span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-comment">// 静态方法</span></span>
<span class="code-block-extension-codeLine" data-line-num="13">  <span class="hljs-keyword">static</span> <span class="hljs-title function_">getClassName</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="14">    <span class="hljs-keyword">return</span> <span class="hljs-string">"Class name is Greeter"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="15">  }</span>
<span class="code-block-extension-codeLine" data-line-num="16"></span>
<span class="code-block-extension-codeLine" data-line-num="17">  <span class="hljs-comment">// 成员方法</span></span>
<span class="code-block-extension-codeLine" data-line-num="18">  <span class="hljs-title function_">greet</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="19">    <span class="hljs-keyword">return</span> <span class="hljs-string">"Hello, "</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">greeting</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="20">  }</span>
<span class="code-block-extension-codeLine" data-line-num="21">}</span>
<span class="code-block-extension-codeLine" data-line-num="22"></span>
<span class="code-block-extension-codeLine" data-line-num="23"><span class="hljs-keyword">let</span> greeter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Greeter</span>(<span class="hljs-string">"world"</span>);</span>
</code></pre>
<p>那么成员属性与静态属性，成员方法与静态方法有什么区别呢？这里无需过多解释，我们直接看一下编译生成的 ES5 代码：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">javascript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-javascript code-block-extension-codeShowNum" lang="javascript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-meta">"use strict"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-keyword">var</span> <span class="hljs-title class_">Greeter</span> = <span class="hljs-comment">/** <span class="hljs-doctag">@class</span> */</span> (<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">    <span class="hljs-comment">// 构造函数 - 执行初始化操作</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">    <span class="hljs-keyword">function</span> <span class="hljs-title function_">Greeter</span>(<span class="hljs-params">message</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="5">      <span class="hljs-variable language_">this</span>.<span class="hljs-property">greeting</span> = message;</span>
<span class="code-block-extension-codeLine" data-line-num="6">    }</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-comment">// 静态方法</span></span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-title class_">Greeter</span>.<span class="hljs-property">getClassName</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="9">      <span class="hljs-keyword">return</span> <span class="hljs-string">"Class name is Greeter"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="10">    };</span>
<span class="code-block-extension-codeLine" data-line-num="11">    <span class="hljs-comment">// 成员方法</span></span>
<span class="code-block-extension-codeLine" data-line-num="12">    <span class="hljs-title class_">Greeter</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">greet</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="13">      <span class="hljs-keyword">return</span> <span class="hljs-string">"Hello, "</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">greeting</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="14">    };</span>
<span class="code-block-extension-codeLine" data-line-num="15">    <span class="hljs-comment">// 静态属性</span></span>
<span class="code-block-extension-codeLine" data-line-num="16">    <span class="hljs-title class_">Greeter</span>.<span class="hljs-property">cname</span> = <span class="hljs-string">"Greeter"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="17">    <span class="hljs-keyword">return</span> <span class="hljs-title class_">Greeter</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="18">}());</span>
<span class="code-block-extension-codeLine" data-line-num="19"><span class="hljs-keyword">var</span> greeter = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Greeter</span>(<span class="hljs-string">"world"</span>);</span>
</code></pre>
<h4 data-id="heading-81">11.2 ECMAScript 私有字段</h4>
<p>在 TypeScript 3.8 版本就开始支持<strong>ECMAScript 私有字段</strong>，使用方式如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  #<span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="5">    <span class="hljs-variable language_">this</span>.#name = name;</span>
<span class="code-block-extension-codeLine" data-line-num="6">  }</span>
<span class="code-block-extension-codeLine" data-line-num="7"></span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-title function_">greet</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Hello, my name is <span class="hljs-subst">${<span class="hljs-variable language_">this</span>.#name}</span>!`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="10">  }</span>
<span class="code-block-extension-codeLine" data-line-num="11">}</span>
<span class="code-block-extension-codeLine" data-line-num="12"></span>
<span class="code-block-extension-codeLine" data-line-num="13"><span class="hljs-keyword">let</span> semlinker = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">"Semlinker"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="14"></span>
<span class="code-block-extension-codeLine" data-line-num="15">semlinker.#name;</span>
<span class="code-block-extension-codeLine" data-line-num="16"><span class="hljs-comment">//     ~~~~~</span></span>
<span class="code-block-extension-codeLine" data-line-num="17"><span class="hljs-comment">// Property '#name' is not accessible outside class 'Person'</span></span>
<span class="code-block-extension-codeLine" data-line-num="18"><span class="hljs-comment">// because it has a private identifier.</span></span>
</code></pre>
<p>与常规属性（甚至使用 <code>private</code> 修饰符声明的属性）不同，私有字段要牢记以下规则：</p>
<ul>
<li>私有字段以 <code>#</code> 字符开头，有时我们称之为私有名称；</li>
<li>每个私有字段名称都唯一地限定于其包含的类；</li>
<li>不能在私有字段上使用 TypeScript 可访问性修饰符（如 public 或 private）；</li>
<li>私有字段不能在包含的类之外访问，甚至不能被检测到。</li>
</ul>
<h4 data-id="heading-82">11.3 访问器</h4>
<p>在 TypeScript 中，我们可以通过 <code>getter</code> 和 <code>setter</code> 方法来实现数据的封装和有效性校验，防止出现异常数据。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">let</span> passcode = <span class="hljs-string">"Hello TypeScript"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Employee</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-keyword">private</span> <span class="hljs-attr">_fullName</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-keyword">get</span> <span class="hljs-title function_">fullName</span>(): <span class="hljs-built_in">string</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-keyword">return</span> <span class="hljs-variable language_">this</span>.<span class="hljs-property">_fullName</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">  }</span>
<span class="code-block-extension-codeLine" data-line-num="9"></span>
<span class="code-block-extension-codeLine" data-line-num="10">  <span class="hljs-keyword">set</span> <span class="hljs-title function_">fullName</span>(<span class="hljs-params">newName: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="11">    <span class="hljs-keyword">if</span> (passcode &amp;&amp; passcode == <span class="hljs-string">"Hello TypeScript"</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="12">      <span class="hljs-variable language_">this</span>.<span class="hljs-property">_fullName</span> = newName;</span>
<span class="code-block-extension-codeLine" data-line-num="13">    } <span class="hljs-keyword">else</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="14">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Error: Unauthorized update of employee!"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="15">    }</span>
<span class="code-block-extension-codeLine" data-line-num="16">  }</span>
<span class="code-block-extension-codeLine" data-line-num="17">}</span>
<span class="code-block-extension-codeLine" data-line-num="18"></span>
<span class="code-block-extension-codeLine" data-line-num="19"><span class="hljs-keyword">let</span> employee = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Employee</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="20">employee.<span class="hljs-property">fullName</span> = <span class="hljs-string">"Semlinker"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="21"><span class="hljs-keyword">if</span> (employee.<span class="hljs-property">fullName</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="22">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(employee.<span class="hljs-property">fullName</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="23">}</span>
</code></pre>
<h4 data-id="heading-83">11.4 类的继承</h4>
<p>继承（Inheritance）是一种联结类与类的层次模型。指的是一个类（称为子类、子接口）继承另外的一个类（称为父类、父接口）的功能，并可以增加它自己的新功能的能力，继承是类与类或者接口与接口之间最常见的关系。</p>
<p>继承是一种 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fzh.wikipedia.org%2Fwiki%2FIs-a" target="_blank" title="https://zh.wikipedia.org/wiki/Is-a" ref="nofollow noopener noreferrer">is-a </a> 关系：</p>
<p><img src="./ts和js的区别_files/3c5e414249974e59a7486aa8beaf6746~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>在 TypeScript 中，我们可以通过 <code>extends</code> 关键字来实现继承：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Animal</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  </span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">theName: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="5">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = theName;</span>
<span class="code-block-extension-codeLine" data-line-num="6">  }</span>
<span class="code-block-extension-codeLine" data-line-num="7">  </span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-title function_">move</span>(<span class="hljs-params">distanceInMeters: <span class="hljs-built_in">number</span> = <span class="hljs-number">0</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-variable language_">this</span>.name}</span> moved <span class="hljs-subst">${distanceInMeters}</span>m.`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="10">  }</span>
<span class="code-block-extension-codeLine" data-line-num="11">}</span>
<span class="code-block-extension-codeLine" data-line-num="12"></span>
<span class="code-block-extension-codeLine" data-line-num="13"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Snake</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Animal</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="14">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="15">    <span class="hljs-variable language_">super</span>(name); <span class="hljs-comment">// 调用父类的构造函数</span></span>
<span class="code-block-extension-codeLine" data-line-num="16">  }</span>
<span class="code-block-extension-codeLine" data-line-num="17">  </span>
<span class="code-block-extension-codeLine" data-line-num="18">  <span class="hljs-title function_">move</span>(<span class="hljs-params">distanceInMeters = <span class="hljs-number">5</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="19">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Slithering..."</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="20">    <span class="hljs-variable language_">super</span>.<span class="hljs-title function_">move</span>(distanceInMeters);</span>
<span class="code-block-extension-codeLine" data-line-num="21">  }</span>
<span class="code-block-extension-codeLine" data-line-num="22">}</span>
<span class="code-block-extension-codeLine" data-line-num="23"></span>
<span class="code-block-extension-codeLine" data-line-num="24"><span class="hljs-keyword">let</span> sam = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Snake</span>(<span class="hljs-string">"Sammy the Python"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="25">sam.<span class="hljs-title function_">move</span>();</span>
</code></pre>
<h4 data-id="heading-84">11.5 抽象类</h4>
<p>使用 <code>abstract</code> 关键字声明的类，我们称之为抽象类。抽象类不能被实例化，因为它里面包含一个或多个抽象方法。所谓的抽象方法，是指不包含具体实现的方法：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> name: <span class="hljs-built_in">string</span></span>){}</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-keyword">abstract</span> <span class="hljs-title function_">say</span>(<span class="hljs-attr">words</span>: <span class="hljs-built_in">string</span>) :<span class="hljs-built_in">void</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="5">}</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-comment">// Cannot create an instance of an abstract class.(2511)</span></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">const</span> lolo = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(); <span class="hljs-comment">// Error</span></span>
</code></pre>
<p>抽象类不能被直接实例化，我们只能实例化实现了所有抽象方法的子类。具体如下所示：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-keyword">public</span> name: <span class="hljs-built_in">string</span></span>){}</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-comment">// 抽象方法</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">  <span class="hljs-keyword">abstract</span> <span class="hljs-title function_">say</span>(<span class="hljs-attr">words</span>: <span class="hljs-built_in">string</span>) :<span class="hljs-built_in">void</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="6">}</span>
<span class="code-block-extension-codeLine" data-line-num="7"></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Developer</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="9">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="10">    <span class="hljs-variable language_">super</span>(name);</span>
<span class="code-block-extension-codeLine" data-line-num="11">  }</span>
<span class="code-block-extension-codeLine" data-line-num="12">  </span>
<span class="code-block-extension-codeLine" data-line-num="13">  <span class="hljs-title function_">say</span>(<span class="hljs-attr">words</span>: <span class="hljs-built_in">string</span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="14">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`<span class="hljs-subst">${<span class="hljs-variable language_">this</span>.name}</span> says <span class="hljs-subst">${words}</span>`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="15">  }</span>
<span class="code-block-extension-codeLine" data-line-num="16">}</span>
<span class="code-block-extension-codeLine" data-line-num="17"></span>
<span class="code-block-extension-codeLine" data-line-num="18"><span class="hljs-keyword">const</span> lolo = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Developer</span>(<span class="hljs-string">"lolo"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="19">lolo.<span class="hljs-title function_">say</span>(<span class="hljs-string">"I love ts!"</span>); <span class="hljs-comment">// lolo says I love ts!</span></span>
</code></pre>
<h4 data-id="heading-85">11.6 类方法重载</h4>
<p>在前面的章节，我们已经介绍了函数重载。对于类的方法来说，它也支持重载。比如，在以下示例中我们重载了 <code>ProductService</code> 类的 <code>getProducts</code> 成员方法：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductService</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">    <span class="hljs-title function_">getProducts</span>(): <span class="hljs-built_in">void</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">    <span class="hljs-title function_">getProducts</span>(<span class="hljs-attr">id</span>: <span class="hljs-built_in">number</span>): <span class="hljs-built_in">void</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">    <span class="hljs-title function_">getProducts</span>(<span class="hljs-params">id?: <span class="hljs-built_in">number</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="5">      <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> id === <span class="hljs-string">'number'</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="6">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`获取id为 <span class="hljs-subst">${id}</span> 的产品信息`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="7">      } <span class="hljs-keyword">else</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="8">          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`获取所有的产品信息`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="9">      }  </span>
<span class="code-block-extension-codeLine" data-line-num="10">    }</span>
<span class="code-block-extension-codeLine" data-line-num="11">}</span>
<span class="code-block-extension-codeLine" data-line-num="12"></span>
<span class="code-block-extension-codeLine" data-line-num="13"><span class="hljs-keyword">const</span> productService = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ProductService</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="14">productService.<span class="hljs-title function_">getProducts</span>(<span class="hljs-number">666</span>); <span class="hljs-comment">// 获取id为 666 的产品信息</span></span>
<span class="code-block-extension-codeLine" data-line-num="15">productService.<span class="hljs-title function_">getProducts</span>(); <span class="hljs-comment">// 获取所有的产品信息 </span></span>
</code></pre>
<h3 data-id="heading-86">十二、TypeScript 泛型</h3>
<p>软件工程中，我们不仅要创建一致的定义良好的 API，同时也要考虑可重用性。 组件不仅能够支持当前的数据类型，同时也能支持未来的数据类型，这在创建大型系统时为你提供了十分灵活的功能。</p>
<p><strong>在像 C# 和 Java 这样的语言中，可以使用泛型来创建可重用的组件，一个组件可以支持多种类型的数据。 这样用户就可以以自己的数据类型来使用组件。</strong></p>
<p>设计泛型的关键目的是在成员之间提供有意义的约束，这些成员可以是：类的实例成员、类的方法、函数参数和函数返回值。</p>
<p>泛型（Generics）是允许同一个函数接受不同类型参数的一种模板。相比于使用 any 类型，使用泛型来创建可复用的组件要更好，因为泛型会保留参数类型。</p>
<h4 data-id="heading-87">12.1 泛型语法</h4>
<p>对于刚接触 TypeScript 泛型的读者来说，首次看到 <code>&lt;T&gt;</code> 语法会感到陌生。其实它没有什么特别，就像传递参数一样，我们传递了我们想要用于特定函数调用的类型。</p>
<p><img src="./ts和js的区别_files/f295fd4930824a3ea0f015c81aa568e7~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>参考上面的图片，当我们调用 <code> identity&lt;Number&gt;(1)</code> ，<code>Number</code> 类型就像参数 <code>1</code> 一样，它将在出现 <code>T</code> 的任何位置填充该类型。图中 <code>&lt;T&gt;</code> 内部的 <code>T</code> 被称为类型变量，它是我们希望传递给 identity 函数的类型占位符，同时它被分配给 <code>value</code> 参数用来代替它的类型：此时 <code>T</code> 充当的是类型，而不是特定的 Number 类型。</p>
<p>其中 <code>T</code> 代表 <strong>Type</strong>，在定义泛型时通常用作第一个类型变量名称。但实际上 <code>T</code> 可以用任何有效名称代替。除了 <code>T</code> 之外，以下是常见泛型变量代表的意思：</p>
<ul>
<li>K（Key）：表示对象中的键类型；</li>
<li>V（Value）：表示对象中的值类型；</li>
<li>E（Element）：表示元素类型。</li>
</ul>
<p>其实并不是只能定义一个类型变量，我们可以引入希望定义的任何数量的类型变量。比如我们引入一个新的类型变量 <code>U</code>，用于扩展我们定义的 <code>identity</code> 函数：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> identity &lt;T, U&gt;(<span class="hljs-attr">value</span>: T, <span class="hljs-attr">message</span>: U) : T {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(message);</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-keyword">return</span> value;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(identity&lt;<span class="hljs-title class_">Number</span>, <span class="hljs-built_in">string</span>&gt;(<span class="hljs-number">68</span>, <span class="hljs-string">"Semlinker"</span>));</span>
</code></pre>
<p><img src="./ts和js的区别_files/8c01377aef194da9bbf05e7cf6910a30~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>除了为类型变量显式设定值之外，一种更常见的做法是使编译器自动选择这些类型，从而使代码更简洁。我们可以完全省略尖括号，比如：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> identity &lt;T, U&gt;(<span class="hljs-attr">value</span>: T, <span class="hljs-attr">message</span>: U) : T {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(message);</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-keyword">return</span> value;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">identity</span>(<span class="hljs-number">68</span>, <span class="hljs-string">"Semlinker"</span>));</span>
</code></pre>
<p>对于上述代码，编译器足够聪明，能够知道我们的参数类型，并将它们赋值给 T 和 U，而不需要开发人员显式指定它们。</p>
<h4 data-id="heading-88">12.2 泛型接口</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">GenericIdentityFn</span>&lt;T&gt; {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  (<span class="hljs-attr">arg</span>: T): T;</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
</code></pre>
<h4 data-id="heading-89">12.3 泛型类</h4>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">GenericNumber</span>&lt;T&gt; {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">zeroValue</span>: T;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">add</span>: <span class="hljs-function">(<span class="hljs-params">x: T, y: T</span>) =&gt;</span> T;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">let</span> myGenericNumber = <span class="hljs-keyword">new</span> <span class="hljs-title class_">GenericNumber</span>&lt;<span class="hljs-built_in">number</span>&gt;();</span>
<span class="code-block-extension-codeLine" data-line-num="7">myGenericNumber.<span class="hljs-property">zeroValue</span> = <span class="hljs-number">0</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="8">myGenericNumber.<span class="hljs-property">add</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">x, y</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="9">  <span class="hljs-keyword">return</span> x + y;</span>
<span class="code-block-extension-codeLine" data-line-num="10">};</span>
</code></pre>
<h4 data-id="heading-90">12.4 泛型工具类型</h4>
<p>为了方便开发者 TypeScript 内置了一些常用的工具类型，比如 Partial、Required、Readonly、Record 和 ReturnType 等。出于篇幅考虑，这里我们只简单介绍 Partial 工具类型。不过在具体介绍之前，我们得先介绍一些相关的基础知识，方便读者自行学习其它的工具类型。</p>
<h5 data-id="heading-91">1.typeof</h5>
<p>在 TypeScript 中，<code>typeof</code> 操作符可以用来获取一个变量声明或对象的类型。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">age</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">const</span> <span class="hljs-attr">sem</span>: <span class="hljs-title class_">Person</span> = { <span class="hljs-attr">name</span>: <span class="hljs-string">'semlinker'</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">33</span> };</span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Sem</span>= <span class="hljs-keyword">typeof</span> sem; <span class="hljs-comment">// -&gt; Person</span></span>
<span class="code-block-extension-codeLine" data-line-num="8"></span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-keyword">function</span> <span class="hljs-title function_">toArray</span>(<span class="hljs-params">x: <span class="hljs-built_in">number</span></span>): <span class="hljs-title class_">Array</span>&lt;<span class="hljs-built_in">number</span>&gt; {</span>
<span class="code-block-extension-codeLine" data-line-num="10">  <span class="hljs-keyword">return</span> [x];</span>
<span class="code-block-extension-codeLine" data-line-num="11">}</span>
<span class="code-block-extension-codeLine" data-line-num="12"></span>
<span class="code-block-extension-codeLine" data-line-num="13"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Func</span> = <span class="hljs-keyword">typeof</span> toArray; <span class="hljs-comment">// -&gt; (x: number) =&gt; number[]</span></span>
</code></pre>
<h5 data-id="heading-92">2.keyof</h5>
<p><code>keyof</code> 操作符是在 TypeScript 2.1 版本引入的，该操作符可以用于获取某种类型的所有键，其返回类型是联合类型。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">age</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">type</span> <span class="hljs-variable constant_">K1</span> = keyof <span class="hljs-title class_">Person</span>; <span class="hljs-comment">// "name" | "age"</span></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">type</span> <span class="hljs-variable constant_">K2</span> = keyof <span class="hljs-title class_">Person</span>[]; <span class="hljs-comment">// "length" | "toString" | "pop" | "push" | "concat" | "join" </span></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">type</span> <span class="hljs-variable constant_">K3</span> = keyof { [<span class="hljs-attr">x</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-title class_">Person</span> };  <span class="hljs-comment">// string | number</span></span>
</code></pre>
<p>在 TypeScript 中支持两种索引签名，数字索引和字符串索引：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">StringArray</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-comment">// 字符串索引 -&gt; keyof StringArray =&gt; string | number</span></span>
<span class="code-block-extension-codeLine" data-line-num="3">  [<span class="hljs-attr">index</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">string</span>; </span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">StringArray1</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-comment">// 数字索引 -&gt; keyof StringArray1 =&gt; number</span></span>
<span class="code-block-extension-codeLine" data-line-num="8">  [<span class="hljs-attr">index</span>: <span class="hljs-built_in">number</span>]: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="9">}</span>
</code></pre>
<p>为了同时支持两种索引类型，就得要求数字索引的返回值必须是字符串索引返回值的子类。<strong>其中的原因就是当使用数值索引时，JavaScript 在执行索引操作时，会先把数值索引先转换为字符串索引</strong>。所以 <code>keyof { [x: string]: Person }</code> 的结果会返回 <code>string | number</code>。</p>
<h5 data-id="heading-93">3.in</h5>
<p><code>in</code> 用来遍历枚举类型：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Keys</span> = <span class="hljs-string">"a"</span> | <span class="hljs-string">"b"</span> | <span class="hljs-string">"c"</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Obj</span> =  {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  [p <span class="hljs-keyword">in</span> <span class="hljs-title class_">Keys</span>]: <span class="hljs-built_in">any</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">} <span class="hljs-comment">// -&gt; { a: any, b: any, c: any }</span></span>
</code></pre>
<h5 data-id="heading-94">4.infer</h5>
<p>在条件类型语句中，可以用 <code>infer</code> 声明一个类型变量并且对它进行使用。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">type</span> <span class="hljs-title class_">ReturnType</span>&lt;T&gt; = T <span class="hljs-keyword">extends</span> (</span>
<span class="code-block-extension-codeLine" data-line-num="2">  ...<span class="hljs-attr">args</span>: <span class="hljs-built_in">any</span>[]</span>
<span class="code-block-extension-codeLine" data-line-num="3">) =&gt; infer R ? R : <span class="hljs-built_in">any</span>;</span>
</code></pre>
<p>以上代码中 <code>infer R</code> 就是声明一个变量来承载传入函数签名的返回值类型，简单说就是用它取到函数返回值的类型方便之后使用。</p>
<h5 data-id="heading-95">5.extends</h5>
<p>有时候我们定义的泛型不想过于灵活或者说想继承某些类等，可以通过 extends 关键字添加泛型约束。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Lengthwise</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">length</span>: <span class="hljs-built_in">number</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
<span class="code-block-extension-codeLine" data-line-num="4"></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">function</span> loggingIdentity&lt;T <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Lengthwise</span>&gt;(<span class="hljs-attr">arg</span>: T): T {</span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arg.<span class="hljs-property">length</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-keyword">return</span> arg;</span>
<span class="code-block-extension-codeLine" data-line-num="8">}</span>
</code></pre>
<p>现在这个泛型函数被定义了约束，因此它不再是适用于任意类型：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-title function_">loggingIdentity</span>(<span class="hljs-number">3</span>);  <span class="hljs-comment">// Error, number doesn't have a .length property</span></span>
</code></pre>
<p>这时我们需要传入符合约束类型的值，必须包含必须的属性：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-title function_">loggingIdentity</span>({<span class="hljs-attr">length</span>: <span class="hljs-number">10</span>, <span class="hljs-attr">value</span>: <span class="hljs-number">3</span>});</span>
</code></pre>
<h5 data-id="heading-96">6.Partial</h5>
<p><code>Partial&lt;T&gt;</code> 的作用就是将某个类型里的属性全部变为可选项 <code>?</code>。</p>
<p><strong>定义：</strong></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">/**</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"> * node_modules/typescript/lib/lib.es5.d.ts</span>
<span class="code-block-extension-codeLine" data-line-num="3"> * Make all properties in T optional</span>
<span class="code-block-extension-codeLine" data-line-num="4"> */</span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-keyword">type</span> <span class="hljs-title class_">Partial</span>&lt;T&gt; = {</span>
<span class="code-block-extension-codeLine" data-line-num="6">  [P <span class="hljs-keyword">in</span> keyof T]?: T[P];</span>
<span class="code-block-extension-codeLine" data-line-num="7">};</span>
</code></pre>
<p>在以上代码中，首先通过 <code>keyof T</code> 拿到 <code>T</code> 的所有属性名，然后使用 <code>in</code> 进行遍历，将值赋给 <code>P</code>，最后通过 <code>T[P]</code> 取得相应的属性值。中间的 <code>?</code> 号，用于将所有属性变为可选。</p>
<p><strong>示例：</strong></p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">Todo</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">title</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-attr">description</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-keyword">function</span> <span class="hljs-title function_">updateTodo</span>(<span class="hljs-params">todo: Todo, fieldsToUpdate: Partial&lt;Todo&gt;</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-keyword">return</span> { ...todo, ...fieldsToUpdate };</span>
<span class="code-block-extension-codeLine" data-line-num="8">}</span>
<span class="code-block-extension-codeLine" data-line-num="9"></span>
<span class="code-block-extension-codeLine" data-line-num="10"><span class="hljs-keyword">const</span> todo1 = {</span>
<span class="code-block-extension-codeLine" data-line-num="11">  <span class="hljs-attr">title</span>: <span class="hljs-string">"Learn TS"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-attr">description</span>: <span class="hljs-string">"Learn TypeScript"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="13">};</span>
<span class="code-block-extension-codeLine" data-line-num="14"></span>
<span class="code-block-extension-codeLine" data-line-num="15"><span class="hljs-keyword">const</span> todo2 = <span class="hljs-title function_">updateTodo</span>(todo1, {</span>
<span class="code-block-extension-codeLine" data-line-num="16">  <span class="hljs-attr">description</span>: <span class="hljs-string">"Learn TypeScript Enum"</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="17">});</span>
</code></pre>
<p>在上面的 <code>updateTodo</code> 方法中，我们利用 <code>Partial&lt;T&gt;</code> 工具类型，定义 <code>fieldsToUpdate</code> 的类型为 <code>Partial&lt;Todo&gt;</code>，即：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1">{</span>
<span class="code-block-extension-codeLine" data-line-num="2">   title?: <span class="hljs-built_in">string</span> | <span class="hljs-literal">undefined</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">   description?: <span class="hljs-built_in">string</span> | <span class="hljs-literal">undefined</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="4">}</span>
</code></pre>
<h3 data-id="heading-97">十三、TypeScript 装饰器</h3>
<h4 data-id="heading-98">13.1 装饰器是什么</h4>
<ul>
<li>它是一个表达式</li>
<li>该表达式被执行后，返回一个函数</li>
<li>函数的入参分别为 target、name 和 descriptor</li>
<li>执行该函数后，可能返回 descriptor 对象，用于配置 target 对象</li>
</ul>
<h4 data-id="heading-99">13.2 装饰器的分类</h4>
<ul>
<li>类装饰器（Class decorators）</li>
<li>属性装饰器（Property decorators）</li>
<li>方法装饰器（Method decorators）</li>
<li>参数装饰器（Parameter decorators）</li>
</ul>
<p>需要注意的是，若要启用实验性的装饰器特性，你必须在命令行或 <code>tsconfig.json</code> 里启用 <code>experimentalDecorators</code> 编译器选项：</p>
<p><strong>命令行</strong>：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">shell</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-shell code-block-extension-codeShowNum" lang="shell"><span class="code-block-extension-codeLine" data-line-num="1">tsc --target ES5 --experimentalDecorators</span>
</code></pre>
<p><strong>tsconfig.json</strong>：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">json</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-json code-block-extension-codeShowNum" lang="json"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-punctuation">{</span></span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">"compilerOptions"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span></span>
<span class="code-block-extension-codeLine" data-line-num="3">     <span class="hljs-attr">"target"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"ES5"</span><span class="hljs-punctuation">,</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">     <span class="hljs-attr">"experimentalDecorators"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span></span>
<span class="code-block-extension-codeLine" data-line-num="5">   <span class="hljs-punctuation">}</span></span>
<span class="code-block-extension-codeLine" data-line-num="6"><span class="hljs-punctuation">}</span></span>
</code></pre>
<h4 data-id="heading-100">13.3 类装饰器</h4>
<p>类装饰器声明：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">ClassDecorator</span> = &lt;<span class="hljs-title class_">TFunction</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Function</span>&gt;<span class="hljs-function">(<span class="hljs-params"></span></span></span>
<span class="code-block-extension-codeLine" data-line-num="2">  target: TFunction</span>
<span class="code-block-extension-codeLine" data-line-num="3">) =&gt; <span class="hljs-title class_">TFunction</span> | <span class="hljs-built_in">void</span>;</span>
</code></pre>
<p>类装饰器顾名思义，就是用来装饰类的。它接收一个参数：</p>
<ul>
<li>target: TFunction - 被装饰的类</li>
</ul>
<p>看完第一眼后，是不是感觉都不好了。没事，我们马上来个例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Greeter</span>(<span class="hljs-params">target: <span class="hljs-built_in">Function</span></span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  target.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">greet</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="3">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Hello Semlinker!"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="4">  };</span>
<span class="code-block-extension-codeLine" data-line-num="5">}</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-meta">@Greeter</span></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Greeting</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="9">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="10">    <span class="hljs-comment">// 内部实现</span></span>
<span class="code-block-extension-codeLine" data-line-num="11">  }</span>
<span class="code-block-extension-codeLine" data-line-num="12">}</span>
<span class="code-block-extension-codeLine" data-line-num="13"></span>
<span class="code-block-extension-codeLine" data-line-num="14"><span class="hljs-keyword">let</span> myGreeting = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Greeting</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="15">(myGreeting <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span>).<span class="hljs-title function_">greet</span>(); <span class="hljs-comment">// console output: 'Hello Semlinker!';</span></span>
</code></pre>
<p>上面的例子中，我们定义了 <code>Greeter</code> 类装饰器，同时我们使用了 <code>@Greeter</code> 语法糖，来使用装饰器。</p>
<blockquote>
<p>友情提示：读者可以直接复制上面的代码，在 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%2Findex.html" target="_blank" title="https://www.typescriptlang.org/play/index.html" ref="nofollow noopener noreferrer">TypeScript Playground</a> 中运行查看结果。</p>
</blockquote>
<p>有的读者可能想问，例子中总是输出 <code>Hello Semlinker!</code> ，能自定义输出的问候语么 ？这个问题很好，答案是可以的。</p>
<p>具体实现如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Greeter</span>(<span class="hljs-params">greeting: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">return</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">target: <span class="hljs-built_in">Function</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="3">    target.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">greet</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="4">      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(greeting);</span>
<span class="code-block-extension-codeLine" data-line-num="5">    };</span>
<span class="code-block-extension-codeLine" data-line-num="6">  };</span>
<span class="code-block-extension-codeLine" data-line-num="7">}</span>
<span class="code-block-extension-codeLine" data-line-num="8"></span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-meta">@Greeter</span>(<span class="hljs-string">"Hello TS!"</span>)</span>
<span class="code-block-extension-codeLine" data-line-num="10"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Greeting</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="11">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="12">    <span class="hljs-comment">// 内部实现</span></span>
<span class="code-block-extension-codeLine" data-line-num="13">  }</span>
<span class="code-block-extension-codeLine" data-line-num="14">}</span>
<span class="code-block-extension-codeLine" data-line-num="15"></span>
<span class="code-block-extension-codeLine" data-line-num="16"><span class="hljs-keyword">let</span> myGreeting = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Greeting</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="17">(myGreeting <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span>).<span class="hljs-title function_">greet</span>(); <span class="hljs-comment">// console output: 'Hello TS!';</span></span>
</code></pre>
<h4 data-id="heading-101">13.4 属性装饰器</h4>
<p>属性装饰器声明：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">PropertyDecorator</span> = <span class="hljs-function">(<span class="hljs-params">target:<span class="hljs-built_in">Object</span>, </span></span></span>
<span class="code-block-extension-codeLine" data-line-num="2">  propertyKey: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">symbol</span> ) =&gt; <span class="hljs-built_in">void</span>;</span>
</code></pre>
<p>属性装饰器顾名思义，用来装饰类的属性。它接收两个参数：</p>
<ul>
<li>target: Object - 被装饰的类</li>
<li>propertyKey: string | symbol - 被装饰类的属性名</li>
</ul>
<p>趁热打铁，马上来个例子热热身：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">logProperty</span>(<span class="hljs-params">target: <span class="hljs-built_in">any</span>, key: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">delete</span> target[key];</span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-keyword">const</span> backingField = <span class="hljs-string">"_"</span> + key;</span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(target, backingField, {</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-attr">writable</span>: <span class="hljs-literal">true</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-attr">configurable</span>: <span class="hljs-literal">true</span></span>
<span class="code-block-extension-codeLine" data-line-num="10">  });</span>
<span class="code-block-extension-codeLine" data-line-num="11"></span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-comment">// property getter</span></span>
<span class="code-block-extension-codeLine" data-line-num="13">  <span class="hljs-keyword">const</span> getter = <span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable language_">this</span>: <span class="hljs-built_in">any</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="14">    <span class="hljs-keyword">const</span> currVal = <span class="hljs-variable language_">this</span>[backingField];</span>
<span class="code-block-extension-codeLine" data-line-num="15">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Get: <span class="hljs-subst">${key}</span> =&gt; <span class="hljs-subst">${currVal}</span>`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="16">    <span class="hljs-keyword">return</span> currVal;</span>
<span class="code-block-extension-codeLine" data-line-num="17">  };</span>
<span class="code-block-extension-codeLine" data-line-num="18"></span>
<span class="code-block-extension-codeLine" data-line-num="19">  <span class="hljs-comment">// property setter</span></span>
<span class="code-block-extension-codeLine" data-line-num="20">  <span class="hljs-keyword">const</span> setter = <span class="hljs-keyword">function</span> (<span class="hljs-params"><span class="hljs-variable language_">this</span>: <span class="hljs-built_in">any</span>, newVal: <span class="hljs-built_in">any</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="21">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Set: <span class="hljs-subst">${key}</span> =&gt; <span class="hljs-subst">${newVal}</span>`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="22">    <span class="hljs-variable language_">this</span>[backingField] = newVal;</span>
<span class="code-block-extension-codeLine" data-line-num="23">  };</span>
<span class="code-block-extension-codeLine" data-line-num="24"></span>
<span class="code-block-extension-codeLine" data-line-num="25">  <span class="hljs-comment">// Create new property with getter and setter</span></span>
<span class="code-block-extension-codeLine" data-line-num="26">  <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">defineProperty</span>(target, key, {</span>
<span class="code-block-extension-codeLine" data-line-num="27">    <span class="hljs-attr">get</span>: getter,</span>
<span class="code-block-extension-codeLine" data-line-num="28">    <span class="hljs-attr">set</span>: setter,</span>
<span class="code-block-extension-codeLine" data-line-num="29">    <span class="hljs-attr">enumerable</span>: <span class="hljs-literal">true</span>,</span>
<span class="code-block-extension-codeLine" data-line-num="30">    <span class="hljs-attr">configurable</span>: <span class="hljs-literal">true</span></span>
<span class="code-block-extension-codeLine" data-line-num="31">  });</span>
<span class="code-block-extension-codeLine" data-line-num="32">}</span>
<span class="code-block-extension-codeLine" data-line-num="33"></span>
<span class="code-block-extension-codeLine" data-line-num="34"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> { </span>
<span class="code-block-extension-codeLine" data-line-num="35">  <span class="hljs-meta">@logProperty</span></span>
<span class="code-block-extension-codeLine" data-line-num="36">  <span class="hljs-keyword">public</span> <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="37"></span>
<span class="code-block-extension-codeLine" data-line-num="38">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">name : <span class="hljs-built_in">string</span></span>) { </span>
<span class="code-block-extension-codeLine" data-line-num="39">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name;</span>
<span class="code-block-extension-codeLine" data-line-num="40">  }</span>
<span class="code-block-extension-codeLine" data-line-num="41">}</span>
<span class="code-block-extension-codeLine" data-line-num="42"></span>
<span class="code-block-extension-codeLine" data-line-num="43"><span class="hljs-keyword">const</span> p1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">"semlinker"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="44">p1.<span class="hljs-property">name</span> = <span class="hljs-string">"kakuqo"</span>;</span>
</code></pre>
<p>以上代码我们定义了一个 <code>logProperty</code> 函数，来跟踪用户对属性的操作，当代码成功运行后，在控制台会输出以下结果：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">ini</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-ini code-block-extension-codeShowNum" lang="ini"><span class="code-block-extension-codeLine" data-line-num="1">Set: <span class="hljs-attr">name</span> =&gt; semlinker</span>
<span class="code-block-extension-codeLine" data-line-num="2">Set: <span class="hljs-attr">name</span> =&gt; kakuqo</span>
</code></pre>
<h4 data-id="heading-102">13.5 方法装饰器</h4>
<p>方法装饰器声明：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">MethodDecorator</span> = &lt;T&gt;<span class="hljs-function">(<span class="hljs-params">target:<span class="hljs-built_in">Object</span>, propertyKey: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">symbol</span>, 	 	</span></span></span>
<span class="code-block-extension-codeLine" data-line-num="2">  descriptor: TypePropertyDescript&lt;T&gt;) =&gt; <span class="hljs-title class_">TypedPropertyDescriptor</span>&lt;T&gt; | <span class="hljs-built_in">void</span>;</span>
</code></pre>
<p>方法装饰器顾名思义，用来装饰类的方法。它接收三个参数：</p>
<ul>
<li>target: Object - 被装饰的类</li>
<li>propertyKey: string | symbol - 方法名</li>
<li>descriptor: TypePropertyDescript - 属性描述符</li>
</ul>
<p>废话不多说，直接上例子：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">log</span>(<span class="hljs-params">target: <span class="hljs-built_in">Object</span>, propertyKey: <span class="hljs-built_in">string</span>, descriptor: PropertyDescriptor</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">let</span> originalMethod = descriptor.<span class="hljs-property">value</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  descriptor.<span class="hljs-property">value</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">...args: <span class="hljs-built_in">any</span>[]</span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="4">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"wrapped function: before invoking "</span> + propertyKey);</span>
<span class="code-block-extension-codeLine" data-line-num="5">    <span class="hljs-keyword">let</span> result = originalMethod.<span class="hljs-title function_">apply</span>(<span class="hljs-variable language_">this</span>, args);</span>
<span class="code-block-extension-codeLine" data-line-num="6">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"wrapped function: after invoking "</span> + propertyKey);</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-keyword">return</span> result;</span>
<span class="code-block-extension-codeLine" data-line-num="8">  };</span>
<span class="code-block-extension-codeLine" data-line-num="9">}</span>
<span class="code-block-extension-codeLine" data-line-num="10"></span>
<span class="code-block-extension-codeLine" data-line-num="11"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Task</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="12">  <span class="hljs-meta">@log</span></span>
<span class="code-block-extension-codeLine" data-line-num="13">  <span class="hljs-title function_">runTask</span>(<span class="hljs-attr">arg</span>: <span class="hljs-built_in">any</span>): <span class="hljs-built_in">any</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="14">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"runTask invoked, args: "</span> + arg);</span>
<span class="code-block-extension-codeLine" data-line-num="15">    <span class="hljs-keyword">return</span> <span class="hljs-string">"finished"</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="16">  }</span>
<span class="code-block-extension-codeLine" data-line-num="17">}</span>
<span class="code-block-extension-codeLine" data-line-num="18"></span>
<span class="code-block-extension-codeLine" data-line-num="19"><span class="hljs-keyword">let</span> task = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Task</span>();</span>
<span class="code-block-extension-codeLine" data-line-num="20"><span class="hljs-keyword">let</span> result = task.<span class="hljs-title function_">runTask</span>(<span class="hljs-string">"learn ts"</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="21"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"result: "</span> + result);</span>
</code></pre>
<p>以上代码成功运行后，控制台会输出以下结果：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">arduino</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-arduino code-block-extension-codeShowNum" lang="arduino"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-string">"wrapped function: before invoking runTask"</span> </span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-string">"runTask invoked, args: learn ts"</span> </span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-string">"wrapped function: after invoking runTask"</span> </span>
<span class="code-block-extension-codeLine" data-line-num="4"><span class="hljs-string">"result: finished"</span> </span>
</code></pre>
<p>下面我们来介绍一下参数装饰器。</p>
<h4 data-id="heading-103">13.6 参数装饰器</h4>
<p>参数装饰器声明：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">declare</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">ParameterDecorator</span> = <span class="hljs-function">(<span class="hljs-params">target: <span class="hljs-built_in">Object</span>, propertyKey: <span class="hljs-built_in">string</span> | <span class="hljs-built_in">symbol</span>, </span></span></span>
<span class="code-block-extension-codeLine" data-line-num="2">  parameterIndex: <span class="hljs-built_in">number</span> ) =&gt; <span class="hljs-built_in">void</span></span>
</code></pre>
<p>参数装饰器顾名思义，是用来装饰函数参数，它接收三个参数：</p>
<ul>
<li>target: Object - 被装饰的类</li>
<li>propertyKey: string | symbol - 方法名</li>
<li>parameterIndex: number - 方法中参数的索引值</li>
</ul>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">Log</span>(<span class="hljs-params">target: <span class="hljs-built_in">Function</span>, key: <span class="hljs-built_in">string</span>, parameterIndex: <span class="hljs-built_in">number</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-keyword">let</span> functionLogged = key || target.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">constructor</span>.<span class="hljs-property">name</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="3">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The parameter in position <span class="hljs-subst">${parameterIndex}</span> at <span class="hljs-subst">${functionLogged}</span> has</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">	been decorated`);</span>
<span class="code-block-extension-codeLine" data-line-num="5">}</span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Greeter</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="8">  <span class="hljs-attr">greeting</span>: <span class="hljs-built_in">string</span>;</span>
<span class="code-block-extension-codeLine" data-line-num="9">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"><span class="hljs-meta">@Log</span> phrase: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="10">	<span class="hljs-variable language_">this</span>.<span class="hljs-property">greeting</span> = phrase; </span>
<span class="code-block-extension-codeLine" data-line-num="11">  }</span>
<span class="code-block-extension-codeLine" data-line-num="12">}</span>
</code></pre>
<p>以上代码成功运行后，控制台会输出以下结果：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">arduino</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-arduino code-block-extension-codeShowNum" lang="arduino"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-string">"The parameter in position 0 at Greeter has been decorated"</span> </span>
</code></pre>
<h3 data-id="heading-104">十四、TypeScript 4.0 新特性</h3>
<p>TypeScript 4.0 带来了很多新的特性，这里我们只简单介绍其中的两个新特性。</p>
<h4 data-id="heading-105">14.1 构造函数的类属性推断</h4>
<p>当 <code>noImplicitAny</code> 配置属性被启用之后，TypeScript 4.0 就可以使用控制流分析来确认类中的属性类型：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  fullName; <span class="hljs-comment">// (property) Person.fullName: string</span></span>
<span class="code-block-extension-codeLine" data-line-num="3">  firstName; <span class="hljs-comment">// (property) Person.firstName: string</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">  lastName; <span class="hljs-comment">// (property) Person.lastName: string</span></span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">fullName: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">fullName</span> = fullName;</span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> = fullName.<span class="hljs-title function_">split</span>(<span class="hljs-string">" "</span>)[<span class="hljs-number">0</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span> =   fullName.<span class="hljs-title function_">split</span>(<span class="hljs-string">" "</span>)[<span class="hljs-number">1</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="10">  }  </span>
<span class="code-block-extension-codeLine" data-line-num="11">}</span>
</code></pre>
<p>然而对于以上的代码，如果在 TypeScript 4.0 以前的版本，比如在 3.9.2 版本下，编译器会提示以下错误信息：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-comment">// Member 'fullName' implicitly has an 'any' type.(7008)</span></span>
<span class="code-block-extension-codeLine" data-line-num="3">  fullName; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">  firstName; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">  lastName; <span class="hljs-comment">// Error</span></span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7">  <span class="hljs-title function_">constructor</span>(<span class="hljs-params">fullName: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">fullName</span> = fullName;</span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> = fullName.<span class="hljs-title function_">split</span>(<span class="hljs-string">" "</span>)[<span class="hljs-number">0</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="10">    <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span> =   fullName.<span class="hljs-title function_">split</span>(<span class="hljs-string">" "</span>)[<span class="hljs-number">1</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="11">  }  </span>
<span class="code-block-extension-codeLine" data-line-num="12">}</span>
</code></pre>
<p>从构造函数推断类属性的类型，该特性给我们带来了便利。但在使用过程中，如果我们没法保证对成员属性都进行赋值，那么该属性可能会被认为是 <code>undefined</code>。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">   fullName;  <span class="hljs-comment">// (property) Person.fullName: string</span></span>
<span class="code-block-extension-codeLine" data-line-num="3">   firstName; <span class="hljs-comment">// (property) Person.firstName: string | undefined</span></span>
<span class="code-block-extension-codeLine" data-line-num="4">   lastName; <span class="hljs-comment">// (property) Person.lastName: string | undefined</span></span>
<span class="code-block-extension-codeLine" data-line-num="5"></span>
<span class="code-block-extension-codeLine" data-line-num="6">   <span class="hljs-title function_">constructor</span>(<span class="hljs-params">fullName: <span class="hljs-built_in">string</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="7">     <span class="hljs-variable language_">this</span>.<span class="hljs-property">fullName</span> = fullName;</span>
<span class="code-block-extension-codeLine" data-line-num="8">     <span class="hljs-keyword">if</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()){</span>
<span class="code-block-extension-codeLine" data-line-num="9">       <span class="hljs-variable language_">this</span>.<span class="hljs-property">firstName</span> = fullName.<span class="hljs-title function_">split</span>(<span class="hljs-string">" "</span>)[<span class="hljs-number">0</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="10">       <span class="hljs-variable language_">this</span>.<span class="hljs-property">lastName</span> =   fullName.<span class="hljs-title function_">split</span>(<span class="hljs-string">" "</span>)[<span class="hljs-number">1</span>];</span>
<span class="code-block-extension-codeLine" data-line-num="11">     }</span>
<span class="code-block-extension-codeLine" data-line-num="12">   }  </span>
<span class="code-block-extension-codeLine" data-line-num="13">}</span>
</code></pre>
<h4 data-id="heading-106">14.2 标记的元组元素</h4>
<p>在以下的示例中，我们使用元组类型来声明剩余参数的类型：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">addPerson</span>(<span class="hljs-params">...args: [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>]</span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Person info: name: <span class="hljs-subst">${args[<span class="hljs-number">0</span>]}</span>, age: <span class="hljs-subst">${args[<span class="hljs-number">1</span>]}</span>`</span>)</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
<span class="code-block-extension-codeLine" data-line-num="4"></span>
<span class="code-block-extension-codeLine" data-line-num="5"><span class="hljs-title function_">addPerson</span>(<span class="hljs-string">"lolo"</span>, <span class="hljs-number">5</span>); <span class="hljs-comment">// Person info: name: lolo, age: 5 </span></span>
</code></pre>
<p>其实，对于上面的 <code>addPerson</code> 函数，我们也可以这样实现：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">addPerson</span>(<span class="hljs-params">name: <span class="hljs-built_in">string</span>, age: <span class="hljs-built_in">number</span></span>) {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Person info: name: <span class="hljs-subst">${name}</span>, age: <span class="hljs-subst">${age}</span>`</span>)</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
</code></pre>
<p>这两种方式看起来没有多大的区别，但对于第一种方式，我们没法设置第一个参数和第二个参数的名称。虽然这样对类型检查没有影响，但在元组位置上缺少标签，会使得它们难于使用。为了提高开发者使用元组的体验，TypeScript 4.0 支持为元组类型设置标签：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-keyword">function</span> <span class="hljs-title function_">addPerson</span>(<span class="hljs-params">...args: [name: <span class="hljs-built_in">string</span>, age: <span class="hljs-built_in">number</span>]</span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Person info: name: <span class="hljs-subst">${args[<span class="hljs-number">0</span>]}</span>, age: <span class="hljs-subst">${args[<span class="hljs-number">1</span>]}</span>`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="3">}</span>
</code></pre>
<p>之后，当我们使用 <code>addPerson</code> 方法时，TypeScript 的智能提示就会变得更加友好。</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">typescript</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-typescript code-block-extension-codeShowNum" lang="typescript"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-comment">// 未使用标签的智能提示</span></span>
<span class="code-block-extension-codeLine" data-line-num="2"><span class="hljs-comment">// addPerson(args_0: string, args_1: number): void</span></span>
<span class="code-block-extension-codeLine" data-line-num="3"><span class="hljs-keyword">function</span> <span class="hljs-title function_">addPerson</span>(<span class="hljs-params">...args: [<span class="hljs-built_in">string</span>, <span class="hljs-built_in">number</span>]</span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="4">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Person info: name: <span class="hljs-subst">${args[<span class="hljs-number">0</span>]}</span>, age: <span class="hljs-subst">${args[<span class="hljs-number">1</span>]}</span>`</span>)</span>
<span class="code-block-extension-codeLine" data-line-num="5">} </span>
<span class="code-block-extension-codeLine" data-line-num="6"></span>
<span class="code-block-extension-codeLine" data-line-num="7"><span class="hljs-comment">// 已使用标签的智能提示</span></span>
<span class="code-block-extension-codeLine" data-line-num="8"><span class="hljs-comment">// addPerson(name: string, age: number): void</span></span>
<span class="code-block-extension-codeLine" data-line-num="9"><span class="hljs-keyword">function</span> <span class="hljs-title function_">addPerson</span>(<span class="hljs-params">...args: [name: <span class="hljs-built_in">string</span>, age: <span class="hljs-built_in">number</span>]</span>): <span class="hljs-built_in">void</span> {</span>
<span class="code-block-extension-codeLine" data-line-num="10">  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Person info: name: <span class="hljs-subst">${args[<span class="hljs-number">0</span>]}</span>, age: <span class="hljs-subst">${args[<span class="hljs-number">1</span>]}</span>`</span>);</span>
<span class="code-block-extension-codeLine" data-line-num="11">} </span>
</code></pre>
<h3 data-id="heading-107">十五、编译上下文</h3>
<h4 data-id="heading-108">15.1 tsconfig.json 的作用</h4>
<ul>
<li>用于标识 TypeScript 项目的根路径；</li>
<li>用于配置 TypeScript 编译器；</li>
<li>用于指定编译的文件。</li>
</ul>
<h4 data-id="heading-109">15.2 tsconfig.json 重要字段</h4>
<ul>
<li>files - 设置要编译的文件的名称；</li>
<li>include - 设置需要进行编译的文件，支持路径模式匹配；</li>
<li>exclude - 设置无需进行编译的文件，支持路径模式匹配；</li>
<li>compilerOptions - 设置与编译流程相关的选项。</li>
</ul>
<h4 data-id="heading-110">15.3 compilerOptions 选项</h4>
<p>compilerOptions 支持很多选项，常见的有 <code>baseUrl</code>、 <code>target</code>、<code>baseUrl</code>、 <code>moduleResolution</code> 和 <code>lib</code> 等。</p>
<p>compilerOptions 每个选项的详细说明如下：</p>
<pre><div class="code-block-extension-header" style="background-color: rgb(248, 248, 248);"><div class="code-block-extension-headerLeft"><div class="code-block-extension-foldBtn"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M16.924 9.617A1 1 0 0 0 16 9H8a1 1 0 0 0-.707 1.707l4 4a1 1 0 0 0 1.414 0l4-4a1 1 0 0 0 .217-1.09z" data-name="Down"></path></svg></div><span class="code-block-extension-lang">json</span></div><div class="code-block-extension-headerRight"><div data-v-159ebe90="" class="render"><svg data-v-159ebe90="" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14" fill="none" class="icon"><path data-v-159ebe90="" fill-rule="evenodd" clip-rule="evenodd" d="M9.53955 4.17189C9.68118 4.20855 9.79179 4.31915 9.82844 4.46078L10.1056 5.53143C10.2094 5.93276 10.7788 5.93412 10.8846 5.53329L11.1678 4.46028C11.2049 4.31949 11.3152 4.20973 11.4562 4.17324L12.5321 3.89478C12.9334 3.7909 12.9348 3.22149 12.5339 3.11571L11.4557 2.83116C11.3156 2.79418 11.2061 2.68474 11.1692 2.54461L10.8846 1.46639C10.7788 1.06556 10.2094 1.06691 10.1056 1.46824L9.82709 2.54413C9.7906 2.6851 9.68084 2.79538 9.54005 2.83254L8.46704 3.11571C8.06621 3.22149 8.06756 3.7909 8.46889 3.89478L9.53955 4.17189ZM6.85443 2.33317C6.93497 2.33317 7.00026 2.39846 7.00026 2.479V3.354C7.00026 3.43455 6.93497 3.49984 6.85443 3.49984H2.10026V12.2498H10.5586C10.7197 12.2498 10.8503 12.1193 10.8503 11.9582V7.14567C10.8503 7.06513 10.9156 6.99984 10.9961 6.99984H11.8711C11.9516 6.99984 12.0169 7.06513 12.0169 7.14567V12.8332C12.0169 13.1553 11.7558 13.4165 11.4336 13.4165H1.51693C1.19476 13.4165 0.933594 13.1553 0.933594 12.8332V2.9165C0.933594 2.59434 1.19476 2.33317 1.51693 2.33317H6.85443ZM8.30344 6.27272L9.43036 6.57467L8.22254 11.0823L7.09562 10.7804L8.30344 6.27272ZM6.56676 6.89146L5.7418 6.0665L3.26693 8.54137L3.35968 8.63404L3.35235 8.64146L5.62099 10.9101L6.44595 10.0851L4.9093 8.54858L6.56676 6.89146Z" fill="url(#paint0_radial_370_13481)"></path><defs data-v-159ebe90=""><radialgradient data-v-159ebe90="" id="paint0_radial_370_13481" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(12.8336 1.1665) rotate(134.17) scale(17.0784 23.5605)"><stop data-v-159ebe90="" stop-color="#FF8A01"></stop><stop data-v-159ebe90="" offset="0.223725" stop-color="#B051B9"></stop><stop data-v-159ebe90="" offset="0.455423" stop-color="#672BFF"></stop><stop data-v-159ebe90="" offset="0.9999" stop-color="#0066FF"></stop></radialgradient></defs></svg> <span data-v-159ebe90="" class="txt">代码解读</span></div><div class="code-block-extension-copyCodeBtn">复制代码</div></div></div><code class="hljs language-json code-block-extension-codeShowNum" lang="json"><span class="code-block-extension-codeLine" data-line-num="1"><span class="hljs-punctuation">{</span></span>
<span class="code-block-extension-codeLine" data-line-num="2">  <span class="hljs-attr">"compilerOptions"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span></span>
<span class="code-block-extension-codeLine" data-line-num="3"></span>
<span class="code-block-extension-codeLine" data-line-num="4">    <span class="hljs-comment">/* 基本选项 */</span></span>
<span class="code-block-extension-codeLine" data-line-num="5">    <span class="hljs-attr">"target"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"es5"</span><span class="hljs-punctuation">,</span>                       <span class="hljs-comment">// 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'</span></span>
<span class="code-block-extension-codeLine" data-line-num="6">    <span class="hljs-attr">"module"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"commonjs"</span><span class="hljs-punctuation">,</span>                  <span class="hljs-comment">// 指定使用模块: 'commonjs', 'amd', 'system', 'umd' or 'es2015'</span></span>
<span class="code-block-extension-codeLine" data-line-num="7">    <span class="hljs-attr">"lib"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>                             <span class="hljs-comment">// 指定要包含在编译中的库文件</span></span>
<span class="code-block-extension-codeLine" data-line-num="8">    <span class="hljs-attr">"allowJs"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                       <span class="hljs-comment">// 允许编译 javascript 文件</span></span>
<span class="code-block-extension-codeLine" data-line-num="9">    <span class="hljs-attr">"checkJs"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                       <span class="hljs-comment">// 报告 javascript 文件中的错误</span></span>
<span class="code-block-extension-codeLine" data-line-num="10">    <span class="hljs-attr">"jsx"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"preserve"</span><span class="hljs-punctuation">,</span>                     <span class="hljs-comment">// 指定 jsx 代码的生成: 'preserve', 'react-native', or 'react'</span></span>
<span class="code-block-extension-codeLine" data-line-num="11">    <span class="hljs-attr">"declaration"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                   <span class="hljs-comment">// 生成相应的 '.d.ts' 文件</span></span>
<span class="code-block-extension-codeLine" data-line-num="12">    <span class="hljs-attr">"sourceMap"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                     <span class="hljs-comment">// 生成相应的 '.map' 文件</span></span>
<span class="code-block-extension-codeLine" data-line-num="13">    <span class="hljs-attr">"outFile"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"./"</span><span class="hljs-punctuation">,</span>                       <span class="hljs-comment">// 将输出文件合并为一个文件</span></span>
<span class="code-block-extension-codeLine" data-line-num="14">    <span class="hljs-attr">"outDir"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"./"</span><span class="hljs-punctuation">,</span>                        <span class="hljs-comment">// 指定输出目录</span></span>
<span class="code-block-extension-codeLine" data-line-num="15">    <span class="hljs-attr">"rootDir"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"./"</span><span class="hljs-punctuation">,</span>                       <span class="hljs-comment">// 用来控制输出目录结构 --outDir.</span></span>
<span class="code-block-extension-codeLine" data-line-num="16">    <span class="hljs-attr">"removeComments"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                <span class="hljs-comment">// 删除编译后的所有的注释</span></span>
<span class="code-block-extension-codeLine" data-line-num="17">    <span class="hljs-attr">"noEmit"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                        <span class="hljs-comment">// 不生成输出文件</span></span>
<span class="code-block-extension-codeLine" data-line-num="18">    <span class="hljs-attr">"importHelpers"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                 <span class="hljs-comment">// 从 tslib 导入辅助工具函数</span></span>
<span class="code-block-extension-codeLine" data-line-num="19">    <span class="hljs-attr">"isolatedModules"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>               <span class="hljs-comment">// 将每个文件做为单独的模块 （与 'ts.transpileModule' 类似）.</span></span>
<span class="code-block-extension-codeLine" data-line-num="20"></span>
<span class="code-block-extension-codeLine" data-line-num="21">    <span class="hljs-comment">/* 严格的类型检查选项 */</span></span>
<span class="code-block-extension-codeLine" data-line-num="22">    <span class="hljs-attr">"strict"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                        <span class="hljs-comment">// 启用所有严格类型检查选项</span></span>
<span class="code-block-extension-codeLine" data-line-num="23">    <span class="hljs-attr">"noImplicitAny"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                 <span class="hljs-comment">// 在表达式和声明上有隐含的 any类型时报错</span></span>
<span class="code-block-extension-codeLine" data-line-num="24">    <span class="hljs-attr">"strictNullChecks"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>              <span class="hljs-comment">// 启用严格的 null 检查</span></span>
<span class="code-block-extension-codeLine" data-line-num="25">    <span class="hljs-attr">"noImplicitThis"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                <span class="hljs-comment">// 当 this 表达式值为 any 类型的时候，生成一个错误</span></span>
<span class="code-block-extension-codeLine" data-line-num="26">    <span class="hljs-attr">"alwaysStrict"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                  <span class="hljs-comment">// 以严格模式检查每个模块，并在每个文件里加入 'use strict'</span></span>
<span class="code-block-extension-codeLine" data-line-num="27"></span>
<span class="code-block-extension-codeLine" data-line-num="28">    <span class="hljs-comment">/* 额外的检查 */</span></span>
<span class="code-block-extension-codeLine" data-line-num="29">    <span class="hljs-attr">"noUnusedLocals"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                <span class="hljs-comment">// 有未使用的变量时，抛出错误</span></span>
<span class="code-block-extension-codeLine" data-line-num="30">    <span class="hljs-attr">"noUnusedParameters"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>            <span class="hljs-comment">// 有未使用的参数时，抛出错误</span></span>
<span class="code-block-extension-codeLine" data-line-num="31">    <span class="hljs-attr">"noImplicitReturns"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>             <span class="hljs-comment">// 并不是所有函数里的代码都有返回值时，抛出错误</span></span>
<span class="code-block-extension-codeLine" data-line-num="32">    <span class="hljs-attr">"noFallthroughCasesInSwitch"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>    <span class="hljs-comment">// 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）</span></span>
<span class="code-block-extension-codeLine" data-line-num="33"></span>
<span class="code-block-extension-codeLine" data-line-num="34">    <span class="hljs-comment">/* 模块解析选项 */</span></span>
<span class="code-block-extension-codeLine" data-line-num="35">    <span class="hljs-attr">"moduleResolution"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"node"</span><span class="hljs-punctuation">,</span>            <span class="hljs-comment">// 选择模块解析策略： 'node' (Node.js) or 'classic' (TypeScript pre-1.6)</span></span>
<span class="code-block-extension-codeLine" data-line-num="36">    <span class="hljs-attr">"baseUrl"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"./"</span><span class="hljs-punctuation">,</span>                       <span class="hljs-comment">// 用于解析非相对模块名称的基目录</span></span>
<span class="code-block-extension-codeLine" data-line-num="37">    <span class="hljs-attr">"paths"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span>                           <span class="hljs-comment">// 模块名到基于 baseUrl 的路径映射的列表</span></span>
<span class="code-block-extension-codeLine" data-line-num="38">    <span class="hljs-attr">"rootDirs"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>                        <span class="hljs-comment">// 根文件夹列表，其组合内容表示项目运行时的结构内容</span></span>
<span class="code-block-extension-codeLine" data-line-num="39">    <span class="hljs-attr">"typeRoots"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>                       <span class="hljs-comment">// 包含类型声明的文件列表</span></span>
<span class="code-block-extension-codeLine" data-line-num="40">    <span class="hljs-attr">"types"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span>                           <span class="hljs-comment">// 需要包含的类型声明文件名列表</span></span>
<span class="code-block-extension-codeLine" data-line-num="41">    <span class="hljs-attr">"allowSyntheticDefaultImports"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>  <span class="hljs-comment">// 允许从没有设置默认导出的模块中默认导入。</span></span>
<span class="code-block-extension-codeLine" data-line-num="42"></span>
<span class="code-block-extension-codeLine" data-line-num="43">    <span class="hljs-comment">/* Source Map Options */</span></span>
<span class="code-block-extension-codeLine" data-line-num="44">    <span class="hljs-attr">"sourceRoot"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"./"</span><span class="hljs-punctuation">,</span>                    <span class="hljs-comment">// 指定调试器应该找到 TypeScript 文件而不是源文件的位置</span></span>
<span class="code-block-extension-codeLine" data-line-num="45">    <span class="hljs-attr">"mapRoot"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"./"</span><span class="hljs-punctuation">,</span>                       <span class="hljs-comment">// 指定调试器应该找到映射文件而不是生成文件的位置</span></span>
<span class="code-block-extension-codeLine" data-line-num="46">    <span class="hljs-attr">"inlineSourceMap"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>               <span class="hljs-comment">// 生成单个 soucemaps 文件，而不是将 sourcemaps 生成不同的文件</span></span>
<span class="code-block-extension-codeLine" data-line-num="47">    <span class="hljs-attr">"inlineSources"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>                 <span class="hljs-comment">// 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性</span></span>
<span class="code-block-extension-codeLine" data-line-num="48"></span>
<span class="code-block-extension-codeLine" data-line-num="49">    <span class="hljs-comment">/* 其他选项 */</span></span>
<span class="code-block-extension-codeLine" data-line-num="50">    <span class="hljs-attr">"experimentalDecorators"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span>        <span class="hljs-comment">// 启用装饰器</span></span>
<span class="code-block-extension-codeLine" data-line-num="51">    <span class="hljs-attr">"emitDecoratorMetadata"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span>          <span class="hljs-comment">// 为装饰器提供元数据的支持</span></span>
<span class="code-block-extension-codeLine" data-line-num="52">  <span class="hljs-punctuation">}</span></span>
<span class="code-block-extension-codeLine" data-line-num="53"><span class="hljs-punctuation">}</span></span>
</code></pre>
<h3 data-id="heading-111">十六、TypeScript 开发辅助工具</h3>
<h4 data-id="heading-112">16.1 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%2F" target="_blank" title="https://www.typescriptlang.org/play/" ref="nofollow noopener noreferrer">TypeScript Playground</a></h4>
<blockquote>
<p>简介：TypeScript 官方提供的在线 TypeScript 运行环境，利用它你可以方便地学习 TypeScript 相关知识与不同版本的功能特性。</p>
<p>在线地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%2F" target="_blank" title="https://www.typescriptlang.org/play/" ref="nofollow noopener noreferrer">www.typescriptlang.org/play/</a></p>
</blockquote>
<p><img src="./ts和js的区别_files/3f0f847192f5476fbab2d36e2c28df5f~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>除了 TypeScript 官方的 Playground 之外，你还可以选择其他的 Playground，比如 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fcodepen.io%2F" target="_blank" title="https://codepen.io/" ref="nofollow noopener noreferrer">codepen.io</a>、<a href="https://link.juejin.cn/?target=https%3A%2F%2Fstackblitz.com%2F" target="_blank" title="https://stackblitz.com/" ref="nofollow noopener noreferrer">stackblitz</a> 或 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fjsbin.com%2F%3Fjs" target="_blank" title="https://jsbin.com/?js" ref="nofollow noopener noreferrer">jsbin.com</a> 等。</p>
<h4 data-id="heading-113">16.2 <a href="https://link.juejin.cn/?target=https%3A%2F%2Ftsuml-demo.firebaseapp.com%2F" target="_blank" title="https://tsuml-demo.firebaseapp.com/" ref="nofollow noopener noreferrer">TypeScript UML Playground</a></h4>
<blockquote>
<p>简介：一款在线 TypeScript UML 工具，利用它你可以为指定的 TypeScript 代码生成 UML 类图。</p>
<p>在线地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Ftsuml-demo.firebaseapp.com%2F" target="_blank" title="https://tsuml-demo.firebaseapp.com/" ref="nofollow noopener noreferrer">tsuml-demo.firebaseapp.com/</a></p>
</blockquote>
<p><img src="./ts和js的区别_files/ba1007ed5c55434a9ef12a3792c2ab80~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<h4 data-id="heading-114">16.3 <a href="https://link.juejin.cn/?target=http%3A%2F%2Fwww.jsontots.com%2F" target="_blank" title="http://www.jsontots.com/" ref="nofollow noopener noreferrer">JSON TO TS</a></h4>
<blockquote>
<p>简介：一款 TypeScript 在线工具，利用它你可以为指定的 JSON 数据生成对应的 TypeScript 接口定义。</p>
<p>在线地址：<a href="https://link.juejin.cn/?target=http%3A%2F%2Fwww.jsontots.com%2F" target="_blank" title="http://www.jsontots.com/" ref="nofollow noopener noreferrer">www.jsontots.com/</a></p>
</blockquote>
<p><img src="./ts和js的区别_files/037bbc7a84e145ad8ac13e1e8e49b115~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>除了使用 <a href="https://link.juejin.cn/?target=http%3A%2F%2Fwww.jsontots.com%2F" target="_blank" title="http://www.jsontots.com/" ref="nofollow noopener noreferrer">jsontots</a> 在线工具之外，对于使用 VSCode IDE 的小伙们还可以安装 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DMariusAlchimavicius.json-to-ts" target="_blank" title="https://marketplace.visualstudio.com/items?itemName=MariusAlchimavicius.json-to-ts" ref="nofollow noopener noreferrer">JSON to TS</a> 扩展来快速完成  <strong>JSON to TS</strong> 的转换工作。</p>
<h4 data-id="heading-115">16.4 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FSweetIQ%2Fschemats" target="_blank" title="https://github.com/SweetIQ/schemats" ref="nofollow noopener noreferrer">Schemats</a></h4>
<blockquote>
<p>简介：利用 Schemats，你可以基于（Postgres，MySQL）SQL 数据库中的 schema 自动生成 TypeScript 接口定义。</p>
<p>在线地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2FSweetIQ%2Fschemats" target="_blank" title="https://github.com/SweetIQ/schemats" ref="nofollow noopener noreferrer">github.com/SweetIQ/sch…</a></p>
</blockquote>
<p><img src="./ts和js的区别_files/20e5b6e73c5a48bd9118b5c4f61e6c43~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<h4 data-id="heading-116">16.5 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fts-ast-viewer.com%2F" target="_blank" title="https://ts-ast-viewer.com/" ref="nofollow noopener noreferrer">TypeScript AST Viewer</a></h4>
<blockquote>
<p>简介：一款 TypeScript AST 在线工具，利用它你可以查看指定 TypeScript 代码对应的 AST（Abstract Syntax Tree）抽象语法树。</p>
<p>在线地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fts-ast-viewer.com%2F" target="_blank" title="https://ts-ast-viewer.com/" ref="nofollow noopener noreferrer">ts-ast-viewer.com/</a></p>
</blockquote>
<p><img src="./ts和js的区别_files/baf0f0d1dd9c488893d0cc3c3eaa45bd~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>对于了解过 AST 的小伙伴来说，对 <a href="https://link.juejin.cn/?target=https%3A%2F%2Fastexplorer.net%2F" target="_blank" title="https://astexplorer.net/" ref="nofollow noopener noreferrer">astexplorer</a> 这款在线工具应该不会陌生。该工具除了支持 JavaScript 之外，还支持 CSS、JSON、RegExp、GraphQL 和 Markdown 等格式的解析。</p>
<h4 data-id="heading-117">16.6 <a href="https://link.juejin.cn/?target=https%3A%2F%2Ftypedoc.org%2F" target="_blank" title="https://typedoc.org/" ref="nofollow noopener noreferrer">TypeDoc</a></h4>
<blockquote>
<p>简介：TypeDoc 用于将 TypeScript 源代码中的注释转换为 HTML 文档或 JSON 模型。它可灵活扩展，并支持多种配置。</p>
<p>在线地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Ftypedoc.org%2F" target="_blank" title="https://typedoc.org/" ref="nofollow noopener noreferrer">typedoc.org/</a></p>
</blockquote>
<p><img src="./ts和js的区别_files/44b7ffe42d3a426d9c30e23b59f8db86~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<h4 data-id="heading-118">16.7 <a href="https://link.juejin.cn/?target=https%3A%2F%2Ftypescript-eslint.io%2F" target="_blank" title="https://typescript-eslint.io/" ref="nofollow noopener noreferrer">TypeScript ESLint</a></h4>
<blockquote>
<p>简介：使用 <a href="https://link.juejin.cn/?target=https%3A%2F%2Ftypescript-eslint.io%2F" target="_blank" title="https://typescript-eslint.io/" ref="nofollow noopener noreferrer">TypeScript ESLint</a> 可以帮助我们规范代码质量，提高团队开发效率。</p>
<p>在线地址：<a href="https://link.juejin.cn/?target=https%3A%2F%2Ftypescript-eslint.io%2F" target="_blank" title="https://typescript-eslint.io/" ref="nofollow noopener noreferrer">typescript-eslint.io/</a></p>
</blockquote>
<p><img src="./ts和js的区别_files/ba2dc2fa049340d3bde452f6ebf2554f~tplv-k3u1fbpfcp-zoom-in-crop-mark_1512_0_0_0.awebp" alt="" loading="lazy" class="medium-zoom-image"></p>
<p>对 <a href="https://link.juejin.cn/?target=https%3A%2F%2Ftypescript-eslint.io%2F" target="_blank" title="https://typescript-eslint.io/" ref="nofollow noopener noreferrer">TypeScript ESLint</a> 项目感兴趣且想在项目中应用的小伙伴，可以参考 <a href="https://juejin.cn/post/6844903880006844424" target="_blank" title="https://juejin.cn/post/6844903880006844424">“在Typescript项目中，如何优雅的使用ESLint和Prettier”</a> 这篇文章。</p>
<p>能坚持看到这里的小伙伴都是 “真爱”，如果你还意犹未尽，那就来看看本人整理的 Github 上 1.8K+ 的开源项目：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fsemlinker%2Fawesome-typescript" target="_blank" title="https://github.com/semlinker/awesome-typescript" ref="nofollow noopener noreferrer">awesome-typescript</a>。</p>
<h3 data-id="heading-119">十七、参考资源</h3>
<ul>
<li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fmariusschulz.com%2Fblog%2Fthe-unknown-type-in-typescript" target="_blank" title="https://mariusschulz.com/blog/the-unknown-type-in-typescript" ref="nofollow noopener noreferrer">mariusschulz - the-unknown-type-in-typescript</a></li>
<li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fjkchao.github.io%2Ftypescript-book-chinese%2Fproject%2FcompilationContext.html%23tsconfig-json" target="_blank" title="https://jkchao.github.io/typescript-book-chinese/project/compilationContext.html#tsconfig-json" ref="nofollow noopener noreferrer">深入理解 TypeScript - 编译上下文</a></li>
<li><a href="https://link.juejin.cn/?target=https%3A%2F%2Fwww.typescriptlang.org%2Fdocs%2Fhandbook%2Frelease-notes%2Ftypescript-4-0.html" target="_blank" title="https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-0.html" ref="nofollow noopener noreferrer">TypeScript 4.0</a></li>
<li>TypeScript Quickly</li>
</ul></div></div></article> <div class="article-end" data-v-cd15ceae="" data-v-3a7d5dfe=""><div class="rank-entry-bottom" data-v-cd15ceae="" data-v-3a7d5dfe=""><!----></div> <div class="tag-list-box" data-v-cd15ceae="" data-v-3a7d5dfe=""><div data-v-3a7d5dfe="" data-v-cd15ceae="" class="tag-list"><div data-v-3a7d5dfe="" data-v-cd15ceae="" class="tag-list-title">标签：</div> <div data-v-3a7d5dfe="" data-v-cd15ceae="" class="tag-list-container"><a data-v-65b50b51="" data-v-3a7d5dfe="" href="https://juejin.cn/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" class="jj-link item tag-item" data-v-cd15ceae=""><span data-v-3a7d5dfe="" data-v-65b50b51="" class="tag-title">前端</span></a><a data-v-65b50b51="" data-v-3a7d5dfe="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link item tag-item" data-v-cd15ceae=""><span data-v-3a7d5dfe="" data-v-65b50b51="" class="tag-title">TypeScript</span></a></div></div> <!----></div></div> <div data-v-3b9afad6="" data-v-3a7d5dfe="" class="column-container" data-v-cd15ceae=""><div data-v-3b9afad6="" class="column-header"><span data-v-3b9afad6="" class="column-title">本文收录于以下专栏</span> <!----></div> <div data-v-154d8bd6="" data-v-3b9afad6="" class="item-container column-content"><div data-v-154d8bd6="" class="main"><img data-v-5244ef91="" data-v-154d8bd6="" loading="eager" src="./ts和js的区别_files/789ffb6ca0014bb9afc7daaa0c490b7c~tplv-k3u1fbpfcp-jj_140_105_0_0_q75.avis" alt="cover" class="lazy thumb"> <div data-v-154d8bd6="" class="content"><div data-v-154d8bd6="" class="title-container"><div data-v-154d8bd6="" class="title">
          跟着阿宝哥学前端
        </div> <div data-v-154d8bd6="" class="catalog">
          专栏目录
          <!----></div></div> <div data-v-154d8bd6="" placement="top-start" max-width="472px" content="专注分享 TS、Vue3、前端架构和源码解析等技术干货。" class="tooltip"><span data-v-154d8bd6="" class="description">
          专注分享 TS、Vue3、前端架构和源码解析等技术干货。
        </span></div> <div data-v-154d8bd6="" class="column-detail"><div data-v-154d8bd6="" class="follow-number">328 订阅</div> <div data-v-154d8bd6="" class="dot">·</div> <div data-v-154d8bd6="" class="article-number">44 篇文章</div></div></div> <!----> <button data-v-e1243e7c="" data-v-154d8bd6="" class="ui-btn btn follow-btn primary mini default attention"><!----> 订阅</button></div> <div data-v-154d8bd6="" class="divide"></div> <div data-v-154d8bd6="" class="related-article"><div data-v-154d8bd6="" class="prev-article"><div data-v-154d8bd6="" class="prev">上一篇</div> <div data-v-154d8bd6="" class="title">
        细数这些年被困扰过的 TS 问题
      </div></div> <div data-v-154d8bd6="" class="next-article"><div data-v-154d8bd6="" class="next">下一篇</div> <div data-v-154d8bd6="" class="title">
        细数 TS 中那些奇怪的符号
      </div></div></div></div></div> <div data-v-5b99e65b="" data-v-3a7d5dfe="" data-jj-helper="comment-container" class="jj-comment-list-container comment-box-common" id="comment-box" data-v-cd15ceae=""><div data-v-5b99e65b="" class="title">评论 216</div> <div data-v-673c9859="" data-v-5b99e65b="" class="comment-form comment-editor" small="default"><div data-v-673c9859="" class="content"><div data-v-673c9859="" class="avatar-box"><div data-v-03256cc6="" data-v-673c9859="" class="avatar jj-avatar avatar"><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/5112637127~90x90.awebp" alt="avatar" class="lazy avatar-img" loading="lazy"> </div></div> <div data-v-673c9859="" class="form-box"><div data-v-2320b114="" data-v-673c9859="" class="comment-input default"><div data-v-34f85b71="" data-v-2320b114="" class="auth-card"><!----> <div data-v-2320b114="" data-v-34f85b71="" class="input-box"><div data-v-2320b114="" data-v-34f85b71="" contenteditable="true" spellcheck="false" placeholder="平等表达，友善交流" class="rich-input empty"></div> <!----> <div data-v-2320b114="" data-v-34f85b71="" class="action-box"><div data-v-0c6d399b="" data-v-2320b114="" class="emoji-container emoji-btn" data-v-34f85b71=""><div data-v-0c6d399b="" class="emoji-box"><svg data-v-0c6d399b="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-0c6d399b="" fill-rule="evenodd" clip-rule="evenodd" d="M8.00002 0.666504C12.0501 0.666504 15.3334 3.94975 15.3334 7.99984C15.3334 12.0499 12.0501 15.3332 8.00002 15.3332C3.94993 15.3332 0.666687 12.0499 0.666687 7.99984C0.666687 3.94975 3.94993 0.666504 8.00002 0.666504ZM8 2C4.68629 2 2 4.68629 2 8C2 11.3137 4.68629 14 8 14C11.3137 14 14 11.3137 14 8C14 4.68629 11.3137 2 8 2ZM10.6667 5.66667V7.66667H9.33333V5.66667H10.6667ZM6.66667 5.66667V7.66667H5.33333V5.66667H6.66667ZM10.0767 9.33333H11.0495C11.1804 9.33333 11.2866 9.43951 11.2866 9.57048C11.2866 9.60754 11.2779 9.64409 11.2612 9.67718L11.244 9.71053C10.6294 10.8739 9.40726 11.6667 7.99998 11.6667C6.61523 11.6667 5.40977 10.8991 4.7859 9.76612L4.73786 9.67593C4.67845 9.56052 4.72385 9.4188 4.83926 9.35939C4.87253 9.34226 4.90941 9.33333 4.94683 9.33333H5.92347C6.02396 9.33332 6.11908 9.37865 6.18238 9.4567C6.26207 9.55496 6.32833 9.62955 6.38117 9.68046C6.80074 10.0847 7.37133 10.3333 7.99998 10.3333C8.63289 10.3333 9.20694 10.0814 9.62728 9.67224C9.67791 9.62296 9.74135 9.55121 9.8176 9.45698C9.88089 9.37877 9.97611 9.33333 10.0767 9.33333Z"></path></svg> <!----></div> <!----></div> <div data-v-2320b114="" data-v-34f85b71="" class="image-btn"><svg data-v-2320b114="" data-v-34f85b71="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-2320b114="" data-v-34f85b71="" fill-rule="evenodd" clip-rule="evenodd" d="M14 1.3335C14.3514 1.3335 14.6394 1.60546 14.6648 1.95041L14.6666 2.00016V14.0002C14.6666 14.3516 14.3947 14.6396 14.0497 14.665L14 14.6668H1.99998C1.64853 14.6668 1.36059 14.3949 1.33514 14.0499L1.33331 14.0002V2.00016C1.33331 1.64871 1.60527 1.36077 1.95023 1.33532L1.99998 1.3335H14ZM13.3333 2.66618H2.66664V13.3328H13.3333V2.66618ZM11.9219 6.7879C11.9719 6.83791 12 6.90574 12 6.97647V11.7993C12 11.9098 11.9104 11.9993 11.8 11.9993H6.81615C6.7975 11.9993 6.77945 11.9968 6.76232 11.992L3.91042 11.9847C3.79996 11.9844 3.71063 11.8947 3.7109 11.7842C3.71102 11.7313 3.73209 11.6807 3.76948 11.6433L6.52468 8.88807C6.62882 8.78393 6.79766 8.78393 6.9018 8.88807L8.17297 10.1593L11.5447 6.7879C11.6489 6.68376 11.8177 6.68376 11.9219 6.7879ZM5.99997 3.99951V5.99951H3.99997V3.99951H5.99997Z"></path></svg></div> <div data-v-2320b114="" data-v-34f85b71="" style="flex: 1 1 0%;"></div> <div data-v-2320b114="" data-v-34f85b71="" class="text-count-wrapper"><div data-v-2320b114="" data-v-34f85b71="" class="text-count"><span data-v-2320b114="" data-v-34f85b71="" class="text-count-real">0</span> <span data-v-2320b114="" data-v-34f85b71="" class="text-count-limit">/ 1000</span></div> <span data-v-2320b114="" class="count-info" data-v-34f85b71=""><div class="byte-tooltip byte-tooltip--dark" x-placement="top" style="display: none; position: absolute; max-width: none; will-change: transform; z-index: 1010; top: 0px; left: 0px; transform: translate3d(603px, 66px, 0px);">
        标点符号、链接等不计算在有效字数内
      <div x-arrow="" class="popper__arrow" style="left: 0px;"></div></div><span class="byte-tooltip__wrapper"><svg data-v-2320b114="" width="16" height="16" viewBox="0 0 16 16" fill="none" stroke="currentColor" xmlns="http://www.w3.org/2000/svg" class="info-icon"><g data-v-2320b114=""><path data-v-2320b114="" d="M14.75 8C14.75 11.7279 11.7279 14.75 8 14.75C4.27209 14.75 1.25 11.7279 1.25 8C1.25 4.27209 4.27209 1.25 8 1.25C11.7279 1.25 14.75 4.27209 14.75 8Z" stroke-width="1.25"></path><path data-v-2320b114="" d="M8.00216 9.875L7.99976 9.5C7.99976 8.375 9.12476 8 9.79203 7.09914C10.4593 6.19828 9.6081 4.625 7.9953 4.625C6.49008 4.625 5.97697 5.58054 5.97461 6.31764V6.49197" stroke-width="1.25"></path><path data-v-2320b114="" d="M8.00195 10.625V12.1279" stroke-width="1.25"></path></g></svg></span></span></div> <div data-v-2320b114="" data-v-34f85b71="" class="submit"><span data-v-2320b114="" data-v-34f85b71=""><div class="byte-tooltip byte-tooltip--dark" x-placement="top" style="display: none; position: absolute; max-width: none; will-change: transform; z-index: 1011; top: 0px; left: 0px; transform: translate3d(657px, 42px, 0px);">
        Ctrl + Enter
      <div x-arrow="" class="popper__arrow" style="left: 0px;"></div></div><span class="byte-tooltip__wrapper"><button data-v-2320b114="" disabled="disabled" class="submit-btn">
              发送
            </button></span></span></div></div></div></div>  <input data-v-2320b114="" type="file" style="display: none;"></div></div></div></div> <div data-v-3c9d31de="" data-v-5b99e65b="" class="comment-list-wrapper comment-list-root default"><div data-v-3c9d31de="" class="comment-list-header"><div data-v-3c9d31de="" class="sort"><div data-v-3c9d31de="" class="item active">
        最热
      </div> <div data-v-3c9d31de="" class="divider"></div> <div data-v-3c9d31de="" class="item">
        最新
      </div></div></div> <div data-v-3c9d31de="" class="comment-list"><div class="byte-loading" style="display: none;"><div class="byte-loading__spinner"><i class="circular byte-icon byte-icon--loading"><svg t="1553157954893" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="2605" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M980.752 313.697c-25.789-60.972-62.702-115.725-109.713-162.736-47.012-47.011-101.764-83.924-162.736-109.713C645.161 14.542 578.106 1 509 1c-2.242 0-4.48 0.015-6.715 0.043-16.567 0.211-29.826 13.812-29.615 30.38 0.209 16.438 13.599 29.618 29.99 29.618l0.39-0.002c1.98-0.026 3.963-0.039 5.95-0.039 61.033 0 120.224 11.947 175.93 35.508 53.82 22.764 102.162 55.359 143.683 96.879s74.115 89.862 96.88 143.683C949.054 392.776 961 451.967 961 513c0 16.568 13.432 30 30 30s30-13.432 30-30c0-69.106-13.541-136.162-40.248-199.303z" p-id="2606"></path></svg></i><!----></div></div><div data-v-01ae2ffd="" data-v-3c9d31de="" data-jj-helper-comment-type="comment" data-jj-helper-comment-id="6904810807189323784" data-jj-helper-comment-status="1" data-jj-helper-item-id="6872111128135073806" data-jj-helper-item-type="2" class="comment-card comment-item default" data-cid="6904810807189323784"><div data-v-01ae2ffd="" class="comment-avatar"><div data-v-487cbd49="" data-v-d7aef884="" data-v-01ae2ffd="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-01ae2ffd="" href="https://juejin.cn/user/395479917011118" target="_blank" rel="" class="jj-link" data-v-487cbd49=""><div data-v-03256cc6="" data-v-01ae2ffd="" class="avatar jj-avatar avatar" data-v-65b50b51=""><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/2c122785e9f5544d93d5fb7b6f40799b~90x90.awebp" alt="FreezepTipsy的头像" class="lazy avatar-img" loading="lazy"> <!----></div></a></div></div> <div data-v-01ae2ffd="" class="comment-wrapper"><div data-v-01ae2ffd="" class="comment-header"><div data-v-487cbd49="" data-v-d7aef884="" data-v-01ae2ffd="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-01ae2ffd="" href="https://juejin.cn/user/395479917011118" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 300px;">
      FreezepTipsy
    </span> <!----> <!----> <!----> </a></div> <!----> <div data-v-01ae2ffd="" class="author-intro">
        攻城狮
      </div> <div data-v-01ae2ffd="" style="flex: 1 1 0%;"></div> <div data-v-01ae2ffd="" style="display: flex; flex-shrink: 0; flex-grow: 0;"><img data-v-5244ef91="" data-v-01ae2ffd="" src="./ts和js的区别_files/51b98a0c69a34689b8ca2c10dd66156d~tplv-k3u1fbpfcp-image.image" alt="" class="lazy hot-icon" loading="lazy"></div></div> <div data-v-01ae2ffd="" class="comment-content"><div data-v-01ae2ffd="" class="content">写的是不错，但是，大佬，能不能出个《TypeScript三年高考五年模拟》 针对性训练下，这光讲一堆API，只是了解了解而已，没什么卵用。</div> <!----> <!----></div> <div data-v-01ae2ffd="" jj-comment-anchor-bottom="true" class="comment-action"><time data-v-01ae2ffd="" datetime="1607651553000" title="Fri Dec 11 2020 09:52:33 GMT+0800 (香港标准时间)" class="action-time">
        3年前
      </time> <div data-v-01ae2ffd="" class="action-digg"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.56162 2.16952C8.66569 2.09661 8.78195 2.06124 8.88247 2.0912C8.97653 2.11923 9.23851 2.25916 9.50988 2.96799C9.64419 3.31881 9.9356 4.2424 9.42155 6.05431C9.29751 6.49152 9.61394 6.95303 10.0926 6.95971L13.492 7.00716L13.492 7.00721H13.4991C13.6049 7.00721 13.7228 7.01986 13.8134 7.05898C13.8544 7.07671 13.8815 7.09639 13.8999 7.116C13.9166 7.13375 13.9368 7.16247 13.9515 7.21636C13.9848 7.33784 14.0228 7.74712 13.9473 8.42262C13.874 9.07857 13.698 9.94479 13.341 10.9598C13.0424 11.8088 12.6601 12.5292 12.0684 13.4879C12.0558 13.5052 12.0462 13.5197 12.0418 13.5265L12.0404 13.5285C12.0292 13.5454 12.0242 13.5531 12.018 13.5618C12.0076 13.5764 12.0018 13.582 11.9983 13.585C11.996 13.587 11.9908 13.5912 11.9777 13.5959C11.9638 13.6009 11.9311 13.61 11.8706 13.61H5.56278L5.56373 6.58489C5.87126 6.41901 6.19881 6.20128 6.54112 5.84059C6.93883 5.42152 7.33789 4.8294 7.76254 3.94183C7.84974 3.75957 7.91745 3.55962 7.97574 3.37762C7.99264 3.32486 8.0087 3.27379 8.02438 3.22393L8.02439 3.22389C8.066 3.09158 8.10495 2.96776 8.14985 2.84312C8.2758 2.49352 8.40247 2.28101 8.56162 2.16952ZM10.452 2.60729C10.1323 1.77209 9.70208 1.28277 9.17063 1.12437C8.64564 0.967902 8.20308 1.18891 7.98278 1.34325C7.55169 1.64525 7.33837 2.11908 7.20071 2.5012C7.14817 2.64705 7.10002 2.80016 7.05661 2.93824C7.0422 2.98405 7.02832 3.02821 7.01496 3.0699C6.95791 3.24804 6.90763 3.39115 6.85248 3.50643C6.45683 4.3334 6.1121 4.8271 5.80935 5.14611C5.51322 5.45815 5.23983 5.6219 4.9473 5.76821C4.71095 5.88641 4.55494 6.12906 4.55491 6.40159L4.55388 13.9125C4.55383 14.3026 4.87002 14.6188 5.26008 14.6188H11.8706C12.2097 14.6188 12.4663 14.5113 12.6519 14.3535C12.7387 14.2797 12.7988 14.2043 12.8387 14.1484C12.8556 14.1248 12.8704 14.1025 12.8786 14.09L12.8813 14.0859L12.8826 14.0839L12.8955 14.0685L12.9142 14.0382C13.5304 13.0414 13.9578 12.247 14.2927 11.2945C14.6745 10.209 14.8679 9.26811 14.9499 8.5347C15.0297 7.82084 15.009 7.25845 14.9246 6.95014C14.805 6.51285 14.5104 6.26112 14.2134 6.13284C13.9385 6.01407 13.661 5.99859 13.5028 5.99836L10.4907 5.95631C10.9296 4.15791 10.648 3.11902 10.452 2.60729ZM1.0008 6.46783C0.981809 6.0652 1.30313 5.72836 1.70621 5.72836H2.75264C3.14266 5.72836 3.45883 6.04454 3.45883 6.43456V13.9442C3.45883 14.3342 3.14266 14.6504 2.75264 14.6504H2.06044C1.68335 14.6504 1.37279 14.3541 1.35502 13.9775L1.0008 6.46783Z"></path></svg>
        36
      </div> <div data-v-01ae2ffd="" class="action-reply"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M2.30136 10.1142L2.30019 3.45191C2.30024 2.6778 2.92779 2.05019 3.70191 2.05019H12.3989C13.1731 2.05019 13.8006 2.67785 13.8006 3.452L13.8018 10.1144C13.8017 10.8885 13.1742 11.516 12.4001 11.516H10.1322C9.97329 11.516 9.81862 11.5675 9.69142 11.6629L6.65162 13.9406C6.62173 13.9598 6.58148 13.9444 6.57209 13.91L6.15416 12.0869C6.07758 11.7528 5.78033 11.516 5.43761 11.516H3.70308C2.92893 11.516 2.30136 10.8884 2.30136 10.1142ZM3.70191 1C2.34776 1 1.25 2.09776 1.25 3.45191L1.25117 10.1144C1.25122 11.4685 2.34896 12.5662 3.70308 12.5662H5.18661L5.54953 14.1495L5.55107 14.1558C5.73515 14.9153 6.62879 15.248 7.26458 14.7937L10.2372 12.5662H12.4001C13.7542 12.5662 14.852 11.4684 14.852 10.1142L14.8508 3.45182C14.8508 2.09771 13.753 1 12.3989 1H3.70191ZM4.78612 7.91404C5.35027 7.91404 5.8076 7.45671 5.8076 6.89257C5.8076 6.32842 5.35027 5.87109 4.78612 5.87109C4.22198 5.87109 3.76465 6.32842 3.76465 6.89257C3.76465 7.45671 4.22198 7.91404 4.78612 7.91404ZM8.98631 6.89257C8.98631 7.45671 8.52898 7.91404 7.96483 7.91404C7.40069 7.91404 6.94336 7.45671 6.94336 6.89257C6.94336 6.32842 7.40069 5.87109 7.96483 5.87109C8.52898 5.87109 8.98631 6.32842 8.98631 6.89257ZM11.1484 7.91404C11.7126 7.91404 12.1699 7.45671 12.1699 6.89257C12.1699 6.32842 11.7126 5.87109 11.1484 5.87109C10.5843 5.87109 10.127 6.32842 10.127 6.89257C10.127 7.45671 10.5843 7.91404 11.1484 7.91404Z"></path></svg>
        6
      </div> <div data-v-01ae2ffd="" data-jj-comment-action="6904810807189323784" style="flex: 1 1 0%;"></div> <div data-v-01ae2ffd="" class="more-action"><span data-v-01ae2ffd="" class="more-popover"><div class="byte-popover" x-placement="top-end" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1013; top: 0px; left: 0px; transform: translate3d(703px, 87px, 0px);"><!----><p class="byte-popover__content"><ul data-v-01ae2ffd="" class="more-menu"><!----> <li data-v-01ae2ffd=""><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.21356 7.13688C9.49486 7.13688 10.5336 6.09818 10.5336 4.81688C10.5336 3.53557 9.49486 2.49688 8.21356 2.49688C6.93225 2.49688 5.89356 3.53557 5.89356 4.81688C5.89356 6.09818 6.93225 7.13688 8.21356 7.13688ZM8.21356 8.33688C10.1576 8.33688 11.7336 6.76092 11.7336 4.81688C11.7336 2.87283 10.1576 1.29688 8.21356 1.29688C6.26951 1.29688 4.69355 2.87283 4.69355 4.81688C4.69355 6.76092 6.26951 8.33688 8.21356 8.33688ZM5.91749 10.5125C4.30178 10.5125 2.99199 11.8223 2.99199 13.438C2.99199 13.4706 3.01845 13.4971 3.05108 13.4971H7.53515C7.86652 13.4971 8.13515 13.7657 8.13515 14.0971C8.13515 14.4285 7.86652 14.6971 7.53515 14.6971H3.05108C2.35571 14.6971 1.79199 14.1334 1.79199 13.438C1.79199 11.1595 3.63904 9.3125 5.91749 9.3125H7.53515C7.86652 9.3125 8.13515 9.58113 8.13515 9.9125C8.13515 10.2439 7.86652 10.5125 7.53515 10.5125H5.91749ZM9.78025 10.1265C10.0146 9.8922 10.3945 9.8922 10.6288 10.1265L11.908 11.4057L13.1833 10.1304C13.4176 9.89611 13.7975 9.89611 14.0318 10.1304C14.2661 10.3647 14.2661 10.7446 14.0318 10.979L12.7565 12.2542L14.0229 13.5206C14.2572 13.7549 14.2572 14.1348 14.0229 14.3692C13.7886 14.6035 13.4087 14.6035 13.1744 14.3692L11.908 13.1028L10.6377 14.3731C10.4034 14.6074 10.0235 14.6074 9.78914 14.3731C9.55483 14.1388 9.55483 13.7589 9.78914 13.5245L11.0594 12.2542L9.78025 10.975C9.54594 10.7407 9.54594 10.3608 9.78025 10.1265Z"></path></svg> <div data-v-01ae2ffd="" class="menu-label">
                  屏蔽作者：FreezepTipsy
                </div></li> <li data-v-01ae2ffd=""><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.06904 2.67359L13.856 12.6969C13.8684 12.7183 13.8687 12.7297 13.8686 12.7359C13.8684 12.7457 13.8654 12.7606 13.856 12.7769C13.8466 12.7932 13.8352 12.8032 13.8268 12.8083C13.8215 12.8115 13.8114 12.8169 13.7867 12.8169H2.21282C2.18809 12.8169 2.17799 12.8115 2.17273 12.8083C2.16432 12.8032 2.15294 12.7932 2.14354 12.7769C2.13413 12.7606 2.13109 12.7457 2.13092 12.7359C2.13081 12.7297 2.13117 12.7183 2.14354 12.6969L7.93048 2.67359C7.94284 2.65218 7.95258 2.64614 7.95795 2.64316C7.96654 2.6384 7.98095 2.63359 7.99976 2.63359C8.01858 2.63359 8.03299 2.6384 8.04157 2.64316C8.04694 2.64614 8.05668 2.65218 8.06904 2.67359ZM6.89125 2.07359C7.38392 1.22026 8.6156 1.22026 9.10828 2.07359L14.8952 12.0969C15.3879 12.9502 14.7721 14.0169 13.7867 14.0169H2.21282C1.22747 14.0169 0.611633 12.9502 1.10431 12.0969L6.89125 2.07359ZM7.99976 5.29656C8.33113 5.29656 8.59976 5.56519 8.59976 5.89656L8.59976 9.56844C8.59976 9.89981 8.33113 10.1684 7.99976 10.1684C7.66839 10.1684 7.39976 9.89981 7.39976 9.56844V5.89656C7.39976 5.56519 7.66839 5.29656 7.99976 5.29656ZM8.59976 11.2872C8.59976 11.6186 8.33113 11.8872 7.99976 11.8872C7.66839 11.8872 7.39976 11.6186 7.39976 11.2872C7.39976 10.9558 7.66839 10.6872 7.99976 10.6872C8.33113 10.6872 8.59976 10.9558 8.59976 11.2872Z"></path></svg> <div data-v-01ae2ffd="" class="menu-label">举报</div></li></ul></p><!----></div><div data-v-01ae2ffd="" class="more-btn"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-01ae2ffd="" cx="2.33301" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-01ae2ffd="" cx="8" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-01ae2ffd="" cx="13.667" cy="8" r="1.0625" fill="#8A919F"></circle></svg></div></span></div></div> <!----> <div data-v-01ae2ffd="" class="comment-reply-wrapper"><div data-v-48aabfe4="" data-v-01ae2ffd="" class="reply-list default"><div data-v-624473bc="" data-v-48aabfe4="" data-jj-helper-comment-type="reply" data-jj-helper-comment-id="7002799900253864717" data-jj-helper-comment-status="1" data-jj-helper-item-id="6872111128135073806" data-jj-helper-item-type="2" class="reply-card reply-item default" data-cid="7002799900253864717"><div data-v-624473bc="" class="reply-avatar"><div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-624473bc="" href="https://juejin.cn/user/4195392103385911" target="_blank" rel="" class="jj-link" data-v-487cbd49=""><div data-v-03256cc6="" data-v-624473bc="" class="avatar jj-avatar avatar" data-v-65b50b51=""><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/52232c846b419e78c0be35b8731b61aa~90x90.awebp" alt="吃肉的小飞猪的头像" class="lazy avatar-img" loading="lazy"> <!----></div></a></div></div> <div data-v-624473bc="" class="reply-wrapper"><div data-v-624473bc="" class="reply-content"><div data-v-624473bc="" class="content"><div data-v-624473bc="" class="user-info"><div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-624473bc="" href="https://juejin.cn/user/4195392103385911" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 120px;">
      吃肉的小飞猪
    </span> <!----> <!----> <!----> </a></div> <!----> <!----> <span data-v-624473bc="">:</span></div> <span data-v-624473bc=""><a href="https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Ftype-challenges%2Ftype-challenges%2Fblob%2Fmaster%2FREADME.zh-CN.md" class="parse-emoji-url" style="color: var(--juejin-font-brand1-normal)" title="https://github.com/type-challenges/type-challenges/blob/master/README.zh-CN.md" target="_blank" rel="nofollow noopener noreferrer"><img alt="" style="vertical-align: sub" draggable="false" src="./ts和js的区别_files/3f843e8626a3844c624fb596dddd9674.svg">github.com</a></span></div> <!----> <div data-v-624473bc="" class="reply-img-box"><!----></div></div> <div data-v-624473bc="" class="reply-action"><time data-v-624473bc="" datetime="1630466413000" title="Wed Sep 01 2021 11:20:13 GMT+0800 (香港标准时间)" class="action-time">
        3年前
      </time> <div data-v-624473bc="" class="action-digg"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.56162 2.16952C8.66569 2.09661 8.78195 2.06124 8.88247 2.0912C8.97653 2.11923 9.23851 2.25916 9.50988 2.96799C9.64419 3.31881 9.9356 4.2424 9.42155 6.05431C9.29751 6.49152 9.61394 6.95303 10.0926 6.95971L13.492 7.00716L13.492 7.00721H13.4991C13.6049 7.00721 13.7228 7.01986 13.8134 7.05898C13.8544 7.07671 13.8815 7.09639 13.8999 7.116C13.9166 7.13375 13.9368 7.16247 13.9515 7.21636C13.9848 7.33784 14.0228 7.74712 13.9473 8.42262C13.874 9.07857 13.698 9.94479 13.341 10.9598C13.0424 11.8088 12.6601 12.5292 12.0684 13.4879C12.0558 13.5052 12.0462 13.5197 12.0418 13.5265L12.0404 13.5285C12.0292 13.5454 12.0242 13.5531 12.018 13.5618C12.0076 13.5764 12.0018 13.582 11.9983 13.585C11.996 13.587 11.9908 13.5912 11.9777 13.5959C11.9638 13.6009 11.9311 13.61 11.8706 13.61H5.56278L5.56373 6.58489C5.87126 6.41901 6.19881 6.20128 6.54112 5.84059C6.93883 5.42152 7.33789 4.8294 7.76254 3.94183C7.84974 3.75957 7.91745 3.55962 7.97574 3.37762C7.99264 3.32486 8.0087 3.27379 8.02438 3.22393L8.02439 3.22389C8.066 3.09158 8.10495 2.96776 8.14985 2.84312C8.2758 2.49352 8.40247 2.28101 8.56162 2.16952ZM10.452 2.60729C10.1323 1.77209 9.70208 1.28277 9.17063 1.12437C8.64564 0.967902 8.20308 1.18891 7.98278 1.34325C7.55169 1.64525 7.33837 2.11908 7.20071 2.5012C7.14817 2.64705 7.10002 2.80016 7.05661 2.93824C7.0422 2.98405 7.02832 3.02821 7.01496 3.0699C6.95791 3.24804 6.90763 3.39115 6.85248 3.50643C6.45683 4.3334 6.1121 4.8271 5.80935 5.14611C5.51322 5.45815 5.23983 5.6219 4.9473 5.76821C4.71095 5.88641 4.55494 6.12906 4.55491 6.40159L4.55388 13.9125C4.55383 14.3026 4.87002 14.6188 5.26008 14.6188H11.8706C12.2097 14.6188 12.4663 14.5113 12.6519 14.3535C12.7387 14.2797 12.7988 14.2043 12.8387 14.1484C12.8556 14.1248 12.8704 14.1025 12.8786 14.09L12.8813 14.0859L12.8826 14.0839L12.8955 14.0685L12.9142 14.0382C13.5304 13.0414 13.9578 12.247 14.2927 11.2945C14.6745 10.209 14.8679 9.26811 14.9499 8.5347C15.0297 7.82084 15.009 7.25845 14.9246 6.95014C14.805 6.51285 14.5104 6.26112 14.2134 6.13284C13.9385 6.01407 13.661 5.99859 13.5028 5.99836L10.4907 5.95631C10.9296 4.15791 10.648 3.11902 10.452 2.60729ZM1.0008 6.46783C0.981809 6.0652 1.30313 5.72836 1.70621 5.72836H2.75264C3.14266 5.72836 3.45883 6.04454 3.45883 6.43456V13.9442C3.45883 14.3342 3.14266 14.6504 2.75264 14.6504H2.06044C1.68335 14.6504 1.37279 14.3541 1.35502 13.9775L1.0008 6.46783Z"></path></svg>
        7
      </div> <div data-v-624473bc="" class="action-reply"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M2.30136 10.1142L2.30019 3.45191C2.30024 2.6778 2.92779 2.05019 3.70191 2.05019H12.3989C13.1731 2.05019 13.8006 2.67785 13.8006 3.452L13.8018 10.1144C13.8017 10.8885 13.1742 11.516 12.4001 11.516H10.1322C9.97329 11.516 9.81862 11.5675 9.69142 11.6629L6.65162 13.9406C6.62173 13.9598 6.58148 13.9444 6.57209 13.91L6.15416 12.0869C6.07758 11.7528 5.78033 11.516 5.43761 11.516H3.70308C2.92893 11.516 2.30136 10.8884 2.30136 10.1142ZM3.70191 1C2.34776 1 1.25 2.09776 1.25 3.45191L1.25117 10.1144C1.25122 11.4685 2.34896 12.5662 3.70308 12.5662H5.18661L5.54953 14.1495L5.55107 14.1558C5.73515 14.9153 6.62879 15.248 7.26458 14.7937L10.2372 12.5662H12.4001C13.7542 12.5662 14.852 11.4684 14.852 10.1142L14.8508 3.45182C14.8508 2.09771 13.753 1 12.3989 1H3.70191ZM4.78612 7.91404C5.35027 7.91404 5.8076 7.45671 5.8076 6.89257C5.8076 6.32842 5.35027 5.87109 4.78612 5.87109C4.22198 5.87109 3.76465 6.32842 3.76465 6.89257C3.76465 7.45671 4.22198 7.91404 4.78612 7.91404ZM8.98631 6.89257C8.98631 7.45671 8.52898 7.91404 7.96483 7.91404C7.40069 7.91404 6.94336 7.45671 6.94336 6.89257C6.94336 6.32842 7.40069 5.87109 7.96483 5.87109C8.52898 5.87109 8.98631 6.32842 8.98631 6.89257ZM11.1484 7.91404C11.7126 7.91404 12.1699 7.45671 12.1699 6.89257C12.1699 6.32842 11.7126 5.87109 11.1484 5.87109C10.5843 5.87109 10.127 6.32842 10.127 6.89257C10.127 7.45671 10.5843 7.91404 11.1484 7.91404Z"></path></svg>
        回复
      </div> <div data-v-624473bc="" data-jj-comment-action="7002799900253864717" style="flex: 1 1 0%;"></div> <div data-v-624473bc="" class="more-action"><span data-v-624473bc="" class="more-popover"><div class="byte-popover" x-placement="top-end" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1014; top: 0px; left: 0px; transform: translate3d(663px, 29px, 0px);"><!----><p class="byte-popover__content"><ul data-v-624473bc="" class="more-menu"><!----> <li data-v-624473bc=""><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.21356 7.13688C9.49486 7.13688 10.5336 6.09818 10.5336 4.81688C10.5336 3.53557 9.49486 2.49688 8.21356 2.49688C6.93225 2.49688 5.89356 3.53557 5.89356 4.81688C5.89356 6.09818 6.93225 7.13688 8.21356 7.13688ZM8.21356 8.33688C10.1576 8.33688 11.7336 6.76092 11.7336 4.81688C11.7336 2.87283 10.1576 1.29688 8.21356 1.29688C6.26951 1.29688 4.69355 2.87283 4.69355 4.81688C4.69355 6.76092 6.26951 8.33688 8.21356 8.33688ZM5.91749 10.5125C4.30178 10.5125 2.99199 11.8223 2.99199 13.438C2.99199 13.4706 3.01845 13.4971 3.05108 13.4971H7.53515C7.86652 13.4971 8.13515 13.7657 8.13515 14.0971C8.13515 14.4285 7.86652 14.6971 7.53515 14.6971H3.05108C2.35571 14.6971 1.79199 14.1334 1.79199 13.438C1.79199 11.1595 3.63904 9.3125 5.91749 9.3125H7.53515C7.86652 9.3125 8.13515 9.58113 8.13515 9.9125C8.13515 10.2439 7.86652 10.5125 7.53515 10.5125H5.91749ZM9.78025 10.1265C10.0146 9.8922 10.3945 9.8922 10.6288 10.1265L11.908 11.4057L13.1833 10.1304C13.4176 9.89611 13.7975 9.89611 14.0318 10.1304C14.2661 10.3647 14.2661 10.7446 14.0318 10.979L12.7565 12.2542L14.0229 13.5206C14.2572 13.7549 14.2572 14.1348 14.0229 14.3692C13.7886 14.6035 13.4087 14.6035 13.1744 14.3692L11.908 13.1028L10.6377 14.3731C10.4034 14.6074 10.0235 14.6074 9.78914 14.3731C9.55483 14.1388 9.55483 13.7589 9.78914 13.5245L11.0594 12.2542L9.78025 10.975C9.54594 10.7407 9.54594 10.3608 9.78025 10.1265Z"></path></svg> <div data-v-624473bc="" class="menu-label">
                  屏蔽作者：吃肉的小飞猪
                </div></li> <li data-v-624473bc=""><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.06904 2.67359L13.856 12.6969C13.8684 12.7183 13.8687 12.7297 13.8686 12.7359C13.8684 12.7457 13.8654 12.7606 13.856 12.7769C13.8466 12.7932 13.8352 12.8032 13.8268 12.8083C13.8215 12.8115 13.8114 12.8169 13.7867 12.8169H2.21282C2.18809 12.8169 2.17799 12.8115 2.17273 12.8083C2.16432 12.8032 2.15294 12.7932 2.14354 12.7769C2.13413 12.7606 2.13109 12.7457 2.13092 12.7359C2.13081 12.7297 2.13117 12.7183 2.14354 12.6969L7.93048 2.67359C7.94284 2.65218 7.95258 2.64614 7.95795 2.64316C7.96654 2.6384 7.98095 2.63359 7.99976 2.63359C8.01858 2.63359 8.03299 2.6384 8.04157 2.64316C8.04694 2.64614 8.05668 2.65218 8.06904 2.67359ZM6.89125 2.07359C7.38392 1.22026 8.6156 1.22026 9.10828 2.07359L14.8952 12.0969C15.3879 12.9502 14.7721 14.0169 13.7867 14.0169H2.21282C1.22747 14.0169 0.611633 12.9502 1.10431 12.0969L6.89125 2.07359ZM7.99976 5.29656C8.33113 5.29656 8.59976 5.56519 8.59976 5.89656L8.59976 9.56844C8.59976 9.89981 8.33113 10.1684 7.99976 10.1684C7.66839 10.1684 7.39976 9.89981 7.39976 9.56844V5.89656C7.39976 5.56519 7.66839 5.29656 7.99976 5.29656ZM8.59976 11.2872C8.59976 11.6186 8.33113 11.8872 7.99976 11.8872C7.66839 11.8872 7.39976 11.6186 7.39976 11.2872C7.39976 10.9558 7.66839 10.6872 7.99976 10.6872C8.33113 10.6872 8.59976 10.9558 8.59976 11.2872Z"></path></svg> <div data-v-624473bc="" class="menu-label">举报</div></li></ul></p><!----></div><div data-v-624473bc="" class="more-btn"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-624473bc="" cx="2.33301" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-624473bc="" cx="8" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-624473bc="" cx="13.667" cy="8" r="1.0625" fill="#8A919F"></circle></svg></div></span></div></div> <!----></div></div><div data-v-624473bc="" data-v-48aabfe4="" data-jj-helper-comment-type="reply" data-jj-helper-comment-id="7005124794853344014" data-jj-helper-comment-status="1" data-jj-helper-item-id="6872111128135073806" data-jj-helper-item-type="2" class="reply-card reply-item default" data-cid="7005124794853344014"><div data-v-624473bc="" class="reply-avatar"><div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-624473bc="" href="https://juejin.cn/user/571401779031678" target="_blank" rel="" class="jj-link" data-v-487cbd49=""><div data-v-03256cc6="" data-v-624473bc="" class="avatar jj-avatar avatar" data-v-65b50b51=""><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/665bb2fcebb1b557f624e8f2a8f27503~90x90.awebp" alt="封笺的头像" class="lazy avatar-img" loading="lazy"> <!----></div></a></div></div> <div data-v-624473bc="" class="reply-wrapper"><div data-v-624473bc="" class="reply-content"><div data-v-624473bc="" class="content"><div data-v-624473bc="" class="user-info"><div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-624473bc="" href="https://juejin.cn/user/571401779031678" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 120px;">
      封笺
    </span> <!----> <!----> <!----> </a></div> <!----> <span data-v-624473bc="">回复</span> <div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-624473bc="" href="https://juejin.cn/user/4195392103385911" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 120px;">
      吃肉的小飞猪
    </span> <!----> <!----> <!----> </a></div> <!----> <span data-v-624473bc="">:</span></div> <span data-v-624473bc="">谢谢分享</span></div> <!----> <div data-v-624473bc="" class="reply-img-box"><!----></div></div> <div data-v-624473bc="" class="reply-action"><time data-v-624473bc="" datetime="1631007718000" title="Tue Sep 07 2021 17:41:58 GMT+0800 (香港标准时间)" class="action-time">
        3年前
      </time> <div data-v-624473bc="" class="action-digg"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.56162 2.16952C8.66569 2.09661 8.78195 2.06124 8.88247 2.0912C8.97653 2.11923 9.23851 2.25916 9.50988 2.96799C9.64419 3.31881 9.9356 4.2424 9.42155 6.05431C9.29751 6.49152 9.61394 6.95303 10.0926 6.95971L13.492 7.00716L13.492 7.00721H13.4991C13.6049 7.00721 13.7228 7.01986 13.8134 7.05898C13.8544 7.07671 13.8815 7.09639 13.8999 7.116C13.9166 7.13375 13.9368 7.16247 13.9515 7.21636C13.9848 7.33784 14.0228 7.74712 13.9473 8.42262C13.874 9.07857 13.698 9.94479 13.341 10.9598C13.0424 11.8088 12.6601 12.5292 12.0684 13.4879C12.0558 13.5052 12.0462 13.5197 12.0418 13.5265L12.0404 13.5285C12.0292 13.5454 12.0242 13.5531 12.018 13.5618C12.0076 13.5764 12.0018 13.582 11.9983 13.585C11.996 13.587 11.9908 13.5912 11.9777 13.5959C11.9638 13.6009 11.9311 13.61 11.8706 13.61H5.56278L5.56373 6.58489C5.87126 6.41901 6.19881 6.20128 6.54112 5.84059C6.93883 5.42152 7.33789 4.8294 7.76254 3.94183C7.84974 3.75957 7.91745 3.55962 7.97574 3.37762C7.99264 3.32486 8.0087 3.27379 8.02438 3.22393L8.02439 3.22389C8.066 3.09158 8.10495 2.96776 8.14985 2.84312C8.2758 2.49352 8.40247 2.28101 8.56162 2.16952ZM10.452 2.60729C10.1323 1.77209 9.70208 1.28277 9.17063 1.12437C8.64564 0.967902 8.20308 1.18891 7.98278 1.34325C7.55169 1.64525 7.33837 2.11908 7.20071 2.5012C7.14817 2.64705 7.10002 2.80016 7.05661 2.93824C7.0422 2.98405 7.02832 3.02821 7.01496 3.0699C6.95791 3.24804 6.90763 3.39115 6.85248 3.50643C6.45683 4.3334 6.1121 4.8271 5.80935 5.14611C5.51322 5.45815 5.23983 5.6219 4.9473 5.76821C4.71095 5.88641 4.55494 6.12906 4.55491 6.40159L4.55388 13.9125C4.55383 14.3026 4.87002 14.6188 5.26008 14.6188H11.8706C12.2097 14.6188 12.4663 14.5113 12.6519 14.3535C12.7387 14.2797 12.7988 14.2043 12.8387 14.1484C12.8556 14.1248 12.8704 14.1025 12.8786 14.09L12.8813 14.0859L12.8826 14.0839L12.8955 14.0685L12.9142 14.0382C13.5304 13.0414 13.9578 12.247 14.2927 11.2945C14.6745 10.209 14.8679 9.26811 14.9499 8.5347C15.0297 7.82084 15.009 7.25845 14.9246 6.95014C14.805 6.51285 14.5104 6.26112 14.2134 6.13284C13.9385 6.01407 13.661 5.99859 13.5028 5.99836L10.4907 5.95631C10.9296 4.15791 10.648 3.11902 10.452 2.60729ZM1.0008 6.46783C0.981809 6.0652 1.30313 5.72836 1.70621 5.72836H2.75264C3.14266 5.72836 3.45883 6.04454 3.45883 6.43456V13.9442C3.45883 14.3342 3.14266 14.6504 2.75264 14.6504H2.06044C1.68335 14.6504 1.37279 14.3541 1.35502 13.9775L1.0008 6.46783Z"></path></svg>
        点赞
      </div> <div data-v-624473bc="" class="action-reply"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M2.30136 10.1142L2.30019 3.45191C2.30024 2.6778 2.92779 2.05019 3.70191 2.05019H12.3989C13.1731 2.05019 13.8006 2.67785 13.8006 3.452L13.8018 10.1144C13.8017 10.8885 13.1742 11.516 12.4001 11.516H10.1322C9.97329 11.516 9.81862 11.5675 9.69142 11.6629L6.65162 13.9406C6.62173 13.9598 6.58148 13.9444 6.57209 13.91L6.15416 12.0869C6.07758 11.7528 5.78033 11.516 5.43761 11.516H3.70308C2.92893 11.516 2.30136 10.8884 2.30136 10.1142ZM3.70191 1C2.34776 1 1.25 2.09776 1.25 3.45191L1.25117 10.1144C1.25122 11.4685 2.34896 12.5662 3.70308 12.5662H5.18661L5.54953 14.1495L5.55107 14.1558C5.73515 14.9153 6.62879 15.248 7.26458 14.7937L10.2372 12.5662H12.4001C13.7542 12.5662 14.852 11.4684 14.852 10.1142L14.8508 3.45182C14.8508 2.09771 13.753 1 12.3989 1H3.70191ZM4.78612 7.91404C5.35027 7.91404 5.8076 7.45671 5.8076 6.89257C5.8076 6.32842 5.35027 5.87109 4.78612 5.87109C4.22198 5.87109 3.76465 6.32842 3.76465 6.89257C3.76465 7.45671 4.22198 7.91404 4.78612 7.91404ZM8.98631 6.89257C8.98631 7.45671 8.52898 7.91404 7.96483 7.91404C7.40069 7.91404 6.94336 7.45671 6.94336 6.89257C6.94336 6.32842 7.40069 5.87109 7.96483 5.87109C8.52898 5.87109 8.98631 6.32842 8.98631 6.89257ZM11.1484 7.91404C11.7126 7.91404 12.1699 7.45671 12.1699 6.89257C12.1699 6.32842 11.7126 5.87109 11.1484 5.87109C10.5843 5.87109 10.127 6.32842 10.127 6.89257C10.127 7.45671 10.5843 7.91404 11.1484 7.91404Z"></path></svg>
        回复
      </div> <div data-v-624473bc="" data-jj-comment-action="7005124794853344014" style="flex: 1 1 0%;"></div> <div data-v-624473bc="" class="more-action"><span data-v-624473bc="" class="more-popover"><div class="byte-popover" x-placement="top-end" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1015; top: 0px; left: 0px; transform: translate3d(663px, 29px, 0px);"><!----><p class="byte-popover__content"><ul data-v-624473bc="" class="more-menu"><!----> <li data-v-624473bc=""><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.21356 7.13688C9.49486 7.13688 10.5336 6.09818 10.5336 4.81688C10.5336 3.53557 9.49486 2.49688 8.21356 2.49688C6.93225 2.49688 5.89356 3.53557 5.89356 4.81688C5.89356 6.09818 6.93225 7.13688 8.21356 7.13688ZM8.21356 8.33688C10.1576 8.33688 11.7336 6.76092 11.7336 4.81688C11.7336 2.87283 10.1576 1.29688 8.21356 1.29688C6.26951 1.29688 4.69355 2.87283 4.69355 4.81688C4.69355 6.76092 6.26951 8.33688 8.21356 8.33688ZM5.91749 10.5125C4.30178 10.5125 2.99199 11.8223 2.99199 13.438C2.99199 13.4706 3.01845 13.4971 3.05108 13.4971H7.53515C7.86652 13.4971 8.13515 13.7657 8.13515 14.0971C8.13515 14.4285 7.86652 14.6971 7.53515 14.6971H3.05108C2.35571 14.6971 1.79199 14.1334 1.79199 13.438C1.79199 11.1595 3.63904 9.3125 5.91749 9.3125H7.53515C7.86652 9.3125 8.13515 9.58113 8.13515 9.9125C8.13515 10.2439 7.86652 10.5125 7.53515 10.5125H5.91749ZM9.78025 10.1265C10.0146 9.8922 10.3945 9.8922 10.6288 10.1265L11.908 11.4057L13.1833 10.1304C13.4176 9.89611 13.7975 9.89611 14.0318 10.1304C14.2661 10.3647 14.2661 10.7446 14.0318 10.979L12.7565 12.2542L14.0229 13.5206C14.2572 13.7549 14.2572 14.1348 14.0229 14.3692C13.7886 14.6035 13.4087 14.6035 13.1744 14.3692L11.908 13.1028L10.6377 14.3731C10.4034 14.6074 10.0235 14.6074 9.78914 14.3731C9.55483 14.1388 9.55483 13.7589 9.78914 13.5245L11.0594 12.2542L9.78025 10.975C9.54594 10.7407 9.54594 10.3608 9.78025 10.1265Z"></path></svg> <div data-v-624473bc="" class="menu-label">
                  屏蔽作者：封笺
                </div></li> <li data-v-624473bc=""><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.06904 2.67359L13.856 12.6969C13.8684 12.7183 13.8687 12.7297 13.8686 12.7359C13.8684 12.7457 13.8654 12.7606 13.856 12.7769C13.8466 12.7932 13.8352 12.8032 13.8268 12.8083C13.8215 12.8115 13.8114 12.8169 13.7867 12.8169H2.21282C2.18809 12.8169 2.17799 12.8115 2.17273 12.8083C2.16432 12.8032 2.15294 12.7932 2.14354 12.7769C2.13413 12.7606 2.13109 12.7457 2.13092 12.7359C2.13081 12.7297 2.13117 12.7183 2.14354 12.6969L7.93048 2.67359C7.94284 2.65218 7.95258 2.64614 7.95795 2.64316C7.96654 2.6384 7.98095 2.63359 7.99976 2.63359C8.01858 2.63359 8.03299 2.6384 8.04157 2.64316C8.04694 2.64614 8.05668 2.65218 8.06904 2.67359ZM6.89125 2.07359C7.38392 1.22026 8.6156 1.22026 9.10828 2.07359L14.8952 12.0969C15.3879 12.9502 14.7721 14.0169 13.7867 14.0169H2.21282C1.22747 14.0169 0.611633 12.9502 1.10431 12.0969L6.89125 2.07359ZM7.99976 5.29656C8.33113 5.29656 8.59976 5.56519 8.59976 5.89656L8.59976 9.56844C8.59976 9.89981 8.33113 10.1684 7.99976 10.1684C7.66839 10.1684 7.39976 9.89981 7.39976 9.56844V5.89656C7.39976 5.56519 7.66839 5.29656 7.99976 5.29656ZM8.59976 11.2872C8.59976 11.6186 8.33113 11.8872 7.99976 11.8872C7.66839 11.8872 7.39976 11.6186 7.39976 11.2872C7.39976 10.9558 7.66839 10.6872 7.99976 10.6872C8.33113 10.6872 8.59976 10.9558 8.59976 11.2872Z"></path></svg> <div data-v-624473bc="" class="menu-label">举报</div></li></ul></p><!----></div><div data-v-624473bc="" class="more-btn"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-624473bc="" cx="2.33301" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-624473bc="" cx="8" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-624473bc="" cx="13.667" cy="8" r="1.0625" fill="#8A919F"></circle></svg></div></span></div></div> <!----></div></div> <div data-v-48aabfe4="" class="top-has-more default"><span data-v-48aabfe4="">
      查看全部 6 条回复
      <svg data-v-48aabfe4="" width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path data-v-48aabfe4="" fill-rule="evenodd" clip-rule="evenodd" d="M5.99976 7.93206L10.0656 3.86619C10.1633 3.76856 10.3215 3.76856 10.4192 3.86619L10.7727 4.21975C10.8704 4.31738 10.8704 4.47567 10.7727 4.5733L6.35331 8.99272C6.15805 9.18798 5.84147 9.18798 5.6462 8.99272L1.22679 4.5733C1.12916 4.47567 1.12916 4.31738 1.22679 4.21975L1.58034 3.86619C1.67797 3.76856 1.83626 3.76856 1.93389 3.86619L5.99976 7.93206Z"></path></svg></span></div></div></div></div></div><div data-v-01ae2ffd="" data-v-3c9d31de="" data-jj-helper-comment-type="comment" data-jj-helper-comment-id="7085343864378622734" data-jj-helper-comment-status="1" data-jj-helper-item-id="6872111128135073806" data-jj-helper-item-type="2" class="comment-card comment-item default" data-cid="7085343864378622734"><div data-v-01ae2ffd="" class="comment-avatar"><div data-v-487cbd49="" data-v-d7aef884="" data-v-01ae2ffd="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-01ae2ffd="" href="https://juejin.cn/user/764915822103079" target="_blank" rel="" class="jj-link" data-v-487cbd49=""><div data-v-03256cc6="" data-v-01ae2ffd="" class="avatar jj-avatar avatar" data-v-65b50b51=""><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/075d8e781ba84bf64035ac251988fb93~90x90.awebp" alt="阿宝哥的头像" class="lazy avatar-img" loading="lazy"> <!----></div></a></div></div> <div data-v-01ae2ffd="" class="comment-wrapper"><div data-v-01ae2ffd="" class="comment-header"><div data-v-487cbd49="" data-v-d7aef884="" data-v-01ae2ffd="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-01ae2ffd="" href="https://juejin.cn/user/764915822103079" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 300px;">
      阿宝哥
    </span> <!----> <!----> <!----> </a></div> <div data-v-01ae2ffd="" class="author-tag">
        作者
      </div> <div data-v-01ae2ffd="" class="author-intro">
        🏆掘金签约作者 | 公众号@全栈修仙之路
      </div> <div data-v-01ae2ffd="" style="flex: 1 1 0%;"></div> <div data-v-01ae2ffd="" style="display: flex; flex-shrink: 0; flex-grow: 0;"><img data-v-5244ef91="" data-v-01ae2ffd="" src="./ts和js的区别_files/51b98a0c69a34689b8ca2c10dd66156d~tplv-k3u1fbpfcp-image.image" alt="" class="lazy hot-icon" loading="lazy"></div></div> <div data-v-01ae2ffd="" class="comment-content"><div data-v-01ae2ffd="" class="content">重学 TS 系列视频教程来咯：<a href="https://link.juejin.cn/?target=https%3A%2F%2Fspace.bilibili.com%2F406258607" class="parse-emoji-url" style="color: var(--juejin-font-brand1-normal)" title="https://space.bilibili.com/406258607" target="_blank" rel="nofollow noopener noreferrer"><img alt="" style="vertical-align: sub" draggable="false" src="./ts和js的区别_files/3f843e8626a3844c624fb596dddd9674.svg">space.bilibili.com</a></div> <!----> <!----></div> <div data-v-01ae2ffd="" jj-comment-anchor-bottom="true" class="comment-action"><time data-v-01ae2ffd="" datetime="1649685175000" title="Mon Apr 11 2022 21:52:55 GMT+0800 (香港标准时间)" class="action-time">
        2年前
      </time> <div data-v-01ae2ffd="" class="action-digg"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.56162 2.16952C8.66569 2.09661 8.78195 2.06124 8.88247 2.0912C8.97653 2.11923 9.23851 2.25916 9.50988 2.96799C9.64419 3.31881 9.9356 4.2424 9.42155 6.05431C9.29751 6.49152 9.61394 6.95303 10.0926 6.95971L13.492 7.00716L13.492 7.00721H13.4991C13.6049 7.00721 13.7228 7.01986 13.8134 7.05898C13.8544 7.07671 13.8815 7.09639 13.8999 7.116C13.9166 7.13375 13.9368 7.16247 13.9515 7.21636C13.9848 7.33784 14.0228 7.74712 13.9473 8.42262C13.874 9.07857 13.698 9.94479 13.341 10.9598C13.0424 11.8088 12.6601 12.5292 12.0684 13.4879C12.0558 13.5052 12.0462 13.5197 12.0418 13.5265L12.0404 13.5285C12.0292 13.5454 12.0242 13.5531 12.018 13.5618C12.0076 13.5764 12.0018 13.582 11.9983 13.585C11.996 13.587 11.9908 13.5912 11.9777 13.5959C11.9638 13.6009 11.9311 13.61 11.8706 13.61H5.56278L5.56373 6.58489C5.87126 6.41901 6.19881 6.20128 6.54112 5.84059C6.93883 5.42152 7.33789 4.8294 7.76254 3.94183C7.84974 3.75957 7.91745 3.55962 7.97574 3.37762C7.99264 3.32486 8.0087 3.27379 8.02438 3.22393L8.02439 3.22389C8.066 3.09158 8.10495 2.96776 8.14985 2.84312C8.2758 2.49352 8.40247 2.28101 8.56162 2.16952ZM10.452 2.60729C10.1323 1.77209 9.70208 1.28277 9.17063 1.12437C8.64564 0.967902 8.20308 1.18891 7.98278 1.34325C7.55169 1.64525 7.33837 2.11908 7.20071 2.5012C7.14817 2.64705 7.10002 2.80016 7.05661 2.93824C7.0422 2.98405 7.02832 3.02821 7.01496 3.0699C6.95791 3.24804 6.90763 3.39115 6.85248 3.50643C6.45683 4.3334 6.1121 4.8271 5.80935 5.14611C5.51322 5.45815 5.23983 5.6219 4.9473 5.76821C4.71095 5.88641 4.55494 6.12906 4.55491 6.40159L4.55388 13.9125C4.55383 14.3026 4.87002 14.6188 5.26008 14.6188H11.8706C12.2097 14.6188 12.4663 14.5113 12.6519 14.3535C12.7387 14.2797 12.7988 14.2043 12.8387 14.1484C12.8556 14.1248 12.8704 14.1025 12.8786 14.09L12.8813 14.0859L12.8826 14.0839L12.8955 14.0685L12.9142 14.0382C13.5304 13.0414 13.9578 12.247 14.2927 11.2945C14.6745 10.209 14.8679 9.26811 14.9499 8.5347C15.0297 7.82084 15.009 7.25845 14.9246 6.95014C14.805 6.51285 14.5104 6.26112 14.2134 6.13284C13.9385 6.01407 13.661 5.99859 13.5028 5.99836L10.4907 5.95631C10.9296 4.15791 10.648 3.11902 10.452 2.60729ZM1.0008 6.46783C0.981809 6.0652 1.30313 5.72836 1.70621 5.72836H2.75264C3.14266 5.72836 3.45883 6.04454 3.45883 6.43456V13.9442C3.45883 14.3342 3.14266 14.6504 2.75264 14.6504H2.06044C1.68335 14.6504 1.37279 14.3541 1.35502 13.9775L1.0008 6.46783Z"></path></svg>
        14
      </div> <div data-v-01ae2ffd="" class="action-reply"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M2.30136 10.1142L2.30019 3.45191C2.30024 2.6778 2.92779 2.05019 3.70191 2.05019H12.3989C13.1731 2.05019 13.8006 2.67785 13.8006 3.452L13.8018 10.1144C13.8017 10.8885 13.1742 11.516 12.4001 11.516H10.1322C9.97329 11.516 9.81862 11.5675 9.69142 11.6629L6.65162 13.9406C6.62173 13.9598 6.58148 13.9444 6.57209 13.91L6.15416 12.0869C6.07758 11.7528 5.78033 11.516 5.43761 11.516H3.70308C2.92893 11.516 2.30136 10.8884 2.30136 10.1142ZM3.70191 1C2.34776 1 1.25 2.09776 1.25 3.45191L1.25117 10.1144C1.25122 11.4685 2.34896 12.5662 3.70308 12.5662H5.18661L5.54953 14.1495L5.55107 14.1558C5.73515 14.9153 6.62879 15.248 7.26458 14.7937L10.2372 12.5662H12.4001C13.7542 12.5662 14.852 11.4684 14.852 10.1142L14.8508 3.45182C14.8508 2.09771 13.753 1 12.3989 1H3.70191ZM4.78612 7.91404C5.35027 7.91404 5.8076 7.45671 5.8076 6.89257C5.8076 6.32842 5.35027 5.87109 4.78612 5.87109C4.22198 5.87109 3.76465 6.32842 3.76465 6.89257C3.76465 7.45671 4.22198 7.91404 4.78612 7.91404ZM8.98631 6.89257C8.98631 7.45671 8.52898 7.91404 7.96483 7.91404C7.40069 7.91404 6.94336 7.45671 6.94336 6.89257C6.94336 6.32842 7.40069 5.87109 7.96483 5.87109C8.52898 5.87109 8.98631 6.32842 8.98631 6.89257ZM11.1484 7.91404C11.7126 7.91404 12.1699 7.45671 12.1699 6.89257C12.1699 6.32842 11.7126 5.87109 11.1484 5.87109C10.5843 5.87109 10.127 6.32842 10.127 6.89257C10.127 7.45671 10.5843 7.91404 11.1484 7.91404Z"></path></svg>
        评论
      </div> <div data-v-01ae2ffd="" data-jj-comment-action="7085343864378622734" style="flex: 1 1 0%;"></div> <div data-v-01ae2ffd="" class="more-action"><span data-v-01ae2ffd="" class="more-popover"><div class="byte-popover" x-placement="top-end" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1016; top: 0px; left: 0px; transform: translate3d(703px, 59px, 0px);"><!----><p class="byte-popover__content"><ul data-v-01ae2ffd="" class="more-menu"><!----> <li data-v-01ae2ffd=""><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.21356 7.13688C9.49486 7.13688 10.5336 6.09818 10.5336 4.81688C10.5336 3.53557 9.49486 2.49688 8.21356 2.49688C6.93225 2.49688 5.89356 3.53557 5.89356 4.81688C5.89356 6.09818 6.93225 7.13688 8.21356 7.13688ZM8.21356 8.33688C10.1576 8.33688 11.7336 6.76092 11.7336 4.81688C11.7336 2.87283 10.1576 1.29688 8.21356 1.29688C6.26951 1.29688 4.69355 2.87283 4.69355 4.81688C4.69355 6.76092 6.26951 8.33688 8.21356 8.33688ZM5.91749 10.5125C4.30178 10.5125 2.99199 11.8223 2.99199 13.438C2.99199 13.4706 3.01845 13.4971 3.05108 13.4971H7.53515C7.86652 13.4971 8.13515 13.7657 8.13515 14.0971C8.13515 14.4285 7.86652 14.6971 7.53515 14.6971H3.05108C2.35571 14.6971 1.79199 14.1334 1.79199 13.438C1.79199 11.1595 3.63904 9.3125 5.91749 9.3125H7.53515C7.86652 9.3125 8.13515 9.58113 8.13515 9.9125C8.13515 10.2439 7.86652 10.5125 7.53515 10.5125H5.91749ZM9.78025 10.1265C10.0146 9.8922 10.3945 9.8922 10.6288 10.1265L11.908 11.4057L13.1833 10.1304C13.4176 9.89611 13.7975 9.89611 14.0318 10.1304C14.2661 10.3647 14.2661 10.7446 14.0318 10.979L12.7565 12.2542L14.0229 13.5206C14.2572 13.7549 14.2572 14.1348 14.0229 14.3692C13.7886 14.6035 13.4087 14.6035 13.1744 14.3692L11.908 13.1028L10.6377 14.3731C10.4034 14.6074 10.0235 14.6074 9.78914 14.3731C9.55483 14.1388 9.55483 13.7589 9.78914 13.5245L11.0594 12.2542L9.78025 10.975C9.54594 10.7407 9.54594 10.3608 9.78025 10.1265Z"></path></svg> <div data-v-01ae2ffd="" class="menu-label">
                  屏蔽作者：阿宝哥
                </div></li> <li data-v-01ae2ffd=""><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.06904 2.67359L13.856 12.6969C13.8684 12.7183 13.8687 12.7297 13.8686 12.7359C13.8684 12.7457 13.8654 12.7606 13.856 12.7769C13.8466 12.7932 13.8352 12.8032 13.8268 12.8083C13.8215 12.8115 13.8114 12.8169 13.7867 12.8169H2.21282C2.18809 12.8169 2.17799 12.8115 2.17273 12.8083C2.16432 12.8032 2.15294 12.7932 2.14354 12.7769C2.13413 12.7606 2.13109 12.7457 2.13092 12.7359C2.13081 12.7297 2.13117 12.7183 2.14354 12.6969L7.93048 2.67359C7.94284 2.65218 7.95258 2.64614 7.95795 2.64316C7.96654 2.6384 7.98095 2.63359 7.99976 2.63359C8.01858 2.63359 8.03299 2.6384 8.04157 2.64316C8.04694 2.64614 8.05668 2.65218 8.06904 2.67359ZM6.89125 2.07359C7.38392 1.22026 8.6156 1.22026 9.10828 2.07359L14.8952 12.0969C15.3879 12.9502 14.7721 14.0169 13.7867 14.0169H2.21282C1.22747 14.0169 0.611633 12.9502 1.10431 12.0969L6.89125 2.07359ZM7.99976 5.29656C8.33113 5.29656 8.59976 5.56519 8.59976 5.89656L8.59976 9.56844C8.59976 9.89981 8.33113 10.1684 7.99976 10.1684C7.66839 10.1684 7.39976 9.89981 7.39976 9.56844V5.89656C7.39976 5.56519 7.66839 5.29656 7.99976 5.29656ZM8.59976 11.2872C8.59976 11.6186 8.33113 11.8872 7.99976 11.8872C7.66839 11.8872 7.39976 11.6186 7.39976 11.2872C7.39976 10.9558 7.66839 10.6872 7.99976 10.6872C8.33113 10.6872 8.59976 10.9558 8.59976 11.2872Z"></path></svg> <div data-v-01ae2ffd="" class="menu-label">举报</div></li></ul></p><!----></div><div data-v-01ae2ffd="" class="more-btn"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-01ae2ffd="" cx="2.33301" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-01ae2ffd="" cx="8" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-01ae2ffd="" cx="13.667" cy="8" r="1.0625" fill="#8A919F"></circle></svg></div></span></div></div> <!----> <div data-v-01ae2ffd="" class="comment-reply-wrapper"><!----></div></div></div><div data-v-01ae2ffd="" data-v-3c9d31de="" data-jj-helper-comment-type="comment" data-jj-helper-comment-id="6888562346231414798" data-jj-helper-comment-status="1" data-jj-helper-item-id="6872111128135073806" data-jj-helper-item-type="2" class="comment-card comment-item default" data-cid="6888562346231414798"><div data-v-01ae2ffd="" class="comment-avatar"><div data-v-487cbd49="" data-v-d7aef884="" data-v-01ae2ffd="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-01ae2ffd="" href="https://juejin.cn/user/2506542239979943" target="_blank" rel="" class="jj-link" data-v-487cbd49=""><div data-v-03256cc6="" data-v-01ae2ffd="" class="avatar jj-avatar avatar" data-v-65b50b51=""><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/b834505d0de1daca54b8c9af49898a6c~90x90.awebp" alt="前端演员麻子的头像" class="lazy avatar-img" loading="lazy"> <!----></div></a></div></div> <div data-v-01ae2ffd="" class="comment-wrapper"><div data-v-01ae2ffd="" class="comment-header"><div data-v-487cbd49="" data-v-d7aef884="" data-v-01ae2ffd="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-01ae2ffd="" href="https://juejin.cn/user/2506542239979943" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 300px;">
      前端演员麻子
    </span> <!----> <!----> <!----> </a></div> <!----> <div data-v-01ae2ffd="" class="author-intro">
        打杂前端
      </div> <div data-v-01ae2ffd="" style="flex: 1 1 0%;"></div> <!----></div> <div data-v-01ae2ffd="" class="comment-content"><div data-v-01ae2ffd="" class="content">这本小书简直太棒了把，挖到宝藏了，这是我见过最棒的教程，关注点赞走一波<img class="emoji old" draggable="false" "="" loading="lazy" alt="👍" src="./ts和js的区别_files/1f44d.svg~tplv-t2oaga2asx-image.image"><img class="emoji old" draggable="false" "="" loading="lazy" alt="👍" src="./ts和js的区别_files/1f44d.svg~tplv-t2oaga2asx-image.image"><img class="emoji old" draggable="false" "="" loading="lazy" alt="👍" src="./ts和js的区别_files/1f44d.svg~tplv-t2oaga2asx-image.image"></div> <!----> <!----></div> <div data-v-01ae2ffd="" jj-comment-anchor-bottom="true" class="comment-action"><time data-v-01ae2ffd="" datetime="1603868411000" title="Wed Oct 28 2020 15:00:11 GMT+0800 (香港标准时间)" class="action-time">
        4年前
      </time> <div data-v-01ae2ffd="" class="action-digg"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.56162 2.16952C8.66569 2.09661 8.78195 2.06124 8.88247 2.0912C8.97653 2.11923 9.23851 2.25916 9.50988 2.96799C9.64419 3.31881 9.9356 4.2424 9.42155 6.05431C9.29751 6.49152 9.61394 6.95303 10.0926 6.95971L13.492 7.00716L13.492 7.00721H13.4991C13.6049 7.00721 13.7228 7.01986 13.8134 7.05898C13.8544 7.07671 13.8815 7.09639 13.8999 7.116C13.9166 7.13375 13.9368 7.16247 13.9515 7.21636C13.9848 7.33784 14.0228 7.74712 13.9473 8.42262C13.874 9.07857 13.698 9.94479 13.341 10.9598C13.0424 11.8088 12.6601 12.5292 12.0684 13.4879C12.0558 13.5052 12.0462 13.5197 12.0418 13.5265L12.0404 13.5285C12.0292 13.5454 12.0242 13.5531 12.018 13.5618C12.0076 13.5764 12.0018 13.582 11.9983 13.585C11.996 13.587 11.9908 13.5912 11.9777 13.5959C11.9638 13.6009 11.9311 13.61 11.8706 13.61H5.56278L5.56373 6.58489C5.87126 6.41901 6.19881 6.20128 6.54112 5.84059C6.93883 5.42152 7.33789 4.8294 7.76254 3.94183C7.84974 3.75957 7.91745 3.55962 7.97574 3.37762C7.99264 3.32486 8.0087 3.27379 8.02438 3.22393L8.02439 3.22389C8.066 3.09158 8.10495 2.96776 8.14985 2.84312C8.2758 2.49352 8.40247 2.28101 8.56162 2.16952ZM10.452 2.60729C10.1323 1.77209 9.70208 1.28277 9.17063 1.12437C8.64564 0.967902 8.20308 1.18891 7.98278 1.34325C7.55169 1.64525 7.33837 2.11908 7.20071 2.5012C7.14817 2.64705 7.10002 2.80016 7.05661 2.93824C7.0422 2.98405 7.02832 3.02821 7.01496 3.0699C6.95791 3.24804 6.90763 3.39115 6.85248 3.50643C6.45683 4.3334 6.1121 4.8271 5.80935 5.14611C5.51322 5.45815 5.23983 5.6219 4.9473 5.76821C4.71095 5.88641 4.55494 6.12906 4.55491 6.40159L4.55388 13.9125C4.55383 14.3026 4.87002 14.6188 5.26008 14.6188H11.8706C12.2097 14.6188 12.4663 14.5113 12.6519 14.3535C12.7387 14.2797 12.7988 14.2043 12.8387 14.1484C12.8556 14.1248 12.8704 14.1025 12.8786 14.09L12.8813 14.0859L12.8826 14.0839L12.8955 14.0685L12.9142 14.0382C13.5304 13.0414 13.9578 12.247 14.2927 11.2945C14.6745 10.209 14.8679 9.26811 14.9499 8.5347C15.0297 7.82084 15.009 7.25845 14.9246 6.95014C14.805 6.51285 14.5104 6.26112 14.2134 6.13284C13.9385 6.01407 13.661 5.99859 13.5028 5.99836L10.4907 5.95631C10.9296 4.15791 10.648 3.11902 10.452 2.60729ZM1.0008 6.46783C0.981809 6.0652 1.30313 5.72836 1.70621 5.72836H2.75264C3.14266 5.72836 3.45883 6.04454 3.45883 6.43456V13.9442C3.45883 14.3342 3.14266 14.6504 2.75264 14.6504H2.06044C1.68335 14.6504 1.37279 14.3541 1.35502 13.9775L1.0008 6.46783Z"></path></svg>
        3
      </div> <div data-v-01ae2ffd="" class="action-reply"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M2.30136 10.1142L2.30019 3.45191C2.30024 2.6778 2.92779 2.05019 3.70191 2.05019H12.3989C13.1731 2.05019 13.8006 2.67785 13.8006 3.452L13.8018 10.1144C13.8017 10.8885 13.1742 11.516 12.4001 11.516H10.1322C9.97329 11.516 9.81862 11.5675 9.69142 11.6629L6.65162 13.9406C6.62173 13.9598 6.58148 13.9444 6.57209 13.91L6.15416 12.0869C6.07758 11.7528 5.78033 11.516 5.43761 11.516H3.70308C2.92893 11.516 2.30136 10.8884 2.30136 10.1142ZM3.70191 1C2.34776 1 1.25 2.09776 1.25 3.45191L1.25117 10.1144C1.25122 11.4685 2.34896 12.5662 3.70308 12.5662H5.18661L5.54953 14.1495L5.55107 14.1558C5.73515 14.9153 6.62879 15.248 7.26458 14.7937L10.2372 12.5662H12.4001C13.7542 12.5662 14.852 11.4684 14.852 10.1142L14.8508 3.45182C14.8508 2.09771 13.753 1 12.3989 1H3.70191ZM4.78612 7.91404C5.35027 7.91404 5.8076 7.45671 5.8076 6.89257C5.8076 6.32842 5.35027 5.87109 4.78612 5.87109C4.22198 5.87109 3.76465 6.32842 3.76465 6.89257C3.76465 7.45671 4.22198 7.91404 4.78612 7.91404ZM8.98631 6.89257C8.98631 7.45671 8.52898 7.91404 7.96483 7.91404C7.40069 7.91404 6.94336 7.45671 6.94336 6.89257C6.94336 6.32842 7.40069 5.87109 7.96483 5.87109C8.52898 5.87109 8.98631 6.32842 8.98631 6.89257ZM11.1484 7.91404C11.7126 7.91404 12.1699 7.45671 12.1699 6.89257C12.1699 6.32842 11.7126 5.87109 11.1484 5.87109C10.5843 5.87109 10.127 6.32842 10.127 6.89257C10.127 7.45671 10.5843 7.91404 11.1484 7.91404Z"></path></svg>
        4
      </div> <div data-v-01ae2ffd="" data-jj-comment-action="6888562346231414798" style="flex: 1 1 0%;"></div> <div data-v-01ae2ffd="" class="more-action"><span data-v-01ae2ffd="" class="more-popover"><div class="byte-popover" x-placement="top-end" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1017; top: 0px; left: 0px; transform: translate3d(703px, 59px, 0px);"><!----><p class="byte-popover__content"><ul data-v-01ae2ffd="" class="more-menu"><!----> <li data-v-01ae2ffd=""><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.21356 7.13688C9.49486 7.13688 10.5336 6.09818 10.5336 4.81688C10.5336 3.53557 9.49486 2.49688 8.21356 2.49688C6.93225 2.49688 5.89356 3.53557 5.89356 4.81688C5.89356 6.09818 6.93225 7.13688 8.21356 7.13688ZM8.21356 8.33688C10.1576 8.33688 11.7336 6.76092 11.7336 4.81688C11.7336 2.87283 10.1576 1.29688 8.21356 1.29688C6.26951 1.29688 4.69355 2.87283 4.69355 4.81688C4.69355 6.76092 6.26951 8.33688 8.21356 8.33688ZM5.91749 10.5125C4.30178 10.5125 2.99199 11.8223 2.99199 13.438C2.99199 13.4706 3.01845 13.4971 3.05108 13.4971H7.53515C7.86652 13.4971 8.13515 13.7657 8.13515 14.0971C8.13515 14.4285 7.86652 14.6971 7.53515 14.6971H3.05108C2.35571 14.6971 1.79199 14.1334 1.79199 13.438C1.79199 11.1595 3.63904 9.3125 5.91749 9.3125H7.53515C7.86652 9.3125 8.13515 9.58113 8.13515 9.9125C8.13515 10.2439 7.86652 10.5125 7.53515 10.5125H5.91749ZM9.78025 10.1265C10.0146 9.8922 10.3945 9.8922 10.6288 10.1265L11.908 11.4057L13.1833 10.1304C13.4176 9.89611 13.7975 9.89611 14.0318 10.1304C14.2661 10.3647 14.2661 10.7446 14.0318 10.979L12.7565 12.2542L14.0229 13.5206C14.2572 13.7549 14.2572 14.1348 14.0229 14.3692C13.7886 14.6035 13.4087 14.6035 13.1744 14.3692L11.908 13.1028L10.6377 14.3731C10.4034 14.6074 10.0235 14.6074 9.78914 14.3731C9.55483 14.1388 9.55483 13.7589 9.78914 13.5245L11.0594 12.2542L9.78025 10.975C9.54594 10.7407 9.54594 10.3608 9.78025 10.1265Z"></path></svg> <div data-v-01ae2ffd="" class="menu-label">
                  屏蔽作者：前端演员麻子
                </div></li> <li data-v-01ae2ffd=""><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-01ae2ffd="" fill-rule="evenodd" clip-rule="evenodd" d="M8.06904 2.67359L13.856 12.6969C13.8684 12.7183 13.8687 12.7297 13.8686 12.7359C13.8684 12.7457 13.8654 12.7606 13.856 12.7769C13.8466 12.7932 13.8352 12.8032 13.8268 12.8083C13.8215 12.8115 13.8114 12.8169 13.7867 12.8169H2.21282C2.18809 12.8169 2.17799 12.8115 2.17273 12.8083C2.16432 12.8032 2.15294 12.7932 2.14354 12.7769C2.13413 12.7606 2.13109 12.7457 2.13092 12.7359C2.13081 12.7297 2.13117 12.7183 2.14354 12.6969L7.93048 2.67359C7.94284 2.65218 7.95258 2.64614 7.95795 2.64316C7.96654 2.6384 7.98095 2.63359 7.99976 2.63359C8.01858 2.63359 8.03299 2.6384 8.04157 2.64316C8.04694 2.64614 8.05668 2.65218 8.06904 2.67359ZM6.89125 2.07359C7.38392 1.22026 8.6156 1.22026 9.10828 2.07359L14.8952 12.0969C15.3879 12.9502 14.7721 14.0169 13.7867 14.0169H2.21282C1.22747 14.0169 0.611633 12.9502 1.10431 12.0969L6.89125 2.07359ZM7.99976 5.29656C8.33113 5.29656 8.59976 5.56519 8.59976 5.89656L8.59976 9.56844C8.59976 9.89981 8.33113 10.1684 7.99976 10.1684C7.66839 10.1684 7.39976 9.89981 7.39976 9.56844V5.89656C7.39976 5.56519 7.66839 5.29656 7.99976 5.29656ZM8.59976 11.2872C8.59976 11.6186 8.33113 11.8872 7.99976 11.8872C7.66839 11.8872 7.39976 11.6186 7.39976 11.2872C7.39976 10.9558 7.66839 10.6872 7.99976 10.6872C8.33113 10.6872 8.59976 10.9558 8.59976 11.2872Z"></path></svg> <div data-v-01ae2ffd="" class="menu-label">举报</div></li></ul></p><!----></div><div data-v-01ae2ffd="" class="more-btn"><svg data-v-01ae2ffd="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-01ae2ffd="" cx="2.33301" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-01ae2ffd="" cx="8" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-01ae2ffd="" cx="13.667" cy="8" r="1.0625" fill="#8A919F"></circle></svg></div></span></div></div> <!----> <div data-v-01ae2ffd="" class="comment-reply-wrapper"><div data-v-48aabfe4="" data-v-01ae2ffd="" class="reply-list default"><div data-v-624473bc="" data-v-48aabfe4="" data-jj-helper-comment-type="reply" data-jj-helper-comment-id="6951004269046710303" data-jj-helper-comment-status="1" data-jj-helper-item-id="6872111128135073806" data-jj-helper-item-type="2" class="reply-card reply-item default" data-cid="6951004269046710303"><div data-v-624473bc="" class="reply-avatar"><div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-624473bc="" href="https://juejin.cn/user/4160207732083245" target="_blank" rel="" class="jj-link" data-v-487cbd49=""><div data-v-03256cc6="" data-v-624473bc="" class="avatar jj-avatar avatar" data-v-65b50b51=""><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/9e1c6e554790ecda6789ce754d2b9bfa~90x90.awebp" alt="风一样的小桥的头像" class="lazy avatar-img" loading="lazy"> <!----></div></a></div></div> <div data-v-624473bc="" class="reply-wrapper"><div data-v-624473bc="" class="reply-content"><div data-v-624473bc="" class="content"><div data-v-624473bc="" class="user-info"><div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-624473bc="" href="https://juejin.cn/user/4160207732083245" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 120px;">
      风一样的小桥
    </span> <!----> <!----> <!----> </a></div> <!----> <!----> <span data-v-624473bc="">:</span></div> <span data-v-624473bc="">没有 TypeScript从入门到实战，讲得好</span></div> <!----> <div data-v-624473bc="" class="reply-img-box"><!----></div></div> <div data-v-624473bc="" class="reply-action"><time data-v-624473bc="" datetime="1618406799000" title="Wed Apr 14 2021 21:26:39 GMT+0800 (香港标准时间)" class="action-time">
        3年前
      </time> <div data-v-624473bc="" class="action-digg"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.56162 2.16952C8.66569 2.09661 8.78195 2.06124 8.88247 2.0912C8.97653 2.11923 9.23851 2.25916 9.50988 2.96799C9.64419 3.31881 9.9356 4.2424 9.42155 6.05431C9.29751 6.49152 9.61394 6.95303 10.0926 6.95971L13.492 7.00716L13.492 7.00721H13.4991C13.6049 7.00721 13.7228 7.01986 13.8134 7.05898C13.8544 7.07671 13.8815 7.09639 13.8999 7.116C13.9166 7.13375 13.9368 7.16247 13.9515 7.21636C13.9848 7.33784 14.0228 7.74712 13.9473 8.42262C13.874 9.07857 13.698 9.94479 13.341 10.9598C13.0424 11.8088 12.6601 12.5292 12.0684 13.4879C12.0558 13.5052 12.0462 13.5197 12.0418 13.5265L12.0404 13.5285C12.0292 13.5454 12.0242 13.5531 12.018 13.5618C12.0076 13.5764 12.0018 13.582 11.9983 13.585C11.996 13.587 11.9908 13.5912 11.9777 13.5959C11.9638 13.6009 11.9311 13.61 11.8706 13.61H5.56278L5.56373 6.58489C5.87126 6.41901 6.19881 6.20128 6.54112 5.84059C6.93883 5.42152 7.33789 4.8294 7.76254 3.94183C7.84974 3.75957 7.91745 3.55962 7.97574 3.37762C7.99264 3.32486 8.0087 3.27379 8.02438 3.22393L8.02439 3.22389C8.066 3.09158 8.10495 2.96776 8.14985 2.84312C8.2758 2.49352 8.40247 2.28101 8.56162 2.16952ZM10.452 2.60729C10.1323 1.77209 9.70208 1.28277 9.17063 1.12437C8.64564 0.967902 8.20308 1.18891 7.98278 1.34325C7.55169 1.64525 7.33837 2.11908 7.20071 2.5012C7.14817 2.64705 7.10002 2.80016 7.05661 2.93824C7.0422 2.98405 7.02832 3.02821 7.01496 3.0699C6.95791 3.24804 6.90763 3.39115 6.85248 3.50643C6.45683 4.3334 6.1121 4.8271 5.80935 5.14611C5.51322 5.45815 5.23983 5.6219 4.9473 5.76821C4.71095 5.88641 4.55494 6.12906 4.55491 6.40159L4.55388 13.9125C4.55383 14.3026 4.87002 14.6188 5.26008 14.6188H11.8706C12.2097 14.6188 12.4663 14.5113 12.6519 14.3535C12.7387 14.2797 12.7988 14.2043 12.8387 14.1484C12.8556 14.1248 12.8704 14.1025 12.8786 14.09L12.8813 14.0859L12.8826 14.0839L12.8955 14.0685L12.9142 14.0382C13.5304 13.0414 13.9578 12.247 14.2927 11.2945C14.6745 10.209 14.8679 9.26811 14.9499 8.5347C15.0297 7.82084 15.009 7.25845 14.9246 6.95014C14.805 6.51285 14.5104 6.26112 14.2134 6.13284C13.9385 6.01407 13.661 5.99859 13.5028 5.99836L10.4907 5.95631C10.9296 4.15791 10.648 3.11902 10.452 2.60729ZM1.0008 6.46783C0.981809 6.0652 1.30313 5.72836 1.70621 5.72836H2.75264C3.14266 5.72836 3.45883 6.04454 3.45883 6.43456V13.9442C3.45883 14.3342 3.14266 14.6504 2.75264 14.6504H2.06044C1.68335 14.6504 1.37279 14.3541 1.35502 13.9775L1.0008 6.46783Z"></path></svg>
        点赞
      </div> <div data-v-624473bc="" class="action-reply"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M2.30136 10.1142L2.30019 3.45191C2.30024 2.6778 2.92779 2.05019 3.70191 2.05019H12.3989C13.1731 2.05019 13.8006 2.67785 13.8006 3.452L13.8018 10.1144C13.8017 10.8885 13.1742 11.516 12.4001 11.516H10.1322C9.97329 11.516 9.81862 11.5675 9.69142 11.6629L6.65162 13.9406C6.62173 13.9598 6.58148 13.9444 6.57209 13.91L6.15416 12.0869C6.07758 11.7528 5.78033 11.516 5.43761 11.516H3.70308C2.92893 11.516 2.30136 10.8884 2.30136 10.1142ZM3.70191 1C2.34776 1 1.25 2.09776 1.25 3.45191L1.25117 10.1144C1.25122 11.4685 2.34896 12.5662 3.70308 12.5662H5.18661L5.54953 14.1495L5.55107 14.1558C5.73515 14.9153 6.62879 15.248 7.26458 14.7937L10.2372 12.5662H12.4001C13.7542 12.5662 14.852 11.4684 14.852 10.1142L14.8508 3.45182C14.8508 2.09771 13.753 1 12.3989 1H3.70191ZM4.78612 7.91404C5.35027 7.91404 5.8076 7.45671 5.8076 6.89257C5.8076 6.32842 5.35027 5.87109 4.78612 5.87109C4.22198 5.87109 3.76465 6.32842 3.76465 6.89257C3.76465 7.45671 4.22198 7.91404 4.78612 7.91404ZM8.98631 6.89257C8.98631 7.45671 8.52898 7.91404 7.96483 7.91404C7.40069 7.91404 6.94336 7.45671 6.94336 6.89257C6.94336 6.32842 7.40069 5.87109 7.96483 5.87109C8.52898 5.87109 8.98631 6.32842 8.98631 6.89257ZM11.1484 7.91404C11.7126 7.91404 12.1699 7.45671 12.1699 6.89257C12.1699 6.32842 11.7126 5.87109 11.1484 5.87109C10.5843 5.87109 10.127 6.32842 10.127 6.89257C10.127 7.45671 10.5843 7.91404 11.1484 7.91404Z"></path></svg>
        回复
      </div> <div data-v-624473bc="" data-jj-comment-action="6951004269046710303" style="flex: 1 1 0%;"></div> <div data-v-624473bc="" class="more-action"><span data-v-624473bc="" class="more-popover"><div class="byte-popover" x-placement="top-end" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1018; top: 0px; left: 0px; transform: translate3d(663px, 29px, 0px);"><!----><p class="byte-popover__content"><ul data-v-624473bc="" class="more-menu"><!----> <li data-v-624473bc=""><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.21356 7.13688C9.49486 7.13688 10.5336 6.09818 10.5336 4.81688C10.5336 3.53557 9.49486 2.49688 8.21356 2.49688C6.93225 2.49688 5.89356 3.53557 5.89356 4.81688C5.89356 6.09818 6.93225 7.13688 8.21356 7.13688ZM8.21356 8.33688C10.1576 8.33688 11.7336 6.76092 11.7336 4.81688C11.7336 2.87283 10.1576 1.29688 8.21356 1.29688C6.26951 1.29688 4.69355 2.87283 4.69355 4.81688C4.69355 6.76092 6.26951 8.33688 8.21356 8.33688ZM5.91749 10.5125C4.30178 10.5125 2.99199 11.8223 2.99199 13.438C2.99199 13.4706 3.01845 13.4971 3.05108 13.4971H7.53515C7.86652 13.4971 8.13515 13.7657 8.13515 14.0971C8.13515 14.4285 7.86652 14.6971 7.53515 14.6971H3.05108C2.35571 14.6971 1.79199 14.1334 1.79199 13.438C1.79199 11.1595 3.63904 9.3125 5.91749 9.3125H7.53515C7.86652 9.3125 8.13515 9.58113 8.13515 9.9125C8.13515 10.2439 7.86652 10.5125 7.53515 10.5125H5.91749ZM9.78025 10.1265C10.0146 9.8922 10.3945 9.8922 10.6288 10.1265L11.908 11.4057L13.1833 10.1304C13.4176 9.89611 13.7975 9.89611 14.0318 10.1304C14.2661 10.3647 14.2661 10.7446 14.0318 10.979L12.7565 12.2542L14.0229 13.5206C14.2572 13.7549 14.2572 14.1348 14.0229 14.3692C13.7886 14.6035 13.4087 14.6035 13.1744 14.3692L11.908 13.1028L10.6377 14.3731C10.4034 14.6074 10.0235 14.6074 9.78914 14.3731C9.55483 14.1388 9.55483 13.7589 9.78914 13.5245L11.0594 12.2542L9.78025 10.975C9.54594 10.7407 9.54594 10.3608 9.78025 10.1265Z"></path></svg> <div data-v-624473bc="" class="menu-label">
                  屏蔽作者：风一样的小桥
                </div></li> <li data-v-624473bc=""><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.06904 2.67359L13.856 12.6969C13.8684 12.7183 13.8687 12.7297 13.8686 12.7359C13.8684 12.7457 13.8654 12.7606 13.856 12.7769C13.8466 12.7932 13.8352 12.8032 13.8268 12.8083C13.8215 12.8115 13.8114 12.8169 13.7867 12.8169H2.21282C2.18809 12.8169 2.17799 12.8115 2.17273 12.8083C2.16432 12.8032 2.15294 12.7932 2.14354 12.7769C2.13413 12.7606 2.13109 12.7457 2.13092 12.7359C2.13081 12.7297 2.13117 12.7183 2.14354 12.6969L7.93048 2.67359C7.94284 2.65218 7.95258 2.64614 7.95795 2.64316C7.96654 2.6384 7.98095 2.63359 7.99976 2.63359C8.01858 2.63359 8.03299 2.6384 8.04157 2.64316C8.04694 2.64614 8.05668 2.65218 8.06904 2.67359ZM6.89125 2.07359C7.38392 1.22026 8.6156 1.22026 9.10828 2.07359L14.8952 12.0969C15.3879 12.9502 14.7721 14.0169 13.7867 14.0169H2.21282C1.22747 14.0169 0.611633 12.9502 1.10431 12.0969L6.89125 2.07359ZM7.99976 5.29656C8.33113 5.29656 8.59976 5.56519 8.59976 5.89656L8.59976 9.56844C8.59976 9.89981 8.33113 10.1684 7.99976 10.1684C7.66839 10.1684 7.39976 9.89981 7.39976 9.56844V5.89656C7.39976 5.56519 7.66839 5.29656 7.99976 5.29656ZM8.59976 11.2872C8.59976 11.6186 8.33113 11.8872 7.99976 11.8872C7.66839 11.8872 7.39976 11.6186 7.39976 11.2872C7.39976 10.9558 7.66839 10.6872 7.99976 10.6872C8.33113 10.6872 8.59976 10.9558 8.59976 11.2872Z"></path></svg> <div data-v-624473bc="" class="menu-label">举报</div></li></ul></p><!----></div><div data-v-624473bc="" class="more-btn"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-624473bc="" cx="2.33301" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-624473bc="" cx="8" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-624473bc="" cx="13.667" cy="8" r="1.0625" fill="#8A919F"></circle></svg></div></span></div></div> <!----></div></div><div data-v-624473bc="" data-v-48aabfe4="" data-jj-helper-comment-type="reply" data-jj-helper-comment-id="6982027901626024734" data-jj-helper-comment-status="1" data-jj-helper-item-id="6872111128135073806" data-jj-helper-item-type="2" class="reply-card reply-item default" data-cid="6982027901626024734"><div data-v-624473bc="" class="reply-avatar"><div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-624473bc="" href="https://juejin.cn/user/852876754166631" target="_blank" rel="" class="jj-link" data-v-487cbd49=""><div data-v-03256cc6="" data-v-624473bc="" class="avatar jj-avatar avatar" data-v-65b50b51=""><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/ff57d88c52aa4322866860625efe087d~tplv-k3u1fbpfcp-jj-mark_88_88_0_0_q75.avis" alt="已注销的头像" class="lazy avatar-img" loading="lazy"> <!----></div></a></div></div> <div data-v-624473bc="" class="reply-wrapper"><div data-v-624473bc="" class="reply-content"><div data-v-624473bc="" class="content"><div data-v-624473bc="" class="user-info"><div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-624473bc="" href="https://juejin.cn/user/852876754166631" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 120px;">
      已注销
    </span> <!----> <!----> <!----> </a></div> <!----> <span data-v-624473bc="">回复</span> <div data-v-487cbd49="" data-v-d7aef884="" data-v-624473bc="" class="popover-box user-popover"><!---->  <a data-v-65b50b51="" data-v-1800aadb="" data-v-624473bc="" href="https://juejin.cn/user/4160207732083245" target="_blank" rel="" class="jj-link username username"><span data-v-1800aadb="" data-v-65b50b51="" class="name" style="max-width: 120px;">
      风一样的小桥
    </span> <!----> <!----> <!----> </a></div> <!----> <span data-v-624473bc="">:</span></div> <span data-v-624473bc="">你说的这个文章在哪里啊</span></div> <!----> <div data-v-624473bc="" class="reply-img-box"><!----></div></div> <div data-v-624473bc="" class="reply-action"><time data-v-624473bc="" datetime="1625630054000" title="Wed Jul 07 2021 11:54:14 GMT+0800 (香港标准时间)" class="action-time">
        3年前
      </time> <div data-v-624473bc="" class="action-digg"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.56162 2.16952C8.66569 2.09661 8.78195 2.06124 8.88247 2.0912C8.97653 2.11923 9.23851 2.25916 9.50988 2.96799C9.64419 3.31881 9.9356 4.2424 9.42155 6.05431C9.29751 6.49152 9.61394 6.95303 10.0926 6.95971L13.492 7.00716L13.492 7.00721H13.4991C13.6049 7.00721 13.7228 7.01986 13.8134 7.05898C13.8544 7.07671 13.8815 7.09639 13.8999 7.116C13.9166 7.13375 13.9368 7.16247 13.9515 7.21636C13.9848 7.33784 14.0228 7.74712 13.9473 8.42262C13.874 9.07857 13.698 9.94479 13.341 10.9598C13.0424 11.8088 12.6601 12.5292 12.0684 13.4879C12.0558 13.5052 12.0462 13.5197 12.0418 13.5265L12.0404 13.5285C12.0292 13.5454 12.0242 13.5531 12.018 13.5618C12.0076 13.5764 12.0018 13.582 11.9983 13.585C11.996 13.587 11.9908 13.5912 11.9777 13.5959C11.9638 13.6009 11.9311 13.61 11.8706 13.61H5.56278L5.56373 6.58489C5.87126 6.41901 6.19881 6.20128 6.54112 5.84059C6.93883 5.42152 7.33789 4.8294 7.76254 3.94183C7.84974 3.75957 7.91745 3.55962 7.97574 3.37762C7.99264 3.32486 8.0087 3.27379 8.02438 3.22393L8.02439 3.22389C8.066 3.09158 8.10495 2.96776 8.14985 2.84312C8.2758 2.49352 8.40247 2.28101 8.56162 2.16952ZM10.452 2.60729C10.1323 1.77209 9.70208 1.28277 9.17063 1.12437C8.64564 0.967902 8.20308 1.18891 7.98278 1.34325C7.55169 1.64525 7.33837 2.11908 7.20071 2.5012C7.14817 2.64705 7.10002 2.80016 7.05661 2.93824C7.0422 2.98405 7.02832 3.02821 7.01496 3.0699C6.95791 3.24804 6.90763 3.39115 6.85248 3.50643C6.45683 4.3334 6.1121 4.8271 5.80935 5.14611C5.51322 5.45815 5.23983 5.6219 4.9473 5.76821C4.71095 5.88641 4.55494 6.12906 4.55491 6.40159L4.55388 13.9125C4.55383 14.3026 4.87002 14.6188 5.26008 14.6188H11.8706C12.2097 14.6188 12.4663 14.5113 12.6519 14.3535C12.7387 14.2797 12.7988 14.2043 12.8387 14.1484C12.8556 14.1248 12.8704 14.1025 12.8786 14.09L12.8813 14.0859L12.8826 14.0839L12.8955 14.0685L12.9142 14.0382C13.5304 13.0414 13.9578 12.247 14.2927 11.2945C14.6745 10.209 14.8679 9.26811 14.9499 8.5347C15.0297 7.82084 15.009 7.25845 14.9246 6.95014C14.805 6.51285 14.5104 6.26112 14.2134 6.13284C13.9385 6.01407 13.661 5.99859 13.5028 5.99836L10.4907 5.95631C10.9296 4.15791 10.648 3.11902 10.452 2.60729ZM1.0008 6.46783C0.981809 6.0652 1.30313 5.72836 1.70621 5.72836H2.75264C3.14266 5.72836 3.45883 6.04454 3.45883 6.43456V13.9442C3.45883 14.3342 3.14266 14.6504 2.75264 14.6504H2.06044C1.68335 14.6504 1.37279 14.3541 1.35502 13.9775L1.0008 6.46783Z"></path></svg>
        点赞
      </div> <div data-v-624473bc="" class="action-reply"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M2.30136 10.1142L2.30019 3.45191C2.30024 2.6778 2.92779 2.05019 3.70191 2.05019H12.3989C13.1731 2.05019 13.8006 2.67785 13.8006 3.452L13.8018 10.1144C13.8017 10.8885 13.1742 11.516 12.4001 11.516H10.1322C9.97329 11.516 9.81862 11.5675 9.69142 11.6629L6.65162 13.9406C6.62173 13.9598 6.58148 13.9444 6.57209 13.91L6.15416 12.0869C6.07758 11.7528 5.78033 11.516 5.43761 11.516H3.70308C2.92893 11.516 2.30136 10.8884 2.30136 10.1142ZM3.70191 1C2.34776 1 1.25 2.09776 1.25 3.45191L1.25117 10.1144C1.25122 11.4685 2.34896 12.5662 3.70308 12.5662H5.18661L5.54953 14.1495L5.55107 14.1558C5.73515 14.9153 6.62879 15.248 7.26458 14.7937L10.2372 12.5662H12.4001C13.7542 12.5662 14.852 11.4684 14.852 10.1142L14.8508 3.45182C14.8508 2.09771 13.753 1 12.3989 1H3.70191ZM4.78612 7.91404C5.35027 7.91404 5.8076 7.45671 5.8076 6.89257C5.8076 6.32842 5.35027 5.87109 4.78612 5.87109C4.22198 5.87109 3.76465 6.32842 3.76465 6.89257C3.76465 7.45671 4.22198 7.91404 4.78612 7.91404ZM8.98631 6.89257C8.98631 7.45671 8.52898 7.91404 7.96483 7.91404C7.40069 7.91404 6.94336 7.45671 6.94336 6.89257C6.94336 6.32842 7.40069 5.87109 7.96483 5.87109C8.52898 5.87109 8.98631 6.32842 8.98631 6.89257ZM11.1484 7.91404C11.7126 7.91404 12.1699 7.45671 12.1699 6.89257C12.1699 6.32842 11.7126 5.87109 11.1484 5.87109C10.5843 5.87109 10.127 6.32842 10.127 6.89257C10.127 7.45671 10.5843 7.91404 11.1484 7.91404Z"></path></svg>
        回复
      </div> <div data-v-624473bc="" data-jj-comment-action="6982027901626024734" style="flex: 1 1 0%;"></div> <div data-v-624473bc="" class="more-action"><span data-v-624473bc="" class="more-popover"><div class="byte-popover" x-placement="top-end" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1019; top: 0px; left: 0px; transform: translate3d(663px, 29px, 0px);"><!----><p class="byte-popover__content"><ul data-v-624473bc="" class="more-menu"><!----> <li data-v-624473bc=""><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.21356 7.13688C9.49486 7.13688 10.5336 6.09818 10.5336 4.81688C10.5336 3.53557 9.49486 2.49688 8.21356 2.49688C6.93225 2.49688 5.89356 3.53557 5.89356 4.81688C5.89356 6.09818 6.93225 7.13688 8.21356 7.13688ZM8.21356 8.33688C10.1576 8.33688 11.7336 6.76092 11.7336 4.81688C11.7336 2.87283 10.1576 1.29688 8.21356 1.29688C6.26951 1.29688 4.69355 2.87283 4.69355 4.81688C4.69355 6.76092 6.26951 8.33688 8.21356 8.33688ZM5.91749 10.5125C4.30178 10.5125 2.99199 11.8223 2.99199 13.438C2.99199 13.4706 3.01845 13.4971 3.05108 13.4971H7.53515C7.86652 13.4971 8.13515 13.7657 8.13515 14.0971C8.13515 14.4285 7.86652 14.6971 7.53515 14.6971H3.05108C2.35571 14.6971 1.79199 14.1334 1.79199 13.438C1.79199 11.1595 3.63904 9.3125 5.91749 9.3125H7.53515C7.86652 9.3125 8.13515 9.58113 8.13515 9.9125C8.13515 10.2439 7.86652 10.5125 7.53515 10.5125H5.91749ZM9.78025 10.1265C10.0146 9.8922 10.3945 9.8922 10.6288 10.1265L11.908 11.4057L13.1833 10.1304C13.4176 9.89611 13.7975 9.89611 14.0318 10.1304C14.2661 10.3647 14.2661 10.7446 14.0318 10.979L12.7565 12.2542L14.0229 13.5206C14.2572 13.7549 14.2572 14.1348 14.0229 14.3692C13.7886 14.6035 13.4087 14.6035 13.1744 14.3692L11.908 13.1028L10.6377 14.3731C10.4034 14.6074 10.0235 14.6074 9.78914 14.3731C9.55483 14.1388 9.55483 13.7589 9.78914 13.5245L11.0594 12.2542L9.78025 10.975C9.54594 10.7407 9.54594 10.3608 9.78025 10.1265Z"></path></svg> <div data-v-624473bc="" class="menu-label">
                  屏蔽作者：已注销
                </div></li> <li data-v-624473bc=""><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="menu-icon"><path data-v-624473bc="" fill-rule="evenodd" clip-rule="evenodd" d="M8.06904 2.67359L13.856 12.6969C13.8684 12.7183 13.8687 12.7297 13.8686 12.7359C13.8684 12.7457 13.8654 12.7606 13.856 12.7769C13.8466 12.7932 13.8352 12.8032 13.8268 12.8083C13.8215 12.8115 13.8114 12.8169 13.7867 12.8169H2.21282C2.18809 12.8169 2.17799 12.8115 2.17273 12.8083C2.16432 12.8032 2.15294 12.7932 2.14354 12.7769C2.13413 12.7606 2.13109 12.7457 2.13092 12.7359C2.13081 12.7297 2.13117 12.7183 2.14354 12.6969L7.93048 2.67359C7.94284 2.65218 7.95258 2.64614 7.95795 2.64316C7.96654 2.6384 7.98095 2.63359 7.99976 2.63359C8.01858 2.63359 8.03299 2.6384 8.04157 2.64316C8.04694 2.64614 8.05668 2.65218 8.06904 2.67359ZM6.89125 2.07359C7.38392 1.22026 8.6156 1.22026 9.10828 2.07359L14.8952 12.0969C15.3879 12.9502 14.7721 14.0169 13.7867 14.0169H2.21282C1.22747 14.0169 0.611633 12.9502 1.10431 12.0969L6.89125 2.07359ZM7.99976 5.29656C8.33113 5.29656 8.59976 5.56519 8.59976 5.89656L8.59976 9.56844C8.59976 9.89981 8.33113 10.1684 7.99976 10.1684C7.66839 10.1684 7.39976 9.89981 7.39976 9.56844V5.89656C7.39976 5.56519 7.66839 5.29656 7.99976 5.29656ZM8.59976 11.2872C8.59976 11.6186 8.33113 11.8872 7.99976 11.8872C7.66839 11.8872 7.39976 11.6186 7.39976 11.2872C7.39976 10.9558 7.66839 10.6872 7.99976 10.6872C8.33113 10.6872 8.59976 10.9558 8.59976 11.2872Z"></path></svg> <div data-v-624473bc="" class="menu-label">举报</div></li></ul></p><!----></div><div data-v-624473bc="" class="more-btn"><svg data-v-624473bc="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-624473bc="" cx="2.33301" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-624473bc="" cx="8" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-624473bc="" cx="13.667" cy="8" r="1.0625" fill="#8A919F"></circle></svg></div></span></div></div> <!----></div></div> <div data-v-48aabfe4="" class="top-has-more default"><span data-v-48aabfe4="">
      查看全部 4 条回复
      <svg data-v-48aabfe4="" width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path data-v-48aabfe4="" fill-rule="evenodd" clip-rule="evenodd" d="M5.99976 7.93206L10.0656 3.86619C10.1633 3.76856 10.3215 3.76856 10.4192 3.86619L10.7727 4.21975C10.8704 4.31738 10.8704 4.47567 10.7727 4.5733L6.35331 8.99272C6.15805 9.18798 5.84147 9.18798 5.6462 8.99272L1.22679 4.5733C1.12916 4.47567 1.12916 4.31738 1.22679 4.21975L1.58034 3.86619C1.67797 3.76856 1.83626 3.76856 1.93389 3.86619L5.99976 7.93206Z"></path></svg></span></div></div></div></div></div></div> <div data-v-3c9d31de="" class="fetch-more-comment"><span data-v-3c9d31de="">
          查看全部 216 条评论
          <svg data-v-3c9d31de="" width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class="" style="position: relative; top: 1px;"><path data-v-3c9d31de="" fill-rule="evenodd" clip-rule="evenodd" d="M5.99976 7.93206L10.0656 3.86619C10.1633 3.76856 10.3215 3.76856 10.4192 3.86619L10.7727 4.21975C10.8704 4.31738 10.8704 4.47567 10.7727 4.5733L6.35331 8.99272C6.15805 9.18798 5.84147 9.18798 5.6462 8.99272L1.22679 4.5733C1.12916 4.47567 1.12916 4.31738 1.22679 4.21975L1.58034 3.86619C1.67797 3.76856 1.83626 3.76856 1.93389 3.86619L5.99976 7.93206Z"></path></svg></span></div></div> <div data-v-34cee571="" data-v-5b99e65b="" class="image-viewer-box"><!----></div> <!----></div> <div data-v-935cc2c6="" data-v-3a7d5dfe="" class="action-box-wrap action-bar hidden" data-v-cd15ceae=""><div data-v-935cc2c6="" class="action-box"><div data-v-935cc2c6="" class="action-left"><div data-v-935cc2c6="" class="action"><div data-v-935cc2c6="" class="action-title-box"><img data-v-935cc2c6="" src="./ts和js的区别_files/c12d6646efb2245fa4e88f0e1a9565b7.svg"> <span data-v-935cc2c6="" class="action-title"><span data-v-935cc2c6="">
                5k+
              </span></span></div></div> <div data-v-935cc2c6="" class="action"><div data-v-935cc2c6="" class="action-title-box"><img data-v-935cc2c6="" src="./ts和js的区别_files/336af4d1fafabcca3b770c8ad7a50781.svg"> <span data-v-935cc2c6="" class="action-title">
                236
              </span></div></div> <div data-v-935cc2c6="" class="action"><div data-v-935cc2c6="" class="action-title-box"><img data-v-935cc2c6="" src="./ts和js的区别_files/3d482c7a948bac826e155953b2a28a9e.svg"> <span data-v-935cc2c6="" class="action-title">
            收藏
          </span></div></div></div> <div data-v-935cc2c6="" class="split"></div> <div data-v-935cc2c6="" class="action-user"><span data-v-935cc2c6="" z-index="100"><div class="byte-tooltip byte-tooltip--dark" x-placement="bottom" x-out-of-boundaries="" style="display: none; position: absolute; max-width: none; will-change: transform; z-index: 1005; top: 0px; left: 0px; transform: translate3d(0px, 1897px, 0px);"><span data-v-935cc2c6="">加个关注，精彩更新不错过~</span> <i data-v-935cc2c6="" class="byte-icon byte-icon--close" style="cursor: pointer; color: var(--juejin-font-3); margin-left: 10px;"><svg t="1561638608887" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="441911" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M512 448l288-288c6.4-6.4 19.2-6.4 32 0l25.6 32c6.4 6.4 6.4 19.2 0 32L569.6 505.6l288 288c6.4 6.4 6.4 19.2 0 32l-32 32c-6.4 6.4-19.2 6.4-32 0L512 569.6l-288 288c-6.4 6.4-19.2 6.4-32 0l-32-32c-6.4-6.4-6.4-19.2 0-32L448 505.6 160 224c-6.4-12.8-6.4-25.6 0-32l32-32c6.4-6.4 19.2-6.4 32 0L512 448z" p-id="441912"></path><path d="M512 448l288-288c6.4-6.4 19.2-6.4 32 0l25.6 32c6.4 6.4 6.4 19.2 0 32L569.6 505.6l288 288c6.4 6.4 6.4 19.2 0 32l-32 32c-6.4 6.4-19.2 6.4-32 0L512 569.6l-288 288c-6.4 6.4-19.2 6.4-32 0l-32-32c-6.4-6.4-6.4-19.2 0-32L448 505.6 160 224c-6.4-12.8-6.4-25.6 0-32l32-32c6.4-6.4 19.2-6.4 32 0L512 448z" p-id="441913"></path></svg></i><div x-arrow="" class="popper__arrow" style="left: 0px;"></div></div><span class="byte-tooltip__wrapper"> <div data-v-03256cc6="" data-v-935cc2c6="" class="avatar jj-avatar action-user-avatar"><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/075d8e781ba84bf64035ac251988fb93~60x60.awebp" alt="avatar" class="lazy avatar-img" loading="lazy"> <div data-v-935cc2c6="" data-v-03256cc6="" class="follow-area"><div data-v-935cc2c6="" data-v-03256cc6="" class="follow-text">
                关注
              </div></div></div></span></span></div> <!----></div></div></div> <div id="sidebar-container" class="sidebar article-sidebar top" data-v-02b802e8="" data-v-3a7d5dfe="" data-v-cd15ceae=""><div class="sidebar-block author-block author-block-container pure" data-v-7e7e812a="" data-v-a6d177e4="" data-v-02b802e8=""><a href="https://juejin.cn/user/764915822103079/posts" target="_blank" rel="" class="jj-link user-item item" data-v-65b50b51="" data-v-a6d177e4="" data-v-7e7e812a=""><div class="avatar jj-avatar avatar" data-v-03256cc6="" data-v-a6d177e4="" data-v-65b50b51=""><img loading="eager" src="./ts和js的区别_files/075d8e781ba84bf64035ac251988fb93~180x180.awebp" alt="avatar" class="lazy avatar-img immediate" data-v-5244ef91="" data-v-03256cc6=""> </div> <div class="info-box" style="visibility: visible;" data-v-65b50b51="" data-v-a6d177e4=""><span to="[object Object]" blank="true" class="username" data-v-1800aadb="" data-v-a6d177e4="" data-v-65b50b51=""><span class="name" style="max-width:128px;" data-v-1800aadb="">
    阿宝哥
  </span> <span to="" blank="true" class="rank" data-v-23743940="" data-v-1800aadb=""><img src="./ts和js的区别_files/9a070131b0b34e729a1c6b0cdcda2dc7~tplv-k3u1fbpfcp-jj_0_0_0_0_q75.avis" alt="创作等级LV.7" title="创作等级LV.7" class="lazy" style="aspect-ratio:NaN;" data-v-5244ef91="" data-v-23743940="" loading="lazy"></span> <!----> <!----> </span> <div title="🏆掘金签约作者 | 公众号@全栈修仙之路" class="position" data-v-65b50b51="" data-v-a6d177e4="">
        🏆掘金签约作者 | 公众号@全栈修仙之路
      </div> <div class="extra-container" data-v-65b50b51="" data-v-a6d177e4=""><!----> <div data-v-a6d177e4="" data-v-65b50b51="" class="achievements"><div data-v-a6d177e4="" data-v-65b50b51="" class="name">优秀作者</div></div><div data-v-a6d177e4="" data-v-65b50b51="" class="achievements"><div data-v-a6d177e4="" data-v-65b50b51="" class="name">签约作者</div></div></div></div></a> <div class="count-container" data-v-7e7e812a="" data-v-a6d177e4=""><a href="https://juejin.cn/user/764915822103079/posts" target="_blank" rel="" class="jj-link stat-item item" data-v-65b50b51="" data-v-a6d177e4="" data-v-7e7e812a=""><div class="count" style="" data-v-65b50b51="" data-v-a6d177e4="">
        99
      </div> <div data-v-65b50b51="" data-v-a6d177e4="">文章</div></a> <a href="https://juejin.cn/user/764915822103079/posts" target="_blank" rel="" class="jj-link stat-item item" data-v-65b50b51="" data-v-a6d177e4="" data-v-7e7e812a=""><div class="count" style="" data-v-65b50b51="" data-v-a6d177e4="">
        2.2m
      </div> <div data-v-65b50b51="" data-v-a6d177e4="">阅读</div></a> <a href="https://juejin.cn/user/764915822103079/followers" target="_blank" rel="" class="jj-link stat-item item" data-v-65b50b51="" data-v-a6d177e4="" data-v-7e7e812a=""><div class="count" style="" data-v-65b50b51="" data-v-a6d177e4="">
        20k
      </div> <div data-v-65b50b51="" data-v-a6d177e4="">粉丝</div></a></div> <div class="operate-btn" style="position:relative;z-index:2;min-height:36px;" data-v-7e7e812a="" data-v-a6d177e4=""><span data-v-a6d177e4="" z-index="100" data-v-7e7e812a=""><div class="byte-tooltip byte-tooltip--dark" x-placement="left" style="display: none; position: absolute; max-width: none; will-change: transform; z-index: 1000; top: 0px; left: 0px; transform: translate3d(-10px, 18px, 0px);"><span data-v-a6d177e4="">加个关注，精彩更新不错过~</span> <i data-v-a6d177e4="" class="byte-icon byte-icon--close" style="cursor: pointer; color: var(--juejin-font-3); margin-left: 10px;"><svg t="1561638608887" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="441911" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M512 448l288-288c6.4-6.4 19.2-6.4 32 0l25.6 32c6.4 6.4 6.4 19.2 0 32L569.6 505.6l288 288c6.4 6.4 6.4 19.2 0 32l-32 32c-6.4 6.4-19.2 6.4-32 0L512 569.6l-288 288c-6.4 6.4-19.2 6.4-32 0l-32-32c-6.4-6.4-6.4-19.2 0-32L448 505.6 160 224c-6.4-12.8-6.4-25.6 0-32l32-32c6.4-6.4 19.2-6.4 32 0L512 448z" p-id="441912"></path><path d="M512 448l288-288c6.4-6.4 19.2-6.4 32 0l25.6 32c6.4 6.4 6.4 19.2 0 32L569.6 505.6l288 288c6.4 6.4 6.4 19.2 0 32l-32 32c-6.4 6.4-19.2 6.4-32 0L512 569.6l-288 288c-6.4 6.4-19.2 6.4-32 0l-32-32c-6.4-6.4-6.4-19.2 0-32L448 505.6 160 224c-6.4-12.8-6.4-25.6 0-32l32-32c6.4-6.4 19.2-6.4 32 0L512 448z" p-id="441913"></path></svg></i><div x-arrow="" class="popper__arrow" style="top: 0px;"></div></div><span class="byte-tooltip__wrapper"> <div data-v-6d89a1e6="" data-v-a6d177e4="" class="animation-follow-btn no-animation" style="width: 122px; height: 36px;"><div data-v-6d89a1e6="" class="follow-ctx show" style="width: 120px;">
    关注
  </div> <div data-v-6d89a1e6="" class="follow-ctx" style="width: 120px;"><i data-v-6d89a1e6="" class="byte-icon byte-icon--check" style="margin-right: 6px;"><svg t="1561631650213" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="229010" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M393.6 679.04l467.2-467.84a21.12 21.12 0 0 1 30.08 0l30.08 30.08a21.12 21.12 0 0 1 0 30.08l-512 512a21.12 21.12 0 0 1-30.08 0L106.88 512a21.12 21.12 0 0 1 0-30.08l30.08-30.08a21.12 21.12 0 0 1 30.08 0z" p-id="229011"></path></svg></i>
    已关注
  </div> <div data-v-6d89a1e6="" class="follow-ctx" style="width: 34px;"><svg data-v-6d89a1e6="" width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-6d89a1e6="" cx="9" cy="4.78906" r="3.375" stroke="#8A919F" stroke-width="0.84375"></circle><path data-v-6d89a1e6="" d="M8.92722 16.3011L3.42093 16.3001C2.92955 16.3 2.53125 15.9016 2.53125 15.4102V15.4102C2.53125 12.7814 4.6623 10.6504 7.29107 10.6504H7.39119H8.92722" stroke="#8A919F" stroke-width="0.84375" stroke-linecap="round"></path><path data-v-6d89a1e6="" fill-rule="evenodd" clip-rule="evenodd" d="M15.1266 11.9352C15.254 12.0547 15.2605 12.2549 15.141 12.3824L11.9769 15.7574C11.9183 15.8199 11.8369 15.856 11.7512 15.8574C11.6655 15.8588 11.5829 15.8253 11.5224 15.7648L9.62392 13.8663C9.50036 13.7427 9.50036 13.5424 9.62392 13.4188C9.74749 13.2953 9.94782 13.2953 10.0714 13.4188L11.7388 15.0862L14.6793 11.9496C14.7988 11.8221 14.9991 11.8157 15.1266 11.9352Z" fill="#8A919F" stroke="#8A919F" stroke-width="0.225" stroke-linecap="round" stroke-linejoin="round"></path></svg></div></div></span></span> <a data-v-314ccdfc="" data-v-a6d177e4="" href="https://juejin.cn/notification/im?participantId=764915822103079" class="im-button im-btn" data-v-7e7e812a=""><!----> <div data-v-314ccdfc="">私信</div></a></div> <!----></div> <div class="sticky-block-box" data-v-02b802e8=""><nav class="article-catalog catalog-block" data-v-6239701c="" data-v-16ed86c3="" data-v-02b802e8=""><div class="catalog-title" data-v-6239701c=""><div data-v-6239701c="">目录</div> <div class="direction" data-v-6239701c=""><div class="word" data-v-6239701c="">收起</div> <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon-rotate" data-v-6239701c=""><g id="&amp;#229;&amp;#177;&amp;#149;&amp;#229;&amp;#188;&amp;#128;" data-v-6239701c=""><path id="&amp;#232;&amp;#183;&amp;#175;&amp;#229;&amp;#190;&amp;#132;" fill-rule="evenodd" clip-rule="evenodd" d="M5.99854 7.93206L10.0644 3.86619C10.162 3.76856 10.3203 3.76856 10.418 3.86619L10.7715 4.21975C10.8691 4.31738 10.8691 4.47567 10.7715 4.5733L6.35209 8.99272C6.15683 9.18798 5.84025 9.18798 5.64498 8.99272L1.22557 4.5733C1.12794 4.47567 1.12794 4.31738 1.22557 4.21975L1.57912 3.86619C1.67675 3.76856 1.83504 3.76856 1.93267 3.86619L5.99854 7.93206Z" fill="#8A919F" data-v-6239701c=""></path></g></svg></div></div> <div class="catalog-body unfold" data-v-6239701c=""><ul class="catalog-list" style="margin-top:0px;" data-v-6239701c=""><li class="item d1 active" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-0" title="一、TypeScript 是什么" class="catalog-aTag d1-aTag-title">
      一、TypeScript 是什么
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-1" title="1.1 TypeScript 与 JavaScript 的区别" class="catalog-aTag d2-aTag-title">
      1.1 TypeScript 与 JavaScript 的区别
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-2" title="1.2 获取 TypeScript" class="catalog-aTag d2-aTag-title">
      1.2 获取 TypeScript
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-3" title="1.安装 TypeScript" class="catalog-aTag d3-aTag-title">
      1.安装 TypeScript
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-4" title="2.验证 TypeScript" class="catalog-aTag d3-aTag-title">
      2.验证 TypeScript
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-5" title="3.编译 TypeScript 文件" class="catalog-aTag d3-aTag-title">
      3.编译 TypeScript 文件
    </a></div> <!----></li></ul></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-6" title="1.3 典型 TypeScript 工作流程" class="catalog-aTag d2-aTag-title">
      1.3 典型 TypeScript 工作流程
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-7" title="1.4 TypeScript 初体验" class="catalog-aTag d2-aTag-title">
      1.4 TypeScript 初体验
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-8" title="二、TypeScript 基础类型" class="catalog-aTag d1-aTag-title">
      二、TypeScript 基础类型
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-9" title="2.1 Boolean 类型" class="catalog-aTag d2-aTag-title">
      2.1 Boolean 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-10" title="2.2 Number 类型" class="catalog-aTag d2-aTag-title">
      2.2 Number 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-11" title="2.3 String 类型" class="catalog-aTag d2-aTag-title">
      2.3 String 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-12" title="2.4 Symbol 类型" class="catalog-aTag d2-aTag-title">
      2.4 Symbol 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-13" title="2.5 Array 类型" class="catalog-aTag d2-aTag-title">
      2.5 Array 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-14" title="2.6 Enum 类型" class="catalog-aTag d2-aTag-title">
      2.6 Enum 类型
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-15" title="1.数字枚举" class="catalog-aTag d3-aTag-title">
      1.数字枚举
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-16" title="2.字符串枚举" class="catalog-aTag d3-aTag-title">
      2.字符串枚举
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-17" title="3.常量枚举" class="catalog-aTag d3-aTag-title">
      3.常量枚举
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-18" title="4.异构枚举" class="catalog-aTag d3-aTag-title">
      4.异构枚举
    </a></div> <!----></li></ul></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-19" title="2.7 Any 类型" class="catalog-aTag d2-aTag-title">
      2.7 Any 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-20" title="2.8 Unknown 类型" class="catalog-aTag d2-aTag-title">
      2.8 Unknown 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-21" title="2.9 Tuple 类型" class="catalog-aTag d2-aTag-title">
      2.9 Tuple 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-22" title="2.10 Void 类型" class="catalog-aTag d2-aTag-title">
      2.10 Void 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-23" title="2.11 Null 和 Undefined 类型" class="catalog-aTag d2-aTag-title">
      2.11 Null 和 Undefined 类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-24" title="2.12 object, Object 和 {} 类型" class="catalog-aTag d2-aTag-title">
      2.12 object, Object 和 {} 类型
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-25" title="1.object 类型" class="catalog-aTag d3-aTag-title">
      1.object 类型
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-26" title="2.Object 类型" class="catalog-aTag d3-aTag-title">
      2.Object 类型
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-27" title="3.{} 类型" class="catalog-aTag d3-aTag-title">
      3.{} 类型
    </a></div> <!----></li></ul></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-28" title="2.13 Never 类型" class="catalog-aTag d2-aTag-title">
      2.13 Never 类型
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-29" title="三、TypeScript 断言" class="catalog-aTag d1-aTag-title">
      三、TypeScript 断言
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-30" title="3.1 类型断言" class="catalog-aTag d2-aTag-title">
      3.1 类型断言
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-31" title="1.“尖括号” 语法" class="catalog-aTag d3-aTag-title">
      1.“尖括号” 语法
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-32" title="2.as 语法" class="catalog-aTag d3-aTag-title">
      2.as 语法
    </a></div> <!----></li></ul></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-33" title="3.2 非空断言" class="catalog-aTag d2-aTag-title">
      3.2 非空断言
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-34" title="1.忽略 undefined 和 null 类型" class="catalog-aTag d3-aTag-title">
      1.忽略 undefined 和 null 类型
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-35" title="2.调用函数时忽略 undefined 类型" class="catalog-aTag d3-aTag-title">
      2.调用函数时忽略 undefined 类型
    </a></div> <!----></li></ul></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-36" title="3.3 确定赋值断言" class="catalog-aTag d2-aTag-title">
      3.3 确定赋值断言
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-37" title="四、类型守卫" class="catalog-aTag d1-aTag-title">
      四、类型守卫
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-38" title="4.1 in 关键字" class="catalog-aTag d2-aTag-title">
      4.1 in 关键字
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-39" title="4.2 typeof 关键字" class="catalog-aTag d2-aTag-title">
      4.2 typeof 关键字
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-40" title="4.3 instanceof 关键字" class="catalog-aTag d2-aTag-title">
      4.3 instanceof 关键字
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-41" title="4.4 自定义类型保护的类型谓词" class="catalog-aTag d2-aTag-title">
      4.4 自定义类型保护的类型谓词
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-42" title="五、联合类型和类型别名" class="catalog-aTag d1-aTag-title">
      五、联合类型和类型别名
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-43" title="5.1 联合类型" class="catalog-aTag d2-aTag-title">
      5.1 联合类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-44" title="5.2 可辨识联合" class="catalog-aTag d2-aTag-title">
      5.2 可辨识联合
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-45" title="1.可辨识" class="catalog-aTag d3-aTag-title">
      1.可辨识
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-46" title="2.联合类型" class="catalog-aTag d3-aTag-title">
      2.联合类型
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-47" title="3.类型守卫" class="catalog-aTag d3-aTag-title">
      3.类型守卫
    </a></div> <!----></li></ul></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-48" title="5.3 类型别名" class="catalog-aTag d2-aTag-title">
      5.3 类型别名
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-49" title="六、交叉类型" class="catalog-aTag d1-aTag-title">
      六、交叉类型
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-50" title="6.1 同名基础类型属性的合并" class="catalog-aTag d2-aTag-title">
      6.1 同名基础类型属性的合并
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-51" title="6.2 同名非基础类型属性的合并" class="catalog-aTag d2-aTag-title">
      6.2 同名非基础类型属性的合并
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-52" title="七、TypeScript 函数" class="catalog-aTag d1-aTag-title">
      七、TypeScript 函数
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-53" title="7.1 TypeScript 函数与 JavaScript 函数的区别" class="catalog-aTag d2-aTag-title">
      7.1 TypeScript 函数与 JavaScript 函数的区别
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-54" title="7.2 箭头函数" class="catalog-aTag d2-aTag-title">
      7.2 箭头函数
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-55" title="1.常见语法" class="catalog-aTag d3-aTag-title">
      1.常见语法
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-56" title="2.使用示例" class="catalog-aTag d3-aTag-title">
      2.使用示例
    </a></div> <!----></li></ul></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-57" title="7.3 参数类型和返回类型" class="catalog-aTag d2-aTag-title">
      7.3 参数类型和返回类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-58" title="7.4 函数类型" class="catalog-aTag d2-aTag-title">
      7.4 函数类型
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-59" title="7.5 可选参数及默认参数" class="catalog-aTag d2-aTag-title">
      7.5 可选参数及默认参数
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-60" title="7.6 剩余参数" class="catalog-aTag d2-aTag-title">
      7.6 剩余参数
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-61" title="7.7 函数重载" class="catalog-aTag d2-aTag-title">
      7.7 函数重载
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-62" title="八、TypeScript 数组" class="catalog-aTag d1-aTag-title">
      八、TypeScript 数组
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-63" title="8.1 数组解构" class="catalog-aTag d2-aTag-title">
      8.1 数组解构
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-64" title="8.2 数组展开运算符" class="catalog-aTag d2-aTag-title">
      8.2 数组展开运算符
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-65" title="8.3 数组遍历" class="catalog-aTag d2-aTag-title">
      8.3 数组遍历
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-66" title="九、TypeScript 对象" class="catalog-aTag d1-aTag-title">
      九、TypeScript 对象
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-67" title="9.1 对象解构" class="catalog-aTag d2-aTag-title">
      9.1 对象解构
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-68" title="9.2 对象展开运算符" class="catalog-aTag d2-aTag-title">
      9.2 对象展开运算符
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-69" title="十、TypeScript 接口" class="catalog-aTag d1-aTag-title">
      十、TypeScript 接口
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-70" title="10.1 对象的形状" class="catalog-aTag d2-aTag-title">
      10.1 对象的形状
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-71" title="10.2 可选 | 只读属性" class="catalog-aTag d2-aTag-title">
      10.2 可选 | 只读属性
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-72" title="10.3 任意属性" class="catalog-aTag d2-aTag-title">
      10.3 任意属性
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-73" title="10.4 接口与类型别名的区别" class="catalog-aTag d2-aTag-title">
      10.4 接口与类型别名的区别
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-74" title="1.Objects/Functions" class="catalog-aTag d3-aTag-title">
      1.Objects/Functions
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-75" title="2.Other Types" class="catalog-aTag d3-aTag-title">
      2.Other Types
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-76" title="3.Extend" class="catalog-aTag d3-aTag-title">
      3.Extend
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-77" title="4.Implements" class="catalog-aTag d3-aTag-title">
      4.Implements
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-78" title="5.Declaration merging" class="catalog-aTag d3-aTag-title">
      5.Declaration merging
    </a></div> <!----></li></ul></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-79" title="十一、TypeScript 类" class="catalog-aTag d1-aTag-title">
      十一、TypeScript 类
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-80" title="11.1 类的属性与方法" class="catalog-aTag d2-aTag-title">
      11.1 类的属性与方法
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-81" title="11.2 ECMAScript 私有字段" class="catalog-aTag d2-aTag-title">
      11.2 ECMAScript 私有字段
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-82" title="11.3 访问器" class="catalog-aTag d2-aTag-title">
      11.3 访问器
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-83" title="11.4 类的继承" class="catalog-aTag d2-aTag-title">
      11.4 类的继承
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-84" title="11.5 抽象类" class="catalog-aTag d2-aTag-title">
      11.5 抽象类
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-85" title="11.6 类方法重载" class="catalog-aTag d2-aTag-title">
      11.6 类方法重载
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-86" title="十二、TypeScript 泛型" class="catalog-aTag d1-aTag-title">
      十二、TypeScript 泛型
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-87" title="12.1 泛型语法" class="catalog-aTag d2-aTag-title">
      12.1 泛型语法
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-88" title="12.2 泛型接口" class="catalog-aTag d2-aTag-title">
      12.2 泛型接口
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-89" title="12.3 泛型类" class="catalog-aTag d2-aTag-title">
      12.3 泛型类
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-90" title="12.4 泛型工具类型" class="catalog-aTag d2-aTag-title">
      12.4 泛型工具类型
    </a></div> <ul class="sub-list"><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-91" title="1.typeof" class="catalog-aTag d3-aTag-title">
      1.typeof
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-92" title="2.keyof" class="catalog-aTag d3-aTag-title">
      2.keyof
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-93" title="3.in" class="catalog-aTag d3-aTag-title">
      3.in
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-94" title="4.infer" class="catalog-aTag d3-aTag-title">
      4.infer
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-95" title="5.extends" class="catalog-aTag d3-aTag-title">
      5.extends
    </a></div> <!----></li><li class="item d3"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-96" title="6.Partial" class="catalog-aTag d3-aTag-title">
      6.Partial
    </a></div> <!----></li></ul></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-97" title="十三、TypeScript 装饰器" class="catalog-aTag d1-aTag-title">
      十三、TypeScript 装饰器
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-98" title="13.1 装饰器是什么" class="catalog-aTag d2-aTag-title">
      13.1 装饰器是什么
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-99" title="13.2 装饰器的分类" class="catalog-aTag d2-aTag-title">
      13.2 装饰器的分类
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-100" title="13.3 类装饰器" class="catalog-aTag d2-aTag-title">
      13.3 类装饰器
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-101" title="13.4 属性装饰器" class="catalog-aTag d2-aTag-title">
      13.4 属性装饰器
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-102" title="13.5 方法装饰器" class="catalog-aTag d2-aTag-title">
      13.5 方法装饰器
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-103" title="13.6 参数装饰器" class="catalog-aTag d2-aTag-title">
      13.6 参数装饰器
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-104" title="十四、TypeScript 4.0 新特性" class="catalog-aTag d1-aTag-title">
      十四、TypeScript 4.0 新特性
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-105" title="14.1 构造函数的类属性推断" class="catalog-aTag d2-aTag-title">
      14.1 构造函数的类属性推断
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-106" title="14.2 标记的元组元素" class="catalog-aTag d2-aTag-title">
      14.2 标记的元组元素
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-107" title="十五、编译上下文" class="catalog-aTag d1-aTag-title">
      十五、编译上下文
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-108" title="15.1 tsconfig.json 的作用" class="catalog-aTag d2-aTag-title">
      15.1 tsconfig.json 的作用
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-109" title="15.2 tsconfig.json 重要字段" class="catalog-aTag d2-aTag-title">
      15.2 tsconfig.json 重要字段
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-110" title="15.3 compilerOptions 选项" class="catalog-aTag d2-aTag-title">
      15.3 compilerOptions 选项
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-111" title="十六、TypeScript 开发辅助工具" class="catalog-aTag d1-aTag-title">
      十六、TypeScript 开发辅助工具
    </a></div> <ul class="sub-list"><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-112" title="16.1 TypeScript Playground" class="catalog-aTag d2-aTag-title">
      16.1 TypeScript Playground
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-113" title="16.2 TypeScript UML Playground" class="catalog-aTag d2-aTag-title">
      16.2 TypeScript UML Playground
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-114" title="16.3 JSON TO TS" class="catalog-aTag d2-aTag-title">
      16.3 JSON TO TS
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-115" title="16.4 Schemats" class="catalog-aTag d2-aTag-title">
      16.4 Schemats
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-116" title="16.5 TypeScript AST Viewer" class="catalog-aTag d2-aTag-title">
      16.5 TypeScript AST Viewer
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-117" title="16.6 TypeDoc" class="catalog-aTag d2-aTag-title">
      16.6 TypeDoc
    </a></div> <!----></li><li class="item d2"><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-118" title="16.7 TypeScript ESLint" class="catalog-aTag d2-aTag-title">
      16.7 TypeScript ESLint
    </a></div> <!----></li></ul></li><li class="item d1" data-v-6239701c=""><div class="a-container"><a href="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E#heading-119" title="十七、参考资源" class="catalog-aTag d1-aTag-title">
      十七、参考资源
    </a></div> <!----></li></ul></div></nav> <!----> <div data-v-7b1f1606="" data-v-02b802e8="" class="jj-search-suggest"><div data-v-7b1f1606="" class="suggest-header"><div data-v-7b1f1606="" class="title">搜索建议</div> <div data-v-7b1f1606="" style="flex: 1 1 0%;"></div> <div data-v-7b1f1606="" class="search-input"><input data-v-7b1f1606="" type="text" placeholder="搜索关键词"> <i data-v-7b1f1606="" class="icon byte-icon byte-icon--search"><svg t="1561632838264" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="303787" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M819.2 718.165333l154.282667 154.282667a23.210667 23.210667 0 0 1 0 32.768l-38.912 38.229333a22.528 22.528 0 0 1-32.085334 0L750.933333 793.258667a386.389333 386.389333 0 1 1 68.266667-75.093334zM500.394667 791.893333a291.498667 291.498667 0 1 0-290.816-291.498666 291.498667 291.498667 0 0 0 290.816 291.498666z" p-id="303788"></path></svg></i></div></div> <div data-v-7b1f1606="" class="suggest-content"><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="TS学习笔记" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/7030322591965380639?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51=""><em>TS学习</em>笔记</div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="ts学习路线" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/7028520595541196814?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51=""><em>ts学习</em>路线</div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="学习TS" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/7267783860480540730?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51=""><em>学习TS</em></div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="深入学习TS" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/7337153453897351179?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51="">深入<em>学习TS</em></div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="从TS类型体操入手，学习TS" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/7265996663406968844?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51="">从<em>TS</em>类型体操入手，<em>学习TS</em></div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="TS学习" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/6844904177949212685?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51=""><em>TS学习</em></div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="TS学习笔记" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/7137588043187224607?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51=""><em>TS学习</em>笔记</div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="个人TS学习笔记" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/6878084657305534471?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51="">个人<em>TS学习</em>笔记</div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="ts学习记录" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/7134884278751461383?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51=""><em>ts学习</em>记录</div></a></div></div></div><div data-v-7b1f1606=""><div data-v-3d01e58e="" data-v-7b1f1606="" class="suggest-item"><div data-v-3d01e58e="" title="TS学习" class="suggest-item-title"><a data-v-65b50b51="" data-v-3d01e58e="" href="https://juejin.cn/post/7153559059021430791?from=search-suggest" target="_blank" rel="" class="jj-link"><div data-v-3d01e58e="" data-v-65b50b51=""><em>TS学习</em></div></a></div></div></div></div></div> <!----> <div data-v-7e7e812a="" data-v-79d288d1="" data-v-02b802e8="" class="sidebar-block shadow hidden"><div data-v-7e7e812a="" class="block-title">精选内容</div> <div data-v-7e7e812a="" class="block-body"><div data-v-79d288d1="" data-v-7e7e812a="" class="entry-list"><a data-v-65b50b51="" data-v-79d288d1="" href="https://juejin.cn/post/7440024392838217762" target="_blank" rel="" class="jj-link item" title="React 18并发模式" data-v-7e7e812a=""><div data-v-79d288d1="" data-v-65b50b51="" class="entry-title">React 18并发模式</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta-box"><div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta author"><div data-v-79d288d1="" data-v-65b50b51="" class="author-name">
            zdhhxxqdjnndnddcyxjg
          </div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div></div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">33阅读</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">0点赞</div></div></a><a data-v-65b50b51="" data-v-79d288d1="" href="https://juejin.cn/post/7440007101215031334" target="_blank" rel="" class="jj-link item" title="TS进阶——类型体操(二)" data-v-7e7e812a=""><div data-v-79d288d1="" data-v-65b50b51="" class="entry-title">TS进阶——类型体操(二)</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta-box"><div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta author"><div data-v-79d288d1="" data-v-65b50b51="" class="author-name">
            最近好乐
          </div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div></div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">80阅读</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">3点赞</div></div></a><a data-v-65b50b51="" data-v-79d288d1="" href="https://juejin.cn/post/7440007101214851110" target="_blank" rel="" class="jj-link item" title="前端常见的布局知识总结" data-v-7e7e812a=""><div data-v-79d288d1="" data-v-65b50b51="" class="entry-title">前端常见的布局知识总结</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta-box"><div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta author"><div data-v-79d288d1="" data-v-65b50b51="" class="author-name">
            边中之城
          </div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div></div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">25阅读</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">0点赞</div></div></a><a data-v-65b50b51="" data-v-79d288d1="" href="https://juejin.cn/post/7440002308518838309" target="_blank" rel="" class="jj-link item" title="macOS 应用公证指南：使用 fastlane 实现自动化公证流程" data-v-7e7e812a=""><div data-v-79d288d1="" data-v-65b50b51="" class="entry-title">macOS 应用公证指南：使用 fastlane 实现自动化公证流程</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta-box"><div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta author"><div data-v-79d288d1="" data-v-65b50b51="" class="author-name">
            今天啥也没干
          </div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div></div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">57阅读</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">1点赞</div></div></a><a data-v-65b50b51="" data-v-79d288d1="" href="https://juejin.cn/post/7439999637481275429" target="_blank" rel="" class="jj-link item" title="使用 Sparkle 实现 macOS 应用自定义更新弹窗" data-v-7e7e812a=""><div data-v-79d288d1="" data-v-65b50b51="" class="entry-title">使用 Sparkle 实现 macOS 应用自定义更新弹窗</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta-box"><div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta author"><div data-v-79d288d1="" data-v-65b50b51="" class="author-name">
            今天啥也没干
          </div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div></div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">55阅读</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">&nbsp;·&nbsp;</div> <div data-v-79d288d1="" data-v-65b50b51="" class="entry-meta">1点赞</div></div></a></div></div></div></div> <div class="adverts-list" data-v-0eca8145="" data-v-02b802e8=""></div> <div data-v-7e7e812a="" data-v-05741537="" data-v-02b802e8="" class="sidebar-block wechat-sidebar-block pure wechat-ad hidden"><div data-v-05741537="" data-v-7e7e812a="" class="ad-container"><div data-v-05741537="" data-v-7e7e812a="" class="text-container"><div data-v-05741537="" data-v-7e7e812a="" class="text-description">找对属于你的技术圈子</div> <div data-v-05741537="" data-v-7e7e812a="" class="text-reply">回复「进群」加入官方微信群</div></div> <img data-v-05741537="" data-v-7e7e812a="" src="./ts和js的区别_files/qr-code.4e391ff.png" loading="lazy" class="qr-code"></div> <div data-v-05741537="" data-v-7e7e812a="" title="关闭" class="close-btn"><i data-v-05741537="" class="byte-icon byte-icon--close-circle-fill" data-v-7e7e812a="" style="width: 16px; height: 16px;"><svg t="1561632242384" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="269408" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M579.84 512l101.76-101.76a47.36 47.36 0 0 0 0-67.84 48 48 0 0 0-67.84 0L512 444.16 410.24 342.4a48 48 0 0 0-67.84 67.84L444.16 512 342.4 613.76a48 48 0 0 0 0 67.84 47.36 47.36 0 0 0 67.84 0L512 579.84l101.76 101.76a48 48 0 1 0 67.84-67.84L579.84 512zM0 512a512 512 0 1 1 512 512 512 512 0 0 1-512-512z" p-id="269409"></path></svg></i></div></div></div> <div data-v-3a7d5dfe="" data-v-cd15ceae="" class="main-area recommended-area entry-list-container shadow"><div data-v-3a7d5dfe="" data-v-cd15ceae="" class="recommended-list-title-wrapper"><div data-v-3a7d5dfe="" data-v-cd15ceae="" class="title"><span data-v-3a7d5dfe="" data-v-cd15ceae="" class="title-content">为你推荐</span></div></div> <div data-v-21339fef="" data-v-435011c0="" data-v-3a7d5dfe="" name="entry-list" tag="div" class="entry-list list recommended-entry-list" data-v-cd15ceae=""><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="6871752423577223176" data-original-type="0" data-draft-id="6871752024048795655" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6871752423577223176" target="_blank" rel="" class="jj-link title" title="细数这些年被困扰过的 TS 问题">细数这些年被困扰过的 TS 问题</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6871752423577223176" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">TypeScript 是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。 TypeScript 提供最新的和不断发展的 JavaScript 特性，包括那些来自 2015 年的 ECM…</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/764915822103079" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                阿宝哥
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            4年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">16k</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              376
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              29
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" class="jj-link footer-tag width-limited" title="前端">
            前端
          </a><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag width-limited" title="TypeScript">
            TypeScript
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/a358c138cef84483ab9b48eec9d1a3bd~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt="细数这些年被困扰过的 TS 问题" class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="6941204708950278180" data-original-type="0" data-draft-id="6941203862996910116" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6941204708950278180" target="_blank" rel="" class="jj-link title" title="万字长文，小白必看-TypeScript 学习笔记">万字长文，小白必看-TypeScript 学习笔记</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6941204708950278180" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">TypeScript 会忽略程序中出现的空格、制表符和换行符。 空格、制表符通常用来缩进代码，使代码易于阅读和理解。 | 任意类型 | any | 声明为 any 的变量可以赋予任意类型的值。 | | 数字类型 | number | 双精度 64 位浮点值。它可以用来表示整数和…</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/1943592287080984" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                jinshw
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            3年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">1.3k</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              8
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              2
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag footer-tag-only" title="TypeScript">
            TypeScript
          </a></div></div></div> <!----></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="7263026715986690085" data-original-type="0" data-draft-id="7263009476059578424" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7263026715986690085" target="_blank" rel="" class="jj-link title" title="深入浅出TypeScript | 青训营">深入浅出TypeScript | 青训营</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7263026715986690085" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">深入浅出TypeScript TypeScript是一种由微软开发的开源、跨平台的编程语言。它是JavaScript的超集，最终会被编译为JavaScript代码。 为什么要学习TypeScript </div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/189558564334110" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                我是前端废物耶
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            1年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">643</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              1
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              评论
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E9%9D%92%E8%AE%AD%E8%90%A5%E7%AC%94%E8%AE%B0" target="_blank" rel="" class="jj-link footer-tag footer-tag-only" title="青训营笔记">
            青训营笔记
          </a></div></div></div> <!----></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="6985558559463309319" data-original-type="0" data-draft-id="6985534256483139591" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6985558559463309319" target="_blank" rel="" class="jj-link title" title="typecript 入门笔记（1）">typecript 入门笔记（1）</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6985558559463309319" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">TypeScript 是 JavaScript 的一个超集。 在完整保留 JavaScript 运行时行为的基础上，通过引入静态类型系统来提高代码的可维护性，减少可能出现的 bug。</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/2991116481466142" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                keepMoving
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            3年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">429</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              1
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              评论
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag footer-tag-only width-limited" title="TypeScript">
            TypeScript
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/45e60912de154a09955a3ef3ef705447~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt="typecript 入门笔记（1）" class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="7388305846350463030" data-original-type="0" data-draft-id="7388305846350413878" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7388305846350463030" target="_blank" rel="" class="jj-link title" title="【TS】TypeScript 入门指南：强大的JavaScript超集">【TS】TypeScript 入门指南：强大的JavaScript超集</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7388305846350463030" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">TypeScript 入门指南：强大的JavaScript超集 在现代Web开发领域，JavaScript作为浏览器的原生语言，其重要性不言而喻。然而，随着项目规模的扩大，JavaScript的动态类</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/233547309260286" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                鑫宝Code
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            4月前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">179</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              2
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              评论
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" class="jj-link footer-tag width-limited" title="前端">
            前端
          </a><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag width-limited" title="TypeScript">
            TypeScript
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/f94ff1e4f24e4d1ba95973e18ce17c06~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt="【TS】TypeScript 入门指南：强大的JavaScript超集" class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="7281535380590936075" data-original-type="0" data-draft-id="7281491804738289718" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7281535380590936075" target="_blank" rel="" class="jj-link title" title="Typescript：深入浅出的终极指南——编程新时代的神秘武器！">Typescript：深入浅出的终极指南——编程新时代的神秘武器！</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7281535380590936075" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">Typescript：深入浅出的终极指南——编程新时代的神秘武器！ TypeScript 是 JavaScript 的一个超集，支持 ECMAScript 6 标准（ES6 教程）。 TypeScri</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/2535907401401373" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                尘缘_
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            1年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">1.3k</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              4
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              评论
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" class="jj-link footer-tag width-limited" title="前端">
            前端
          </a><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/JavaScript" target="_blank" rel="" class="jj-link footer-tag width-limited" title="JavaScript">
            JavaScript
          </a><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag width-limited" title="TypeScript">
            TypeScript
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/cca11d96811c466a8ac716a920d05866~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt="Typescript：深入浅出的终极指南——编程新时代的神秘武器！" class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="6998461974174498829" data-original-type="0" data-draft-id="6998376537414172708" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6998461974174498829" target="_blank" rel="" class="jj-link title" title="【青训营】- TypeScript初识（开发环境|基础知识）">【青训营】- TypeScript初识（开发环境|基础知识）</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6998461974174498829" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">初识TypeScript，了解到它的一些特性和优点，让我觉得TS算得上一门“智能化”语言，在上课学习时，看到最多的就是TS会识别判定变量类型，这样我们在JS开发过程中遇到一些问题得以高效率解决</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/2243423243612216" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                算法不过是小case啦
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            3年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">585</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              1
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              评论
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E7%AC%94%E8%AE%B0" target="_blank" rel="" class="jj-link footer-tag footer-tag-only" title="笔记">
            笔记
          </a></div></div></div> <!----></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="6997778153963945997" data-original-type="0" data-draft-id="6997699579055439879" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6997778153963945997" target="_blank" rel="" class="jj-link title" title="【青训营】- TypeScript入门笔记">【青训营】- TypeScript入门笔记</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6997778153963945997" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">什么是TypeScript?为什么要用TypeScript？TypeScript基础知识.数据类型.</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/3518092503432734" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                亦雨
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            3年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">289</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              点赞
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              评论
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E7%AC%94%E8%AE%B0" target="_blank" rel="" class="jj-link footer-tag footer-tag-only width-limited" title="笔记">
            笔记
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/e49e73ac4a654f86a73c9c9c288baa18~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt="【青训营】- TypeScript入门笔记" class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="7035920794479935519" data-original-type="0" data-draft-id="7028872095849250852" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7035920794479935519" target="_blank" rel="" class="jj-link title" title="一个菜鸟入门TypeScript的学习总结。">一个菜鸟入门TypeScript的学习总结。</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7035920794479935519" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">本文是我在学习TypeScript过程中的一些总结。作为一个TS初学者，我将学习的内容进行口语化总结和输出，并且根据文档和视频的案例进行了一系列展示，除了加深自己的印象，也希望能够帮助小伙伴快速学习。</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/3879498733330494" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                1024_Byte
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            2年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">1.2k</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              22
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              4
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag footer-tag-only" title="TypeScript">
            TypeScript
          </a></div></div></div> <!----></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="7108934100513193998" data-original-type="0" data-draft-id="7106819028525514765" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7108934100513193998" target="_blank" rel="" class="jj-link title" title="TypeScript基础内容(一): 数据类型">TypeScript基础内容(一): 数据类型</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7108934100513193998" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">前言 重点！重点！重点！这篇文章并不适用于TypeScript熟手,大概只有像我一样的基本没有了解过的人才更适合吧...当然如果大家有什么意见或者文章有什么不对的地方，希望大家指正 在我短暂的前端开发</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/923245497293022" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                Alliances
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            2年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">964</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              1
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              评论
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag footer-tag-only" title="TypeScript">
            TypeScript
          </a></div></div></div> <!----></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="6882252156133441550" data-original-type="0" data-draft-id="6882250455653548046" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6882252156133441550" target="_blank" rel="" class="jj-link title" title=" TypeScript - Basic - Part I"> TypeScript - Basic - Part I</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6882252156133441550" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">The main benefit of TypeScript is that it can highlight unexpected behavior in your code, lowering the chance of bugs. While the size, scop…</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/2400989126862487" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                YlonelY
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            4年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">356</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              3
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              2
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag footer-tag-only width-limited" title="TypeScript">
            TypeScript
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/afa44595e4974f0786e3c7fec48dce1d~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt=" TypeScript - Basic - Part I" class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="6990108681777971231" data-original-type="0" data-draft-id="6989729191293878285" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6990108681777971231" target="_blank" rel="" class="jj-link title" title="TypeScript的30个小问答">TypeScript的30个小问答</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6990108681777971231" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">1、 TypeScript 的主要特点是什么？ 跨平台：TypeScript 编译器可以安装在任何操作系统上，包括 Windows、macOS 和 Linux。 ES6 特性：TypeScript 包</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/4001878056632791" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                何小玍
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            3年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">594</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              18
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              2
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" class="jj-link footer-tag width-limited" title="前端">
            前端
          </a><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/JavaScript" target="_blank" rel="" class="jj-link footer-tag width-limited" title="JavaScript">
            JavaScript
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/8998001dd4f748c780fe171aa40344cd~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt="TypeScript的30个小问答" class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="6993253744905289741" data-original-type="0" data-draft-id="6993253141789540359" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6993253744905289741" target="_blank" rel="" class="jj-link title" title="TypeScript总结">TypeScript总结</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/6993253744905289741" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">一、初识 TypeScript TypeScript 是 JavaScript 的一个超集，主要提供了类型系统和对 ES6 的支持，它由 Microsoft 开发，代码开源于 GitHub 上。</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/211549569157160" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                身份的转换
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            3年前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">148</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              1
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              评论
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag footer-tag-only width-limited" title="TypeScript">
            TypeScript
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/011b8d6ffad0464e9997e85aee3fa0e4~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt="TypeScript总结" class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="7359083412387315722" data-original-type="0" data-draft-id="7359082665217851401" class="entry"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7359083412387315722" target="_blank" rel="" class="jj-link title" title="探秘TypeScript：基本概念至实际应用一网打尽">探秘TypeScript：基本概念至实际应用一网打尽</a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7359083412387315722" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">TypeScript是JavaScript的超集，为那些希望加强代码质量和工具的Web开发人员带来了新的希望。这篇文章的目的就是带你领略TypeScript的魅力，从基本概念到实际应用，一网打尽。</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/1433418895198622" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                37手游前端组
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            7月前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">366</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              10
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              5
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" class="jj-link footer-tag" title="前端">
            前端
          </a><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/TypeScript" target="_blank" rel="" class="jj-link footer-tag" title="TypeScript">
            TypeScript
          </a></div></div></div> <!----></div> <!----></div>  <!----></li><li data-v-435011c0="" data-growing-container="true" data-growing-title="entryList" class="item"><div data-v-5d81f31c="" data-v-435011c0="" data-entry-id="7314474878475976740" data-original-type="0" data-draft-id="7314320763078639628" class="entry entry-last-one"><div data-v-5d81f31c="" class="content-wrapper"><div data-v-5d81f31c="" class="content-main"><div data-v-5d81f31c="" class="title-row"> <!----> <!----> <!----> <a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7314474878475976740" target="_blank" rel="" class="jj-link title" title="【2023秋第8节课】解析 TypeScript ">【2023秋第8节课】解析 TypeScript </a></div> <div data-v-5d81f31c="" class="abstract"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/post/7314474878475976740" target="_blank" rel="" class="jj-link"><div data-v-5d81f31c="" data-v-65b50b51="">TypeScript TS简介 是JavaScript的超集，浏览器不能直接识别，需要编译器转换成纯JS语言 强类型 静态 编程语言，更加方便地进行类型检查和代码重构，提高代码的可靠性和可维护性 TS</div></a></div> <div data-v-5d81f31c="" class="entry-footer"><ul data-v-5d81f31c="" class="action-list jh-timeline-action-area"><li data-v-5d81f31c="" class="item meta-container"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/user/4075207411898764" target="_blank" rel="" class="jj-link user-message"><div data-v-487cbd49="" data-v-d7aef884="" data-v-5d81f31c="" class="popover-box user-popover" data-v-65b50b51=""><!---->  
                LanShanFE
              </div></a> <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item date">
            11月前
            <div data-v-5d81f31c="" class="footer-divider"></div></li> <li data-v-5d81f31c="" class="item view"><svg data-v-5d81f31c="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class="view-icon"><path data-v-5d81f31c="" d="M7.90078 2.80078C4.49278 2.80078 1.74745 6.11672 0.800781 7.77469C1.74745 9.58339 4.49278 13.2008 7.90078 13.2008C11.3088 13.2008 14.0541 9.58339 15.0008 7.77469C14.0541 6.11672 11.3088 2.80078 7.90078 2.80078Z" stroke="currentColor"></path><circle data-v-5d81f31c="" cx="7.89922" cy="8.00078" r="2.2" stroke="currentColor"></circle></svg> <span data-v-5d81f31c="">372</span></li> <li data-v-5d81f31c="" class="item like"><div data-v-5d81f31c="" class="liked-wrap"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="liked-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M7.56162 1.16952C7.66569 1.09661 7.78195 1.06124 7.88247 1.0912C7.97653 1.11923 8.23851 1.25916 8.50988 1.96799C8.64419 2.31881 8.9356 3.2424 8.42155 5.05431C8.29751 5.49152 8.61394 5.95303 9.09259 5.95971L12.492 6.00716L12.492 6.00721H12.4991C12.6049 6.00721 12.7228 6.01986 12.8134 6.05898C12.8544 6.07671 12.8815 6.09639 12.8999 6.116C12.9166 6.13375 12.9368 6.16247 12.9515 6.21636C12.9848 6.33784 13.0228 6.74712 12.9473 7.42262C12.874 8.07857 12.698 8.94479 12.341 9.9598C12.0424 10.8088 11.6601 11.5292 11.0684 12.4879C11.0558 12.5052 11.0462 12.5197 11.0418 12.5265L11.0404 12.5285C11.0292 12.5454 11.0242 12.5531 11.018 12.5618C11.0076 12.5764 11.0018 12.582 10.9983 12.585C10.996 12.587 10.9908 12.5912 10.9777 12.5959C10.9638 12.6009 10.9311 12.61 10.8706 12.61H4.56278L4.56373 5.58489C4.87126 5.41901 5.19881 5.20128 5.54112 4.84059C5.93883 4.42152 6.33789 3.8294 6.76254 2.94183C6.84974 2.75957 6.91745 2.55962 6.97574 2.37762C6.99264 2.32486 7.0087 2.27379 7.02438 2.22393L7.02439 2.22389C7.066 2.09158 7.10495 1.96776 7.14985 1.84312C7.2758 1.49352 7.40247 1.28101 7.56162 1.16952ZM9.45205 1.60729C9.13229 0.772086 8.70208 0.282772 8.17063 0.124374C7.64564 -0.0320981 7.20308 0.188912 6.98278 0.343248C6.55169 0.64525 6.33837 1.11908 6.20071 1.5012C6.14817 1.64705 6.10002 1.80016 6.05661 1.93824C6.0422 1.98405 6.02832 2.02821 6.01496 2.0699C5.95791 2.24804 5.90763 2.39115 5.85248 2.50643C5.45683 3.3334 5.1121 3.8271 4.80935 4.14611C4.51322 4.45815 4.23983 4.6219 3.9473 4.76821C3.71095 4.88641 3.55494 5.12906 3.55491 5.40159L3.55388 12.9125C3.55383 13.3026 3.87002 13.6188 4.26008 13.6188H10.8706C11.2097 13.6188 11.4663 13.5113 11.6519 13.3535C11.7387 13.2797 11.7988 13.2043 11.8387 13.1484C11.8556 13.1248 11.8704 13.1025 11.8786 13.09L11.8813 13.0859L11.8826 13.0839L11.8955 13.0685L11.9142 13.0382C12.5304 12.0414 12.9578 11.247 13.2927 10.2945C13.6745 9.20895 13.8679 8.26811 13.9499 7.5347C14.0297 6.82084 14.009 6.25845 13.9246 5.95014C13.805 5.51285 13.5104 5.26112 13.2134 5.13284C12.9385 5.01407 12.661 4.99859 12.5028 4.99836L9.49071 4.95631C9.92962 3.15791 9.64796 2.11902 9.45205 1.60729ZM0.000800636 5.46783C-0.0181914 5.0652 0.303128 4.72836 0.706212 4.72836H1.75264C2.14266 4.72836 2.45883 5.04454 2.45883 5.43456V12.9442C2.45883 13.3342 2.14266 13.6504 1.75264 13.6504H1.06044C0.68335 13.6504 0.372791 13.3541 0.355024 12.9775L0.000800636 5.46783Z" fill="currentColor"></path></svg></div> <span data-v-5d81f31c="">
              4
            </span></li> <li data-v-5d81f31c="" class="item comment"><svg data-v-5d81f31c="" width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg" class="comment-icon"><path data-v-5d81f31c="" fill-rule="evenodd" clip-rule="evenodd" d="M1.30136 9.11421L1.30019 2.45191C1.30024 1.6778 1.92779 1.05019 2.70191 1.05019H11.3989C12.1731 1.05019 12.8006 1.67785 12.8006 2.452L12.8018 9.1144C12.8017 9.8885 12.1742 10.516 11.4001 10.516H9.13225C8.97329 10.516 8.81862 10.5675 8.69142 10.6629L5.65162 12.9406C5.62173 12.9598 5.58148 12.9444 5.57209 12.91L5.15416 11.0869C5.07758 10.7528 4.78033 10.516 4.43761 10.516H2.70308C1.92893 10.516 1.30136 9.88836 1.30136 9.11421ZM2.70191 0C1.34776 0 0.25 1.09776 0.25 2.45191L0.25117 9.1144C0.25122 10.4685 1.34896 11.5662 2.70308 11.5662H4.18661L4.54953 13.1495L4.55107 13.1558C4.73515 13.9153 5.62879 14.248 6.26458 13.7937L9.23719 11.5662H11.4001C12.7542 11.5662 13.852 10.4684 13.852 9.11421L13.8508 2.45182C13.8508 1.09771 12.753 0 11.3989 0H2.70191ZM3.78612 6.91404C4.35027 6.91404 4.8076 6.45671 4.8076 5.89257C4.8076 5.32842 4.35027 4.87109 3.78612 4.87109C3.22198 4.87109 2.76465 5.32842 2.76465 5.89257C2.76465 6.45671 3.22198 6.91404 3.78612 6.91404ZM7.98631 5.89257C7.98631 6.45671 7.52898 6.91404 6.96483 6.91404C6.40069 6.91404 5.94336 6.45671 5.94336 5.89257C5.94336 5.32842 6.40069 4.87109 6.96483 4.87109C7.52898 4.87109 7.98631 5.32842 7.98631 5.89257ZM10.1484 6.91404C10.7126 6.91404 11.1699 6.45671 11.1699 5.89257C11.1699 5.32842 10.7126 4.87109 10.1484 4.87109C9.58428 4.87109 9.12695 5.32842 9.12695 5.89257C9.12695 6.45671 9.58428 6.91404 10.1484 6.91404Z" fill="currentColor"></path></svg> <span data-v-5d81f31c="">
              1
            </span></li> <li data-v-5d81f31c="" class="item dislike-item"><!----></li> <!----></ul> <div data-v-5d81f31c="" class="entry-footer-tags"><a data-v-65b50b51="" data-v-5d81f31c="" href="https://juejin.cn/tag/%E5%89%8D%E7%AB%AF" target="_blank" rel="" class="jj-link footer-tag footer-tag-only width-limited" title="前端">
            前端
          </a></div></div></div> <img data-v-5244ef91="" data-v-5d81f31c="" src="./ts和js的区别_files/a28bc241a1774b3d90631d333aa7e806~tplv-k3u1fbpfcp-jj_189_126_0_0_q75.avis" alt="【2023秋第8节课】解析 TypeScript " class="lazy thumb" loading="lazy" style=""></div> <!----></div>  <!----></li></div></div> <!----> <div data-v-67be6428="" class="article-suspended-panel dynamic-data-ready"><svg data-v-67be6428="" xmlns="http://www.w3.org/2000/svg" class="" style="display: none;"><symbol data-v-67be6428="" id="icon-collect" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M5.24287 18.3845C4.89724 18.5507 4.48229 18.4053 4.31605 18.0596C4.26029 17.9437 4.23783 17.8146 4.25117 17.6866L4.75725 12.8332C4.77762 12.6379 4.71431 12.443 4.583 12.297L1.29207 8.63594C1.03567 8.35071 1.05905 7.91164 1.34428 7.65524C1.43464 7.574 1.54475 7.5179 1.66358 7.49254L6.47789 6.46509C6.66998 6.42409 6.83572 6.30367 6.93407 6.13365L9.39894 1.87248C9.59098 1.54049 10.0158 1.42704 10.3478 1.61907C10.453 1.67992 10.5403 1.76729 10.6012 1.87248L13.0661 6.13365C13.1644 6.30367 13.3301 6.42409 13.5222 6.46509L18.3365 7.49254C18.7116 7.57259 18.9508 7.94155 18.8707 8.31664C18.8454 8.43547 18.7893 8.54557 18.708 8.63594L15.4171 12.297C15.2858 12.443 15.2225 12.6379 15.2429 12.8332L15.7489 17.6866C15.7887 18.0681 15.5117 18.4096 15.1303 18.4493C15.0023 18.4627 14.8732 18.4402 14.7572 18.3845L10.3011 16.2412C10.1108 16.1497 9.8893 16.1497 9.69906 16.2412L5.24287 18.3845Z"></path></symbol><symbol data-v-67be6428="" id="icon-comment" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M4.62739 1.25C2.9347 1.25 1.5625 2.6222 1.5625 4.31489L1.56396 12.643C1.56403 14.3356 2.9362 15.7078 4.62885 15.7078H6.48326L6.93691 17.6869L6.93884 17.6948C7.16894 18.6441 8.28598 19.0599 9.08073 18.4921L12.7965 15.7078H15.5001C17.1928 15.7078 18.565 14.3355 18.565 12.6428L18.5635 4.31477C18.5635 2.62213 17.1913 1.25 15.4986 1.25H4.62739ZM5.98265 9.89255C6.68783 9.89255 7.2595 9.32089 7.2595 8.61571C7.2595 7.91053 6.68783 7.33887 5.98265 7.33887C5.27747 7.33887 4.70581 7.91053 4.70581 8.61571C4.70581 9.32089 5.27747 9.89255 5.98265 9.89255ZM9.95604 9.89255C10.6612 9.89255 11.2329 9.32089 11.2329 8.61571C11.2329 7.91053 10.6612 7.33887 9.95604 7.33887C9.25086 7.33887 8.6792 7.91053 8.6792 8.61571C8.6792 9.32089 9.25086 9.89255 9.95604 9.89255ZM15.2124 8.61571C15.2124 9.32089 14.6407 9.89255 13.9355 9.89255C13.2304 9.89255 12.6587 9.32089 12.6587 8.61571C12.6587 7.91053 13.2304 7.33887 13.9355 7.33887C14.6407 7.33887 15.2124 7.91053 15.2124 8.61571Z"></path></symbol><symbol data-v-67be6428="" id="icon-zan" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M13.0651 3.25923C12.6654 2.21523 12.1276 1.60359 11.4633 1.40559C10.8071 1.21 10.2539 1.48626 9.97848 1.67918C9.43962 2.05668 9.17297 2.64897 9.0009 3.12662C8.93522 3.30893 8.87504 3.50032 8.82077 3.67291L8.82077 3.67292C8.80276 3.73019 8.78541 3.78539 8.76872 3.8375C8.6974 4.06017 8.63455 4.23905 8.56561 4.38315C8.07104 5.41687 7.64014 6.034 7.2617 6.43277C6.89154 6.8228 6.5498 7.0275 6.18413 7.21038C5.8887 7.35813 5.69369 7.66144 5.69365 8.00211L5.69237 17.3908C5.6923 17.8783 6.08754 18.2736 6.57511 18.2736H14.8382C15.2621 18.2736 15.5829 18.1393 15.8149 17.9421C15.9234 17.8497 15.9985 17.7554 16.0484 17.6856C16.0695 17.6561 16.088 17.6282 16.0983 17.6126L16.1017 17.6075L16.1033 17.6051L16.1194 17.5857L16.1428 17.5478C16.913 16.3019 17.4472 15.3088 17.8659 14.1183C18.3431 12.7613 18.5849 11.5853 18.6874 10.6685C18.7871 9.77617 18.7612 9.07318 18.6558 8.68779C18.5062 8.14118 18.138 7.82653 17.7668 7.66617C17.4231 7.51771 17.0763 7.49836 16.8785 7.49807L13.1134 7.44551C13.662 5.19751 13.31 3.89889 13.0651 3.25923ZM1.251 8.0848C1.22726 7.5815 1.62891 7.16046 2.13277 7.16046H3.4408C3.92832 7.16046 4.32354 7.55568 4.32354 8.04321V17.4303C4.32354 17.9178 3.92832 18.313 3.4408 18.313H2.57554C2.10419 18.313 1.71599 17.9427 1.69378 17.4718L1.251 8.0848Z"></path></symbol><symbol data-v-67be6428="" id="icon-share" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M10.4167 6.40399C5.35406 6.40399 1.25 10.5675 1.25 15.7035C1.25 16.0225 1.28448 16.4512 1.35344 16.9898C1.36807 17.1039 1.47243 17.1846 1.58655 17.17C1.6483 17.1621 1.70328 17.127 1.73643 17.0743L1.86865 16.8676C1.99553 16.6731 2.10644 16.5147 2.20137 16.3925C3.69554 14.4692 6.13777 13.3823 9.35515 13.3378L10.4167 13.3364V17.0757C10.4167 17.3101 10.6086 17.5 10.8453 17.5C10.959 17.5 11.068 17.4553 11.1483 17.3757L18.145 10.45C18.3961 10.2015 18.3961 9.79853 18.145 9.55L11.1483 2.62426C10.981 2.45858 10.7096 2.45858 10.5422 2.62426C10.4618 2.70383 10.4167 2.81174 10.4167 2.92426V6.40399Z"></path></symbol><symbol data-v-67be6428="" id="icon-report" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M10.8389 1.89381C11.0873 2.03868 11.2939 2.24532 11.4388 2.49366L18.9369 15.0065C19.4007 15.8015 19.1322 16.8221 18.3371 17.2859C18.0822 17.4346 17.7924 17.5129 17.4973 17.5129H2.50041C1.57993 17.5129 0.83374 16.7667 0.83374 15.8462C0.83374 15.5512 0.912088 15.2614 1.06078 15.0065L8.5595 2.49366C9.0233 1.69857 10.0438 1.43001 10.8389 1.89381ZM10.3118 13.3459C10.6283 13.3459 10.8848 13.6025 10.8848 13.9189V14.4918C10.8848 14.8082 10.6283 15.0647 10.3118 15.0647H9.73893C9.42252 15.0647 9.16602 14.8082 9.16602 14.4918V13.9189C9.16602 13.6025 9.42252 13.3459 9.73893 13.3459H10.3118ZM10.8356 7.09513C10.8356 6.86502 10.6491 6.67847 10.419 6.67847H9.58512C9.35501 6.67847 9.16846 6.86502 9.16846 7.09513V12.0956C9.16846 12.3257 9.35501 12.5123 9.58512 12.5123H10.419C10.6491 12.5123 10.8356 12.3257 10.8356 12.0956V7.09513Z"></path></symbol><symbol data-v-67be6428="" id="icon-immerse" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M0.25 1C0.25 0.585786 0.585786 0.25 1 0.25H4C4.41421 0.25 4.75 0.585786 4.75 1C4.75 1.41421 4.41421 1.75 4 1.75H1.75V4C1.75 4.41421 1.41421 4.75 1 4.75C0.585786 4.75 0.25 4.41421 0.25 4V1ZM0.25 19C0.25 19.4142 0.585786 19.75 1 19.75H4C4.41421 19.75 4.75 19.4142 4.75 19C4.75 18.5858 4.41421 18.25 4 18.25H1.75V16C1.75 15.5858 1.41421 15.25 1 15.25C0.585786 15.25 0.25 15.5858 0.25 16V19ZM19 0.25C19.4142 0.25 19.75 0.585786 19.75 1V4C19.75 4.41421 19.4142 4.75 19 4.75C18.5858 4.75 18.25 4.41421 18.25 4V1.75H16C15.5858 1.75 15.25 1.41421 15.25 1C15.25 0.585786 15.5858 0.25 16 0.25H19ZM19.75 19C19.75 19.4142 19.4142 19.75 19 19.75H16C15.5858 19.75 15.25 19.4142 15.25 19C15.25 18.5858 15.5858 18.25 16 18.25H18.25V16C18.25 15.5858 18.5858 15.25 19 15.25C19.4142 15.25 19.75 15.5858 19.75 16V19ZM7 5C5.89543 5 5 5.89543 5 7V13C5 14.1046 5.89543 15 7 15H13C14.1046 15 15 14.1046 15 13V7C15 5.89543 14.1046 5 13 5H7Z"></path></symbol><symbol data-v-67be6428="" id="icon-wechat" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M13.5578 5.34061C12.0476 2.85722 8.90911 1.73257 6.11813 2.05358C4.56413 2.23231 3.0449 2.85861 1.88463 3.92471C1.00689 4.72863 0.354462 5.78486 0.109889 6.95889C-0.187864 8.37395 0.125815 9.85314 0.957723 11.0298C1.28982 11.4994 1.68479 11.9193 2.11951 12.2941C2.25136 12.4079 2.38694 12.5172 2.52543 12.6228C2.59301 12.6742 2.66115 12.7249 2.73011 12.7745C2.74195 12.7831 2.75392 12.7902 2.76512 12.7969C2.80389 12.8201 2.83351 12.8378 2.81653 12.8887L2.67458 13.3177C2.53986 13.7252 2.40492 14.1325 2.26998 14.5399C2.22084 14.6883 2.17169 14.8366 2.12256 14.985L2.61572 14.7368C2.85714 14.6151 3.09863 14.4935 3.34012 14.3719C3.58099 14.2507 3.82186 14.1294 4.06266 14.0081L4.40902 13.8337C4.42474 13.8257 4.44104 13.8164 4.45775 13.8069C4.51759 13.7728 4.58265 13.7356 4.64501 13.7481C4.76613 13.7723 4.88708 13.7972 5.00801 13.8221C5.08094 13.8372 5.15386 13.8522 5.22681 13.867C6.06287 14.0373 6.88508 14.1348 7.73859 14.0675C7.4486 13.0669 7.44915 12.0016 7.7559 11.0045C8.09853 9.88624 8.81438 8.89831 9.74448 8.19773C11.0171 7.23915 12.6431 6.81493 14.2212 6.99199C14.0895 6.4081 13.8688 5.85148 13.5578 5.34061ZM4.77922 5.02147C4.28094 5.02147 3.71299 5.35514 3.71299 5.90829C3.71299 6.46088 4.28066 6.79844 4.77922 6.79844C5.29233 6.79844 5.66293 6.42291 5.66293 5.90829C5.66293 5.39311 5.29205 5.02147 4.77922 5.02147ZM10.6158 5.90829C10.6158 6.42444 10.2434 6.79844 9.7296 6.79844C9.23076 6.79844 8.66641 6.46032 8.66641 5.90829C8.66641 5.3557 9.23104 5.02147 9.7296 5.02147C10.2431 5.02147 10.6158 5.39158 10.6158 5.90829ZM17.7911 8.53846C15.3552 6.80489 11.734 6.93368 9.53048 9.01108C8.77779 9.72181 8.22909 10.6485 8.04061 11.6744C7.78288 13.0799 8.22536 14.5441 9.17304 15.605C10.0674 16.6063 11.2889 17.2564 12.5986 17.5166C13.4216 17.6806 14.2559 17.6931 15.0799 17.5344C15.2863 17.4948 15.4911 17.4481 15.6954 17.3986C15.7826 17.3774 15.8697 17.3559 15.9568 17.334C15.9655 17.3319 15.9784 17.3272 15.9934 17.3219C16.0359 17.3068 16.0949 17.2858 16.118 17.2984C16.2476 17.3695 16.3771 17.4408 16.5066 17.5122L17.0557 17.8142L17.0577 17.8153L17.0598 17.8164C17.3912 17.9986 17.7227 18.1809 18.054 18.3634C17.9748 18.0977 17.895 17.832 17.8153 17.5664L17.8146 17.5641L17.6749 17.0981L17.5814 16.7863L17.5332 16.6257C17.5159 16.5675 17.5927 16.5183 17.6556 16.4779C17.6753 16.4653 17.6937 16.4535 17.7073 16.4426C18.0608 16.1622 18.3952 15.8558 18.6963 15.5191C19.1832 14.9747 19.5895 14.3498 19.8161 13.6505C20.0122 13.039 20.0488 12.392 19.9377 11.7604C19.7098 10.438 18.8643 9.30511 17.7911 8.53846ZM15.2396 11.0049C15.1595 10.6088 15.5334 10.1787 15.931 10.1787C16.3063 10.1787 16.7409 10.3931 16.8096 10.7989C16.8724 11.1695 16.556 11.4696 16.227 11.5617C15.8032 11.6802 15.3326 11.4649 15.2396 11.0049ZM12.0348 10.1787C11.6369 10.1787 11.2573 10.6064 11.3385 11.0049C11.4325 11.4667 11.9081 11.68 12.3327 11.5617C12.6626 11.4696 12.9753 11.1695 12.9134 10.7989C12.8453 10.3914 12.4112 10.1787 12.0348 10.1787Z"></path></symbol><symbol data-v-67be6428="" id="icon-weibo" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M-0.000244141 13.0984C-0.000244141 8.70757 6.6145 3.5004 9.18008 4.57052C10.1717 4.98415 9.97381 6.1693 9.85415 6.88576C9.8069 7.16863 9.77186 7.37844 9.82705 7.43887C9.92921 7.55074 10.2955 7.42054 10.7994 7.2414C11.8362 6.87286 13.4557 6.2972 14.5566 7.19617C15.2665 7.77576 14.9657 8.72382 14.7905 9.27603C14.7289 9.4701 14.6829 9.61528 14.7017 9.6784C14.741 9.81053 14.9858 9.91133 15.317 10.0477C15.926 10.2984 16.8269 10.6692 17.2784 11.5759C18.3716 13.7713 15.2036 18.2504 8.62234 18.2504C3.25024 18.2504 -0.000244141 15.6688 -0.000244141 13.0984ZM8.45309 17.057C11.7733 16.7393 14.2944 14.7397 14.0842 12.5908C13.874 10.4418 11.012 8.95732 7.69179 9.27503C4.37159 9.59274 1.85045 11.5924 2.06068 13.7413C2.2709 15.8902 5.13288 17.3747 8.45309 17.057Z"></path><path data-v-67be6428="" fill-rule="evenodd" clip-rule="evenodd" d="M10.7098 12.7012C11.1162 14.1374 10.0604 15.6852 8.35157 16.1581C6.64275 16.6311 4.92801 15.8502 4.5216 14.4139C4.11518 12.9777 5.171 11.4299 6.87982 10.957C8.58865 10.484 10.3034 11.2649 10.7098 12.7012ZM7.67026 13.6265C7.89619 14.1072 7.61751 14.7092 7.04779 14.9711C6.47808 15.2331 5.83308 15.0558 5.60715 14.5751C5.38122 14.0945 5.6599 13.4925 6.22962 13.2306C6.79933 12.9686 7.44433 13.1459 7.67026 13.6265ZM8.41746 13.3766C8.63945 13.2745 8.74804 13.0399 8.66001 12.8526C8.57197 12.6654 8.32065 12.5963 8.09866 12.6984C7.87667 12.8004 7.76808 13.035 7.85612 13.2223C7.94415 13.4095 8.19547 13.4786 8.41746 13.3766Z"></path><path data-v-67be6428="" d="M13.648 3.54836C13.9523 3.47388 14.2712 3.43418 14.6004 3.43418C16.7813 3.43418 18.5492 5.18267 18.5492 7.33955C18.5492 7.81593 18.4633 8.27085 18.3066 8.69104C18.168 9.06261 18.3602 9.47493 18.7359 9.61199C19.1116 9.74904 19.5285 9.55894 19.6671 9.18737C19.8822 8.61063 19.9993 7.98781 19.9993 7.33955C19.9993 4.3906 17.5822 2 14.6004 2C14.1528 2 13.717 2.05403 13.2996 2.15619C12.9109 2.25133 12.6738 2.64011 12.77 3.02455C12.8662 3.40899 13.2593 3.6435 13.648 3.54836Z"></path><path data-v-67be6428="" d="M14.2887 6.05162C14.388 6.02824 14.4923 6.01569 14.6004 6.01569C15.3397 6.01569 15.939 6.6084 15.939 7.33955C15.939 7.49914 15.9108 7.65062 15.8596 7.7904C15.7232 8.16277 15.9179 8.57396 16.2944 8.70881C16.6709 8.84366 17.0867 8.65112 17.2231 8.27875C17.3307 7.98466 17.3891 7.66805 17.3891 7.33955C17.3891 5.81633 16.1406 4.58152 14.6004 4.58152C14.3784 4.58152 14.1614 4.60734 13.9529 4.65643C13.5633 4.74813 13.3227 5.1348 13.4154 5.52008C13.5082 5.90535 13.8991 6.14333 14.2887 6.05162Z"></path></symbol><symbol data-v-67be6428="" id="icon-qq" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path data-v-67be6428="" d="M11.8841 17.1943C11.1815 17.1943 10.5625 17.2136 10.0541 17.26C9.44625 17.2112 8.8365 17.1898 8.22671 17.1956C6.20498 17.1956 4.40588 17.9613 4.40588 18.5263C4.40588 19.0681 5.89998 19.0076 7.91657 18.987C8.64426 18.985 9.3699 18.9096 10.0824 18.7618C10.6796 18.8879 11.4079 18.9677 12.193 18.9741C14.2095 18.9947 15.7024 19.0552 15.7024 18.5173C15.7024 17.9549 13.9045 17.1943 11.8841 17.1943V17.1943Z"></path><path data-v-67be6428="" d="M16.9138 11.6311C16.5346 10.6112 16.1212 9.60428 15.6745 8.61206C15.6951 8.37141 15.7054 8.12818 15.7054 7.8811C15.7054 4.08086 13.7622 1 10.0649 1C6.36759 1 4.42307 4.08086 4.42307 7.8811C4.42307 8.11274 4.43208 8.34052 4.45138 8.56573C3.99804 9.5756 3.57913 10.6006 3.19536 11.6389C2.41678 13.7494 2.38203 15.6566 2.65357 15.7982C2.84661 15.8985 3.54797 15.1611 4.21845 13.9669C4.66115 16.7801 6.53102 18.8842 10.0649 18.8842C13.5871 18.8842 15.457 16.7916 15.9074 13.99C16.5728 15.1611 17.2664 15.8818 17.4569 15.7814C17.7284 15.6399 17.6937 13.7365 16.9138 11.6311V11.6311Z"></path><path data-v-67be6428="" d="M8.5542 3.2522C8.00598 3.26507 7.57358 3.90981 7.58902 4.69739C7.60447 5.48369 8.06132 6.11299 8.60954 6.1027C9.15776 6.0924 9.59016 5.44637 9.57472 4.65879C9.56056 3.87249 9.10243 3.24319 8.5542 3.25348V3.2522ZM11.5862 3.26764C11.0315 3.25734 10.5695 3.88278 10.5541 4.66651C10.5386 5.44895 10.9749 6.0924 11.5308 6.1027C12.0842 6.11299 12.5475 5.48755 12.5629 4.70512C12.5784 3.92139 12.1408 3.27794 11.5862 3.26764V3.26764Z"></path><path data-v-67be6428="" d="M13.6704 9.57861C12.5971 9.76521 11.354 9.87074 10.0285 9.87074C8.7287 9.87074 7.50742 9.76779 6.44959 9.58762C5.71605 10.4962 5.65942 11.8307 5.65942 13.3184C5.65942 16.0505 7.20371 18.2665 10.0645 18.2665C12.924 18.2665 14.4696 16.0505 14.4696 13.3184C14.4696 11.8243 14.4104 10.4859 13.6704 9.57861V9.57861Z"></path><path data-v-67be6428="" d="M10.0628 6.56616C8.14273 6.56616 6.58557 6.95223 6.58557 7.26238C6.58557 7.57124 8.62146 8.42188 10.0641 8.42188C11.5054 8.42188 13.5413 7.55065 13.5413 7.26238C13.5413 6.97411 11.9842 6.56745 10.0641 6.56745L10.0628 6.56616Z"></path><path data-v-67be6428="" d="M15.6744 8.6121L15.6757 8.59151C14.264 9.05866 12.2718 9.35078 10.0648 9.35078C7.8513 9.35078 5.85402 9.05737 4.441 8.58765C4.14115 9.25684 3.85546 9.93375 3.58521 10.6171C4.45644 10.9054 5.43192 11.1357 6.48332 11.2992V13.8858C6.48332 13.8858 7.22715 14.0235 7.92981 14.0531C8.42784 14.0737 8.95676 13.9888 8.95676 13.9888V11.5398C9.32095 11.5565 9.6903 11.5656 10.0635 11.5656C12.4919 11.5656 14.7311 11.2142 16.5251 10.6222C16.2566 9.94593 15.9729 9.27571 15.6744 8.6121V8.6121Z"></path><path data-v-67be6428="" d="M8.87981 4.24829C8.63787 4.24829 8.44226 4.53656 8.44226 4.89174C8.44226 5.24693 8.63787 5.5352 8.87981 5.5352C9.12046 5.5352 9.31736 5.24693 9.31736 4.89174C9.31736 4.53656 9.12046 4.24829 8.87981 4.24829V4.24829ZM12.0997 4.65624C12.0997 4.65624 11.9246 4.41816 11.4819 4.48122C11.0444 4.54428 10.8745 4.83126 10.8423 4.86215C10.8423 4.86215 10.7381 5.0243 10.8115 5.12467C10.8848 5.22505 11.0174 5.06676 11.0174 5.06676C11.0174 5.06676 11.2194 4.78364 11.4806 4.77335C11.6273 4.76349 11.7729 4.80489 11.8925 4.89046C11.8925 4.89046 12.0211 4.99856 12.0984 4.89046C12.1769 4.78364 12.0997 4.65624 12.0997 4.65624V4.65624Z"></path></symbol></svg><div data-v-67be6428="" class="panel-btn author"><span data-v-67be6428="" z-index="100"><div class="byte-tooltip byte-tooltip--dark" style="display: none; position: absolute; max-width: none; will-change: transform; z-index: 1003; top: 0px; left: 0px; transform: translate3d(48px, 24px, 0px);" x-placement="right"><span data-v-67be6428="" style="white-space: nowrap;"><span data-v-67be6428="">加个关注，精彩更新不错过~</span><i data-v-67be6428="" class="byte-icon byte-icon--close" style="cursor: pointer; margin-left: 10px; color: var(--juejin-font-3);"><svg t="1561638608887" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="441911" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M512 448l288-288c6.4-6.4 19.2-6.4 32 0l25.6 32c6.4 6.4 6.4 19.2 0 32L569.6 505.6l288 288c6.4 6.4 6.4 19.2 0 32l-32 32c-6.4 6.4-19.2 6.4-32 0L512 569.6l-288 288c-6.4 6.4-19.2 6.4-32 0l-32-32c-6.4-6.4-6.4-19.2 0-32L448 505.6 160 224c-6.4-12.8-6.4-25.6 0-32l32-32c6.4-6.4 19.2-6.4 32 0L512 448z" p-id="441912"></path><path d="M512 448l288-288c6.4-6.4 19.2-6.4 32 0l25.6 32c6.4 6.4 6.4 19.2 0 32L569.6 505.6l288 288c6.4 6.4 6.4 19.2 0 32l-32 32c-6.4 6.4-19.2 6.4-32 0L512 569.6l-288 288c-6.4 6.4-19.2 6.4-32 0l-32-32c-6.4-6.4-6.4-19.2 0-32L448 505.6 160 224c-6.4-12.8-6.4-25.6 0-32l32-32c6.4-6.4 19.2-6.4 32 0L512 448z" p-id="441913"></path></svg></i></span><div x-arrow="" class="popper__arrow" style="top: 0px;"></div></div><span class="byte-tooltip__wrapper"><div data-v-03256cc6="" data-v-67be6428="" class="avatar jj-avatar avatar"><img data-v-5244ef91="" data-v-03256cc6="" src="./ts和js的区别_files/075d8e781ba84bf64035ac251988fb93~90x90.awebp" alt="avatar" class="lazy avatar-img" loading="lazy"> <div data-v-67be6428="" data-v-03256cc6="" class="follow-area"><div data-v-67be6428="" data-v-03256cc6="" class="follow-text"> 关注 </div></div></div></span></span></div><div data-v-67be6428="" badge="5.2k" class="panel-btn with-badge"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon icon-zan"><use data-v-6e70c50a="" xlink:href="#icon-zan"></use></svg></div><div data-v-67be6428="" badge="0" class="panel-btn"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon icon-comment"><use data-v-6e70c50a="" xlink:href="#icon-comment"></use></svg></div><div data-v-67be6428="" badge="9.3k" class="panel-btn with-badge"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon icon-collect"><use data-v-6e70c50a="" xlink:href="#icon-collect"></use></svg><div data-v-d0b73df6="" data-v-67be6428="" class="collect-popover"><div data-v-d0b73df6="" class="title">收藏成功！</div><div data-v-d0b73df6="" class="sub-title"> 已添加到「」， <span data-v-d0b73df6="" class="modify-btn">点击更改</span></div></div><!----><!----></div><div data-v-67be6428="" class="share-btn panel-btn"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon icon-share"><use data-v-6e70c50a="" xlink:href="#icon-share"></use></svg><div data-v-67be6428="" class="share-popup"><ul data-v-67be6428=""><li data-v-67be6428="" class="share-item wechat"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon share-icon icon-wechat"><use data-v-6e70c50a="" xlink:href="#icon-wechat"></use></svg><span data-v-67be6428="" class="share-item-title">微信</span><div data-v-67be6428="" class="wechat-qrcode"><img data-v-67be6428="" src="https://juejin.cn/post/6872111128135073806?searchId=20241125163051A32A864894C64A0C076E" class="wechat-qrcode-img" style="display: none;"><span data-v-67be6428="" class="wechat-qrcode-title">微信扫码分享</span></div></li><li data-v-67be6428="" class="share-item weibo"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon share-icon icon-weibo"><use data-v-6e70c50a="" xlink:href="#icon-weibo"></use></svg><span data-v-67be6428="" class="share-item-title">新浪微博</span></li><li data-v-67be6428="" class="share-item qq"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon share-icon icon-qq"><use data-v-6e70c50a="" xlink:href="#icon-qq"></use></svg><span data-v-67be6428="" class="share-item-title">QQ</span></li></ul></div></div><div data-v-67be6428="" class="panel-btn"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon icon-report"><use data-v-6e70c50a="" xlink:href="#icon-report"></use></svg></div><span data-v-67be6428="" class="tooltip"><span class="byte-tooltip__wrapper"><div data-v-67be6428="" class="panel-btn"><svg data-v-6e70c50a="" data-v-67be6428="" class="sprite-icon icon-immerse"><use data-v-6e70c50a="" xlink:href="#icon-immerse"></use></svg></div></span></span></div> <!----></div> <!----> <!----> <!----> <!----></main> <!----></div> <!----> <div class="global-component-box"><div data-v-262fe4c6="" class="alert-list alert-list"></div> <div data-v-56014ebe="" class="suspension-panel suspension-panel"><!----> <div data-v-56014ebe="" id="wechat-assets__global-right-bottom"></div> <div data-v-56014ebe="" class="btn btn-ai"><svg data-v-56014ebe="" xmlns="http://www.w3.org/2000/svg" width="24" height="14" viewBox="0 0 24 14" fill="none" class=""><g data-v-56014ebe="" clip-path="url(#clip0_186_3192)"><path data-v-56014ebe="" d="M13.3346 0.699723C14.2654 1.62813 14.2654 3.13298 13.3346 4.06046L4.06746 13.3039C3.13667 14.2323 1.62796 14.2323 0.698093 13.3039C-0.232697 12.3755 -0.232697 10.8706 0.698093 9.94314L9.96432 0.699723C10.8951 -0.228684 12.4038 -0.228684 13.3337 0.699723H13.3346Z" fill="url(#paint0_linear_186_3192)"></path><path data-v-56014ebe="" d="M20.9118 0C22.2279 0 23.2948 1.0642 23.2948 2.37691V11.5326C23.2948 12.8453 22.2279 13.9095 20.9118 13.9095C19.5957 13.9095 18.5288 12.8453 18.5288 11.5326V2.37691C18.5288 1.0642 19.5957 0 20.9118 0Z" fill="url(#paint1_linear_186_3192)"></path><path data-v-56014ebe="" d="M22.5963 0.699235C23.5271 1.62764 23.5271 3.13249 22.5963 4.05997L13.3292 13.3034C12.3984 14.2318 10.8897 14.2318 9.95981 13.3034C9.02902 12.375 9.02902 10.8701 9.95981 9.94265L19.227 0.699235C20.1578 -0.229172 21.6665 -0.229172 22.5963 0.699235Z" fill="url(#paint2_linear_186_3192)"></path><path data-v-56014ebe="" d="M22.1038 9.56377C23.2439 10.2197 23.6338 11.6737 22.9762 12.81C22.3186 13.9471 20.8609 14.3361 19.7217 13.6802C18.5816 13.0243 18.1917 11.5702 18.8493 10.434C19.5068 9.29679 20.9646 8.90788 22.1038 9.56377Z" fill="#0066FF"></path></g><defs data-v-56014ebe=""><lineargradient data-v-56014ebe="" id="paint0_linear_186_3192" x1="13.335" y1="0.700158" x2="0.730605" y2="13.3369" gradientUnits="userSpaceOnUse"><stop data-v-56014ebe="" stop-color="#992AFC"></stop><stop data-v-56014ebe="" offset="0.32" stop-color="#6255FE"></stop><stop data-v-56014ebe="" offset="1" stop-color="#0066FF"></stop></lineargradient><lineargradient data-v-56014ebe="" id="paint1_linear_186_3192" x1="20.9118" y1="0" x2="20.9118" y2="13.9085" gradientUnits="userSpaceOnUse"><stop data-v-56014ebe="" stop-color="#0066FF" stop-opacity="0.6"></stop><stop data-v-56014ebe="" offset="1" stop-color="#0066FF" stop-opacity="0.15"></stop></lineargradient><lineargradient data-v-56014ebe="" id="paint2_linear_186_3192" x1="22.5963" y1="0.698583" x2="9.99183" y2="13.3354" gradientUnits="userSpaceOnUse"><stop data-v-56014ebe="" stop-color="#F57638"></stop><stop data-v-56014ebe="" offset="0.282909" stop-color="#6D66FF"></stop><stop data-v-56014ebe="" offset="0.87" stop-color="#1064FF"></stop></lineargradient><clippath data-v-56014ebe="" id="clip0_186_3192"><rect data-v-56014ebe="" width="24" height="14" fill="white"></rect></clippath></defs></svg></div> <button data-v-56014ebe="" title="建议反馈" class="btn btn-hover meiqia-btn" style=""><svg data-v-56014ebe="" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><path data-v-56014ebe="" d="M3.26628 5.18082C3.26628 4.35104 3.94716 3.67545 4.7907 3.67545H15.2093C16.0528 3.67545 16.7337 4.35104 16.7337 5.18082V12.538C16.7337 13.3678 16.0528 14.0434 15.2093 14.0434H11.6358C11.4624 14.0434 11.2948 14.1064 11.165 14.221L8.28954 16.7575V14.7452C8.28954 14.356 7.97087 14.0434 7.5814 14.0434H4.7907C3.94716 14.0434 3.26628 13.3678 3.26628 12.538V5.18082ZM4.7907 2.27187C3.16822 2.27187 1.85 3.57264 1.85 5.18082V12.538C1.85 14.1462 3.16822 15.447 4.7907 15.447H6.87326V17.5004C6.87326 18.4274 7.97825 18.9111 8.67204 18.2991L11.9053 15.447H15.2093C16.8318 15.447 18.15 14.1462 18.15 12.538V5.18082C18.15 3.57264 16.8318 2.27187 15.2093 2.27187H4.7907Z" fill="#1E80FF" stroke="#1E80FF" stroke-width="0.3" stroke-linejoin="round"></path><path data-v-56014ebe="" d="M7.00132 9.49204C6.79163 9.17668 6.366 9.09101 6.05063 9.3007C5.73527 9.51038 5.6496 9.93602 5.85929 10.2514C6.74878 11.5891 8.27183 12.4732 10.0017 12.4732C11.7316 12.4732 13.2546 11.5891 14.1441 10.2514C14.3538 9.93602 14.2681 9.51038 13.9528 9.3007C13.6374 9.09101 13.2118 9.17668 13.0021 9.49204C12.356 10.4637 11.2532 11.1018 10.0017 11.1018C8.75017 11.1018 7.64741 10.4637 7.00132 9.49204Z" fill="#1E80FF" stroke="#1E80FF" stroke-width="0.3" stroke-linecap="round" stroke-linejoin="round"></path></svg></button> <span data-v-56014ebe="" class="more-btn"><div class="byte-popover" x-placement="left-end" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1008; top: 0px; left: 0px; transform: translate3d(-9px, 217px, 0px);"><!----><p class="byte-popover__content"><ul data-v-56014ebe="" class="link-list"><li data-v-56014ebe="" class="item"><span data-v-56014ebe="" class="download-popover"><div class="byte-popover" x-placement="right-start" x-out-of-boundaries="" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1006; top: 0px; left: 0px; transform: translate3d(5px, 1897px, 0px);"><!----><p class="byte-popover__content"><div data-v-56014ebe="" class="wrap"><img data-v-5244ef91="" data-v-56014ebe="" src="./ts和js的区别_files/2ad212d53ccd44569d10317171664bae~tplv-k3u1fbpfcp-jj_158_0_0_0_q75.avis" alt="下载掘金APP" class="lazy qrcode" loading="lazy"> <span data-v-56014ebe="" class="text">下载APP</span></div></p><!----><div x-arrow="" class="popper__arrow" style="top: 0px;"></div></div><a data-v-56014ebe="" class="link" target="_blank"><svg data-v-56014ebe="" width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-56014ebe="" fill-rule="evenodd" clip-rule="evenodd" d="M17.8867 3.22968C17.8867 1.93384 16.9412 0.882812 15.7762 0.882812H5.22377C4.05878 0.882812 3.11328 1.93384 3.11328 3.22968V16.7706C3.11328 18.0664 4.05878 19.1175 5.22377 19.1175H15.7762C16.9412 19.1175 17.8867 18.0707 17.8867 16.7748V3.22968ZM5.22377 2.2884H15.7762C15.7762 2.2884 15.8438 2.29262 15.8395 2.29684C16.1688 2.34327 16.4769 2.71472 16.4769 3.22968V12.2867C16.4769 12.9494 15.9397 13.4867 15.2769 13.4867H5.71887C5.05613 13.4867 4.51887 12.9494 4.51887 12.2867V3.22546L4.52309 3.12415C4.5653 2.6303 4.89454 2.2884 5.22377 2.2884ZM11.1458 4.71124C11.1458 4.32291 10.8292 4.00634 10.4409 4.00634H10.4325C10.0441 4.00634 9.72756 4.32291 9.72756 4.71124V9.05463L8.93402 8.17245L8.87492 8.11336C8.60056 7.87276 8.18268 7.89809 7.93786 8.17245L7.86189 8.26109L7.80701 8.33285C7.62129 8.59877 7.64662 8.96177 7.86189 9.20237L9.93861 11.5197L10.0061 11.583C10.1454 11.7012 10.3227 11.7561 10.5 11.7392C10.711 11.7603 10.9179 11.6759 11.0614 11.5197L13.1423 9.20659C13.3829 8.94067 13.3829 8.53545 13.1423 8.26953L13.0621 8.18089L13.0115 8.13024C12.7329 7.8812 12.3108 7.90653 12.0618 8.18089L11.1458 9.19815V4.71124ZM9.81709 15.2837C9.48571 15.2837 9.21709 15.5523 9.21709 15.8837C9.21709 16.215 9.48571 16.4837 9.81709 16.4837L11.1847 16.4837C11.5161 16.4837 11.7847 16.215 11.7847 15.8837C11.7847 15.5523 11.5161 15.2837 11.1847 15.2837H9.81709Z" fill="#86909C"></path></svg> <span data-v-56014ebe="" class="title">下载APP</span></a></span></li> <li data-v-56014ebe="" class="item"><span data-v-56014ebe="" class="wechat-popover"><div class="byte-popover" x-placement="right" x-out-of-boundaries="" style="display: none; position: absolute; width: 200px; max-width: none; will-change: transform; z-index: 1007; top: 0px; left: 0px; transform: translate3d(5px, 1897px, 0px);"><!----><p class="byte-popover__content"><div data-v-56014ebe="" class="wrap"><img data-v-5244ef91="" data-v-56014ebe="" src="./ts和js的区别_files/9f4933cc8fdb411cba89904f14a3ec0a~tplv-k3u1fbpfcp-jj_158_0_0_0_q75.avis" alt="微信扫一扫" class="lazy qrcode" loading="lazy"> <span data-v-56014ebe="" class="text">微信扫一扫</span></div></p><!----><div x-arrow="" class="popper__arrow" style="top: 0px;"></div></div><a data-v-56014ebe="" class="link" target="_blank"><svg data-v-56014ebe="" width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-56014ebe="" fill-rule="evenodd" clip-rule="evenodd" d="M14.058 5.34061C12.5478 2.85722 9.40935 1.73257 6.61837 2.05358C5.06438 2.23231 3.54515 2.85861 2.38488 3.92471C1.50713 4.72863 0.854706 5.78486 0.610133 6.95889C0.31238 8.37395 0.62606 9.85314 1.45797 11.0298C1.79007 11.4994 2.18504 11.9193 2.61976 12.2941C2.7516 12.4079 2.88718 12.5172 3.02567 12.6228C3.09325 12.6742 3.16139 12.7249 3.23036 12.7745C3.24219 12.7831 3.25416 12.7902 3.26537 12.7969C3.30414 12.8201 3.33375 12.8378 3.31678 12.8887L3.17482 13.3177C3.04011 13.7252 2.90517 14.1325 2.77023 14.5399C2.72108 14.6883 2.67194 14.8366 2.6228 14.985L3.11597 14.7368C3.35739 14.6151 3.59888 14.4935 3.84037 14.3719C4.08124 14.2507 4.32211 14.1294 4.56291 14.0081L4.90927 13.8337C4.92499 13.8257 4.94129 13.8164 4.958 13.8069C5.01783 13.7728 5.0829 13.7356 5.14526 13.7481C5.26637 13.7723 5.38733 13.7972 5.50826 13.8221C5.58119 13.8372 5.65411 13.8522 5.72705 13.867C6.56311 14.0373 7.38533 14.1348 8.23884 14.0675C7.94884 13.0669 7.94939 12.0016 8.25615 11.0045C8.59877 9.88624 9.31463 8.89831 10.2447 8.19773C11.5173 7.23915 13.1433 6.81493 14.7214 6.99199C14.5897 6.4081 14.3691 5.85148 14.058 5.34061ZM5.28108 5.01953C4.78279 5.01953 4.21484 5.3532 4.21484 5.90635C4.21484 6.45894 4.78251 6.7965 5.28108 6.7965C5.79418 6.7965 6.16478 6.42097 6.16478 5.90635C6.16478 5.39117 5.7939 5.01953 5.28108 5.01953ZM11.1173 5.90635C11.1173 6.4225 10.745 6.7965 10.2312 6.7965C9.73231 6.7965 9.16797 6.45838 9.16797 5.90635C9.16797 5.35376 9.73259 5.01953 10.2312 5.01953C10.7447 5.01953 11.1173 5.38964 11.1173 5.90635ZM18.2917 8.53765C15.8558 6.80407 12.2345 6.93287 10.031 9.01026C9.27834 9.721 8.72965 10.6477 8.54116 11.6736C8.28343 13.0791 8.72591 14.5433 9.67359 15.6042C10.568 16.6055 11.7894 17.2556 13.0991 17.5158C13.9222 17.6798 14.7564 17.6923 15.5805 17.5336C15.7868 17.494 15.9916 17.4473 16.1959 17.3977C16.2832 17.3766 16.3703 17.355 16.4574 17.3332C16.466 17.331 16.479 17.3264 16.4939 17.3211L16.4939 17.3211C16.5365 17.3059 16.5954 17.2849 16.6186 17.2976C16.7479 17.3685 16.877 17.4396 17.0061 17.5108L17.0072 17.5114L17.5563 17.8134L17.5583 17.8145C17.8904 17.9971 18.2226 18.1797 18.5545 18.3626C18.4751 18.0962 18.3952 17.8299 18.3153 17.5636L18.1755 17.0973L18.082 16.7855L18.0338 16.6248C18.0164 16.5667 18.0932 16.5174 18.1561 16.4771C18.1759 16.4645 18.1942 16.4527 18.2079 16.4418C18.5613 16.1614 18.8958 15.855 19.1968 15.5183C19.6838 14.9739 20.0901 14.349 20.3167 13.6496C20.5128 13.0382 20.5493 12.3912 20.4383 11.7596C20.2103 10.4372 19.3648 9.30429 18.2917 8.53765ZM15.7414 11.0059C15.6613 10.6097 16.0352 10.1797 16.4328 10.1797C16.8082 10.1797 17.2427 10.394 17.3114 10.7999C17.3742 11.1704 17.0579 11.4706 16.7288 11.5626C16.305 11.6811 15.8344 11.4658 15.7414 11.0059ZM12.5355 10.1797C12.1376 10.1797 11.758 10.6074 11.8392 11.0059C11.9332 11.4676 12.4088 11.681 12.8334 11.5626C13.1633 11.4706 13.476 11.1704 13.4141 10.7999C13.3459 10.3924 12.9119 10.1797 12.5355 10.1797Z" fill="#8A919F"></path></svg> <span data-v-56014ebe="" class="title">微信公众号</span></a></span></li> <li data-v-56014ebe="" class="item"><a data-v-56014ebe="" href="https://weibo.com/xitucircle" target="_blank" class="link"><svg data-v-56014ebe="" width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg" class="icon"><path data-v-56014ebe="" fill-rule="evenodd" clip-rule="evenodd" d="M0.5 13.0991C0.5 8.7083 7.11474 3.50113 9.68032 4.57125C10.672 4.98488 10.474 6.17003 10.3544 6.88649C10.3071 7.16936 10.2721 7.37918 10.3273 7.43961C10.4295 7.55147 10.7957 7.42127 11.2997 7.24214C12.3364 6.8736 13.9559 6.29793 15.0569 7.1969C15.7667 7.77649 15.466 8.72455 15.2908 9.27677C15.2292 9.47083 15.1831 9.61601 15.2019 9.67913C15.2412 9.81126 15.4861 9.91207 15.8173 10.0484C16.4263 10.2991 17.3272 10.6699 17.7786 11.5767C18.8718 13.772 15.7039 18.2511 9.12259 18.2511C3.75048 18.2511 0.5 15.6696 0.5 13.0991ZM8.95153 17.0592C12.2717 16.7415 14.7929 14.7419 14.5826 12.5929C14.3724 10.444 11.5104 8.95949 8.19024 9.2772C4.87003 9.59491 2.3489 11.5945 2.55912 13.7435C2.76935 15.8924 5.63133 17.3769 8.95153 17.0592Z" fill="#8A919F"></path><path data-v-56014ebe="" fill-rule="evenodd" clip-rule="evenodd" d="M11.2088 12.7026C11.6152 14.1389 10.5594 15.6866 8.8506 16.1596C7.14177 16.6326 5.42703 15.8517 5.02062 14.4154C4.61421 12.9791 5.67002 11.4314 7.37885 10.9584C9.08767 10.4855 10.8024 11.2664 11.2088 12.7026ZM8.16929 13.628C8.39522 14.1086 8.11653 14.7106 7.54682 14.9726C6.9771 15.2345 6.3321 15.0572 6.10617 14.5766C5.88024 14.096 6.15893 13.494 6.72864 13.232C7.29835 12.9701 7.94335 13.1474 8.16929 13.628ZM8.91649 13.378C9.13847 13.276 9.24707 13.0414 9.15903 12.8541C9.071 12.6668 8.81967 12.5978 8.59768 12.6998C8.3757 12.8019 8.2671 13.0365 8.35514 13.2237C8.44317 13.411 8.6945 13.4801 8.91649 13.378Z" fill="#8A919F"></path><path data-v-56014ebe="" d="M14.1494 3.54836C14.4537 3.47388 14.7726 3.43418 15.1019 3.43418C17.2827 3.43418 19.0506 5.18267 19.0506 7.33955C19.0506 7.81593 18.9647 8.27085 18.808 8.69104C18.6694 9.06261 18.8616 9.47493 19.2373 9.61199C19.613 9.74904 20.0299 9.55894 20.1685 9.18737C20.3836 8.61063 20.5007 7.98781 20.5007 7.33955C20.5007 4.3906 18.0836 2 15.1019 2C14.6543 2 14.2184 2.05403 13.801 2.15619C13.4123 2.25133 13.1752 2.64011 13.2714 3.02455C13.3676 3.40899 13.7607 3.6435 14.1494 3.54836Z" fill="#8A919F"></path><path data-v-56014ebe="" d="M14.7901 6.05162C14.8894 6.02824 14.9937 6.01569 15.1019 6.01569C15.8411 6.01569 16.4404 6.6084 16.4404 7.33955C16.4404 7.49914 16.4122 7.65062 16.361 7.7904C16.2246 8.16277 16.4193 8.57396 16.7958 8.70881C17.1723 8.84366 17.5881 8.65112 17.7245 8.27875C17.8321 7.98466 17.8905 7.66805 17.8905 7.33955C17.8905 5.81633 16.642 4.58152 15.1019 4.58152C14.8798 4.58152 14.6628 4.60734 14.4543 4.65643C14.0647 4.74813 13.8241 5.1348 13.9169 5.52008C14.0096 5.90535 14.4005 6.14333 14.7901 6.05162Z" fill="#8A919F"></path></svg> <span data-v-56014ebe="" class="title">新浪微博</span></a></li></ul></p><!----><div x-arrow="" class="popper__arrow"></div></div><button data-v-56014ebe="" title="更多" class="btn btn-hover"><svg data-v-56014ebe="" width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg" class=""><circle data-v-56014ebe="" cx="2.33301" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-56014ebe="" cx="8" cy="8" r="1.0625" fill="#8A919F"></circle><circle data-v-56014ebe="" cx="13.667" cy="8" r="1.0625" fill="#8A919F"></circle></svg></button></span> <button data-v-56014ebe="" title="回到顶部" class="btn btn-hover to-top-btn" style=""><svg data-v-56014ebe="" width="20" height="20" viewBox="0 0 20 20" fill="currentColor" stroke="currentColor" xmlns="http://www.w3.org/2000/svg" class="icon-top"><path data-v-56014ebe="" fill-rule="evenodd" clip-rule="evenodd" d="M5.00806 3.0625C4.70158 3.0625 4.45312 3.31095 4.45312 3.61743C4.45312 3.92391 4.70158 4.17236 5.00806 4.17236H14.9968C15.3033 4.17236 15.5518 3.92391 15.5518 3.61743C15.5518 3.31095 15.3033 3.0625 14.9968 3.0625H5.00806ZM10.3948 5.9997C10.1781 5.78297 9.82676 5.78297 9.61005 5.9997L6.07849 9.53126C5.86176 9.74797 5.86176 10.0993 6.07849 10.316C6.2952 10.5328 6.64656 10.5328 6.86327 10.316L9.44751 7.73182V17.3809C9.44751 17.6873 9.69596 17.9358 10.0024 17.9358C10.3089 17.9358 10.5574 17.6873 10.5574 17.3809V7.73182L13.1416 10.316C13.3583 10.5328 13.7097 10.5328 13.9264 10.316C14.1431 10.0993 14.1431 9.74797 13.9264 9.53126L10.3948 5.9997Z" stroke-width="0.5"></path></svg></button></div> <!----> <!----> <!----> <!----> <!----></div> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----> <!----></div></div></div><script>window.__NUXT__=(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R){t.loading=a;t.skeleton=d;t.cursor=f;t.data=[];t.total=b;t.hasMore=d;H.id=v;H.self_description=l;H.followed=a;H.viewerIsFollowing=l;H.community=l;H.subscribedTagCount=b;H.wroteBookCount=b;H.boughtBookCount=b;H.isBindedPhone=a;H.level=E;H.user_id=v;H.user_name=D;H.company=e;H.job_title="🏆掘金签约作者 | 公众号@全栈修仙之路";H.avatar_large="https:\u002F\u002Fp26-passport.byteacctimg.com\u002Fimg\u002Fuser-avatar\u002F075d8e781ba84bf64035ac251988fb93~300x300.image";H.description="聚焦全栈，专注分享 TS、Vue 3、前端架构等技术干货。";H.followee_count=70;H.follower_count=19945;H.post_article_count=99;H.digg_article_count=587;H.got_digg_count=42894;H.got_view_count=2188757;H.post_shortmsg_count=q;H.digg_shortmsg_count=39;H.isfollowed=a;H.favorable_author=g;H.power=F;H.study_point=b;H.university={university_id:f,name:e,logo:e};H.major={major_id:f,parent_id:f,name:e};H.student_status=b;H.select_event_count=b;H.select_online_course_count=b;H.identity=b;H.is_select_annual=a;H.select_annual_rank=b;H.annual_list_type=b;H.extraMap={};H.is_logout=b;H.annual_info=[];H.account_amount=b;H.user_growth_info={user_id:764915822103079,jpower:F,jscore:4076.3,jpower_level:E,jscore_level:6,jscore_title:"杰出掘友",author_achievement_list:[g],vip_level:q,vip_title:"渐入佳境",jscore_next_level_score:7000,jscore_this_level_mini_score:2000,vip_score:300};H.is_vip=a;H.become_author_days=b;H.collection_set_article_count=b;H.recommend_article_count_daily=b;H.article_collect_count_daily=b;H.user_priv_info={administrator:b,builder:b,favorable_author:b,book_author:b,forbidden_words:b,can_tag_cnt:b,auto_recommend:b,signed_author:b,popular_author:b,can_add_video:b};H.juejinPower=F;H.jobTitle="🏆掘金签约作者 | 公众号@全栈修仙之路";H.roles={isBookAuthor:a,isFavorableAuthor:d,isCobuilder:a,isAdmin:a};H.username=D;H.blogAddress=l;H.selfDescription="聚焦全栈，专注分享 TS、Vue 3、前端架构等技术干货。";H.beLikedCount=42894;H.beReadCount=2188757;H.followerCount=19945;H.followingCount=70;H.collectionCount=b;H.createdCollectionCount=b;H.followingCollectionCount=b;H.postedPostsCount=99;H.pinCount=q;H.likedArticleCount=587;H.likedPinCount=39;H.avatar="https:\u002F\u002Fp26-passport.byteacctimg.com\u002Fimg\u002Fuser-avatar\u002F075d8e781ba84bf64035ac251988fb93~300x300.image";H.latestLoginedInAt=c;H.createdAt=c;H.updatedAt=c;H.phoneNumber=e;H.titleDescription=e;H.followeesCount=70;H.applyEventCount=b;H.need_lead=b;H.followTopicCnt=b;return {layout:"default",data:[{renderPost:d}],fetch:[{queryString:e,isShowUserDropdownList:a,isShowAddMoreList:a,isFocus:a,isPhoneMenuShow:a,visibleBadge:a,placeholder:e,hiddenProperty:"hidden",searchHistoryVisible:a,searchHistoryItems:[],tabBadge:c,isChangePlaceholder:d,showMallBridge:a,showAIProblemBridge:a,removeSearchInputKeyupListener:c,logoImg:"\u002F\u002Flf-web-assets.juejin.cn\u002Fobj\u002Fjuejin-web\u002Fxitu_juejin_web\u002Fe08da34488b114bd4c665ba2fa520a31.svg"}],error:c,state:{view:{activityIndex:{activityList:[],pageInfo:{hasNextPage:a,endCursor:e},afterPosition:e,activityListIsLoading:d,activityListIsError:a,userActivityList:[],placeholder:e,actionType:{FETCH:"@\u002Fview\u002Factivity-index\u002FFETCH",FETCH_RECOMMEND_LIST:"@\u002Fview\u002Factivity-index\u002FFETCH_RECOMMEND_LIST",RESET_ACTIVITY_LIST:"@\u002Fview\u002Factivity-index\u002FRESET_ACTIVITY_LIST",FETCH_USER_ACTIVITY_LIST:"@\u002Fview\u002Factivity-index\u002FFETCH_USER_ACTIVITY_LIST",FETCH_NEW_COUNT:"@\u002Fview\u002Factivity-index\u002FFETCH_NEW_COUNT",DELETE_ACTIVITY:"@\u002Fview\u002Factivity-index\u002FDELETE_ACTIVITY",TOGGLE_FOLLOW_USER:"@\u002Fview\u002Factivity-index\u002FTOGGLE_FOLLOW_USER",FETCH_ENTRY_COMMENT_LIST:"@\u002Fview\u002Factivity-index\u002FFETCH_ENTRY_COMMENT_LIST",UPDATE_LIST_LOADING:"@\u002Fview\u002Factivity-index\u002FUPDATE_LIST_LOADING",RESET:"@\u002Fview\u002Factivity-index\u002FRESET"},hotList:{list:[],after:e,loading:a,hasNextPage:a,actionType:{UPDATE_STATE:"@\u002Fview\u002Factivity-index\u002Fhot-list\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Factivity-index\u002Fhot-list\u002FFETCH_MORE",FETCH:"@\u002Fview\u002Factivity-index\u002Fhot-list\u002FFETCH",RESET:"@\u002Fview\u002Factivity-index\u002Fhot-list\u002FRESET"}},sidebar:{bannerList:[],actionType:{RESET:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002FRESET",UPDATE_STATE:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002FUPDATE_STATE",FETCH_BANNER:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002FFETCH_BANNER"},recommend:{pageSize:h,page:b,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-topic-list\u002FUPDATE",FETCH:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-topic-list\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-topic-list\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-topic-list\u002FFETCH_MORE",RESET:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-topic-list\u002FRESET"},after:b},followed:{pageSize:h,page:b,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Ffollowed-topic-list\u002FUPDATE",FETCH:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Ffollowed-topic-list\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Ffollowed-topic-list\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Ffollowed-topic-list\u002FFETCH_MORE",RESET:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Ffollowed-topic-list\u002FRESET"},after:b},recommendPin:{list:[],after:e,loading:a,hasNextPage:d,actionType:{UPDATE_STATE:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-pin-list\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-pin-list\u002FFETCH_MORE",FETCH:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-pin-list\u002FFETCH",RESET:"@\u002Fview\u002Factivity-index\u002Fsidebar\u002Frecommend-pin-list\u002FRESET"}}},topicPinList:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Factivity-index\u002Ftopic-pin-list\u002FUPDATE",FETCH:"@\u002Fview\u002Factivity-index\u002Ftopic-pin-list\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Factivity-index\u002Ftopic-pin-list\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Factivity-index\u002Ftopic-pin-list\u002FFETCH_MORE",RESET:"@\u002Fview\u002Factivity-index\u002Ftopic-pin-list\u002FRESET"},topicId:e,navList:[{type:j,name:j,title:"推荐 ",id:j},{type:m,name:m,title:"热门 ",id:m},{type:o,name:o,title:"关注 ",id:o},{type:i,name:"opensource",title:"开源推荐 ",id:"5c09ea2b092dcb42c740fe73"},{type:i,name:"recruitment",title:"内推招聘",id:"5abb61e1092dcb4620ca3322"},{type:i,name:"dating",title:"掘金相亲",id:"5abcaa67092dcb4620ca335c"},{type:i,name:"slacking",title:"上班摸鱼",id:"5c106be9092dcb2cc5de7257"},{type:i,name:"app",title:"应用安利",id:"5b514af1092dcb61bd72800d"},{type:i,name:"tool",title:"开发工具",id:"5abb67d2092dcb4620ca3324"},{type:i,name:"news",title:"New资讯",id:"5c46a17f092dcb4737217152"}],sortType:p}},search:{search_result_from:b,query:e,list:[],linkList:[],loading:a,skeleton:d,actionType:{FETCH:"@\u002Fview\u002Fsearch\u002FFETCH",FETCH_MORE:"@\u002Fview\u002Fsearch\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fsearch\u002FRESET"}},columnIndex:{list:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002FcolumnIndex\u002Flist\u002FUPDATE",FETCH:"@\u002Fview\u002FcolumnIndex\u002Flist\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002FcolumnIndex\u002Flist\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002FcolumnIndex\u002Flist\u002FFETCH_MORE",RESET:"@\u002Fview\u002FcolumnIndex\u002Flist\u002FRESET"},sort:n,category:"all"},hotList:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002FcolumnIndex\u002FhotList\u002FUPDATE",FETCH:"@\u002Fview\u002FcolumnIndex\u002FhotList\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002FcolumnIndex\u002FhotList\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002FcolumnIndex\u002FhotList\u002FFETCH_MORE",RESET:"@\u002Fview\u002FcolumnIndex\u002FhotList\u002FRESET"}}},timelineIndex:{tdkTemplates:[],categoryNavList:[],tagNavList:[],splitTagList:[],timelineAdList:[],list:[],sort:p,category:j,categoryId:e,tagId:e,tag:"全部",actionType:{FETCH_TIMELINE_LIST:"@\u002Fview\u002FtimelineIndex\u002FFETCH_TIMELINE_LIST",FETCH_CATEGORY_LIST:"@\u002Fview\u002FtimelineIndex\u002FFETCH_CATEGORY_LIST",FETCH_TAG_LIST:"@\u002Fview\u002FtimelineIndex\u002FFETCH_TAG_LIST",DELETE_ENTRY:"@\u002Fview\u002FtimelineIndex\u002FDELETE_ENTRY",DELETE_USER_ENTRIES:"@\u002Fview\u002FtimelineIndex\u002FDELETE_USER_ENTRIES",DELETE_TAG_ENTRIES:"@\u002Fview\u002FtimelineIndex\u002FDELETE_TAG_ENTRIES",FETCH_MORE:"@\u002Fview\u002FtimelineIndex\u002FFETCH_MORE",FETCH:"@\u002Fview\u002FtimelineIndex\u002FFETCH",RESET:"@\u002Fview\u002FtimelineIndex\u002FRESET"},serverRenderTimelineList:a,timelineList:{list:[],cursor:f,skeleton:d,loading:a,hasMore:d,categoryId:e,tagId:e,sort:e,actionType:{UPDATE_STATE:"timeline-list\u002FUPDATE_STATE",FETCH_MORE:"timeline-list\u002FFETCH_MORE",FETCH:"timeline-list\u002FFETCH",RESET:"timeline-list\u002FRESET"}},recommendList:{list:[],cursor:f,sort:e,loading:a,skeleton:d,hasMore:d,actionType:{UPDATE_STATE:"recommend-list\u002FUPDATE_STATE",FETCH_MORE:"recommend-list\u002FFETCH_MORE",FETCH:"recommend-list\u002FFETCH",RESET:"recommend-list\u002FRESET"}},followingList:{list:[],cursor:f,skeleton:d,loading:a,hasMore:d,actionType:{UPDATE_STATE:"following-list\u002FUPDATE_STATE",FETCH_MORE:"following-list\u002FFETCH_MORE",FETCH:"following-list\u002FFETCH",RESET:"following-list\u002FRESET"}}},subscribe:{subscribed:{list:[],cursor:f,skeleton:d,loading:a,hasMore:a,actionType:{UPDATE_STATE:"view\u002Fsubscribe\u002Fsubscribed\u002Flist\u002FUPDATE_STATE",FETCH_MORE:"view\u002Fsubscribe\u002Fsubscribed\u002Flist\u002FFETCH_MORE",FETCH:"view\u002Fsubscribe\u002Fsubscribed\u002Flist\u002FFETCH",RESET:"view\u002Fsubscribe\u002Fsubscribed\u002Flist\u002FRESET"}},all:{list:[],cursor:f,loading:a,skeleton:d,hasMore:a,linkList:e,actionType:{UPDATE_STATE:"view\u002Fsubscribe\u002Fall\u002Flist\u002FUPDATE_STATE",FETCH_MORE:"view\u002Fsubscribe\u002Fall\u002Flist\u002FFETCH_MORE",FETCH:"view\u002Fsubscribe\u002Fall\u002Flist\u002FFETCH",RESET:"view\u002Fsubscribe\u002Fall\u002Flist\u002FRESET"}}},entryPublic:{entry:{user:{}},relatedEntryList:[],relatedCollectionList:[],actionType:{FETCH:"@\u002Fview\u002FentryPublic\u002FFETCH",RESET:"@\u002Fview\u002FentryPublic\u002FRESET"}},user:{user:{},serverRendered:a,userAnnuals:[],actionType:{FETCH:"@\u002Fview\u002Fuser\u002FFETCH",RESET:"@\u002Fview\u002Fuser\u002FRESET",UPDATE:"@\u002Fview\u002Fuser\u002FUPDATE",FETCH_ANNUALS:"@\u002Fview\u002Fuser\u002FFETCH_ANNUALS"},detailList:{actionType:{RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FRESET"},likeList:{list:[],cursor:f,hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FlikePostList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FlikePostList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FlikePostList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FlikePostList\u002FRESET"}},postList:{list:[],hasMore:a,skeleton:a,loading:a,sort:n,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FpostList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FpostList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FpostList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FpostList\u002FRESET"}},searchList:{list:[],hasMore:a,skeleton:a,loading:a,key_word:e,search_type:b,cursor:f,isPostSearch:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FsearchList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FsearchList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FsearchList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FsearchList\u002FRESET"}},tagList:{list:[],loading:a,skeleton:a,hasMore:a,cursor:f,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FtagList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FtagList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FtagList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FtagList\u002FRESET"}},collectionList:{list:[],userId:e,skeleton:a,hasMore:a,cursor:f,type:u,loading:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FRESET",TOGGLE_FOLLOW_COLLECTION:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FTOGGLE_FOLLOW_COLLECTION",FOLLOW_COLLECTION:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FFOLLOW_COLLECTION",UNFOLLOW_COLLECTION:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FUNFOLLOW_COLLECTION",DELELTE_COLLECTION:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FDELELTE_COLLECTION",ADD_COLLECTION:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FADD_COLLECTION",EDIT_COLLECTION:"@\u002Fview\u002Fuser\u002FdetailList\u002FcollectionList\u002FEDIT_COLLECTION"}},followerList:{list:[],cursor:f,hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowerList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowerList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowerList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowerList\u002FRESET"}},followingList:{list:[],cursor:f,hasMore:a,skeleton:a,loading:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowingList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowingList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowingList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowingList\u002FRESET"}},followingTeamsList:{list:[],cursor:f,hasMore:a,skeleton:a,loading:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowingTeamsList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowingTeamsList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowingTeamsList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FfollowingTeamsList\u002FRESET"}},activityList:{list:[],cursor:f,hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FactivityList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FactivityList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FactivityList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FactivityList\u002FRESET"}},bookList:{list:[],cursor:f,skeleton:a,hasMore:a,loading:a,type:"wrote",actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FbookList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FbookList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FbookList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FbookList\u002FRESET"}},pinList:{list:[],hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FpinList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FpinList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FpinList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FpinList\u002FRESET"}},courseList:{list:[],hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FcourseList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FcourseList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FcourseList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FcourseList\u002FRESET"}},pinPraisedList:{list:[],cursor:f,hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FpinPraisedList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FpinPraisedList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FpinPraisedList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FpinPraisedList\u002FRESET"}},eventList:{list:[],cursor:f,hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FeventList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FeventList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FeventList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FeventList\u002FRESET"}},selfColumnList:{list:[],hasMore:a,skeleton:a,loading:a,cursor:f,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnList\u002FRESET"}},columnFollowedList:{list:[],hasMore:a,skeleton:a,loading:a,cursor:f,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnFollowedList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnFollowedList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnFollowedList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnFollowedList\u002FRESET",FILTER:"@\u002Fview\u002Fuser\u002FdetailList\u002FcolumnFollowedList\u002FFILTER"}},realtimes:{list:[],cursor:f,hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimes\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimes\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimes\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimes\u002FRESET",DELETE:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimes\u002FDELETE"}},realtimeliked:{list:[],cursor:f,hasMore:a,loading:a,skeleton:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimeliked\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimeliked\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimeliked\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimeliked\u002FRESET",DELETE:"@\u002Fview\u002Fuser\u002FdetailList\u002Frealtimeliked\u002FDELETE"}},robotList:{list:[],cursor:f,type:u,hasMore:a,skeleton:a,loading:a,actionType:{FETCH:"@\u002Fview\u002Fuser\u002FdetailList\u002FrobotList\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fuser\u002FdetailList\u002FrobotList\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fuser\u002FdetailList\u002FrobotList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fuser\u002FdetailList\u002FrobotList\u002FRESET"}}}},tag:{tag:{},actionType:{FETCH:"@\u002Fview\u002Ftag\u002FFETCH",FETCH_LIST:"@\u002Fview\u002Ftag\u002FFETCH_LIST",RESET:"@\u002Fview\u002Ftag\u002FRESET"},list:{list:[],cursor:f,loading:a,skeleton:a,hasMore:a,actionType:{UPDATE_STATE:"@\u002Fview\u002Ftag\u002Flist\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Ftag\u002Flist\u002FFETCH_MORE",FETCH:"@\u002Fview\u002Ftag\u002Flist\u002FFETCH",RESET:"@\u002Fview\u002Ftag\u002Flist\u002FRESET"}}},notification:{user:{actionType:{RESET:"@\u002Fview\u002Fnotification\u002Fuser\u002FRESET"},listState:{list:[],cursor:f,hasMore:a,isLoading:a,messageType:q,msgTotal:b,msgSubMap:{"1":b,"2":b,"3":b,"4":b,"7":b}},list:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Fnotification\u002Fuser\u002Flist\u002FUPDATE",FETCH:"@\u002Fview\u002Fnotification\u002Fuser\u002Flist\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Fnotification\u002Fuser\u002Flist\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Fnotification\u002Fuser\u002Flist\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fnotification\u002Fuser\u002Flist\u002FRESET"}}},system:{actionType:{RESET:"@\u002Fview\u002Fnotification\u002Fsystem\u002FRESET"},list:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Fnotification\u002Fsystem\u002Flist\u002FUPDATE",FETCH:"@\u002Fview\u002Fnotification\u002Fsystem\u002Flist\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Fnotification\u002Fsystem\u002Flist\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Fnotification\u002Fsystem\u002Flist\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fnotification\u002Fsystem\u002Flist\u002FRESET"}}}},column:{serverRenderList:a,column:{id:k},entry:{id:k,screenshot:l,liked:a,article_id:k,article_info:{article_id:k,user_id:v,category_id:"6809637767543259144",tag_ids:[6809640407484334000,6809640543006491000],visible_level:b,link_url:e,cover_image:"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002Fcb8fe2f21686416fab7a2ac94cfea6e2~tplv-k3u1fbpfcp-zoom-1.image",is_gfw:b,title:w,brief_content:x,is_english:b,is_original:g,user_index:b,original_type:b,original_author:e,content:y,ctime:"1600038282",mtime:"1600733841",rtime:"1600041827",draft_id:z,view_count:A,collect_count:B,digg_count:r,comment_count:C,hot_index:16477,is_hot:b,rank_index:.01961961,status:s,verify_status:g,audit_status:s,mark_content:e,display_count:b,is_markdown:g,app_html_content:e,version:g,web_html_content:"\u003Cstyle\u003E.markdown-body{word-break:break-word;line-height:1.75;font-weight:400;font-size:16px;overflow-x:hidden;color:#252933}.markdown-body h1,.markdown-body h2,.markdown-body h3,.markdown-body h4,.markdown-body h5,.markdown-body h6{line-height:1.5;margin-top:35px;margin-bottom:10px;padding-bottom:5px}.markdown-body h1{font-size:24px;line-height:38px;margin-bottom:5px}.markdown-body h2{font-size:22px;line-height:34px;padding-bottom:12px;border-bottom:1px solid #ececec}.markdown-body h3{font-size:20px;line-height:28px}.markdown-body h4{font-size:18px;line-height:26px}.markdown-body h5{font-size:17px;line-height:24px}.markdown-body h6{font-size:16px;line-height:24px}.markdown-body p{line-height:inherit;margin-top:22px;margin-bottom:22px}.markdown-body img{max-width:100%}.markdown-body hr{border:none;border-top:1px solid #ddd;margin-top:32px;margin-bottom:32px}.markdown-body code{word-break:break-word;border-radius:2px;overflow-x:auto;background-color:#fff5f5;color:#ff502c;font-size:.87em;padding:.065em .4em}.markdown-body code,.markdown-body pre{font-family:Menlo,Monaco,Consolas,Courier New,monospace}.markdown-body pre{overflow:auto;position:relative;line-height:1.75}.markdown-body pre\u003Ecode{font-size:12px;padding:15px 12px;margin:0;word-break:normal;display:block;overflow-x:auto;color:#333;background:#f8f8f8}.markdown-body a{text-decoration:none;color:#0269c8;border-bottom:1px solid #d1e9ff}.markdown-body a:active,.markdown-body a:hover{color:#275b8c}.markdown-body table{display:inline-block!important;font-size:12px;width:auto;max-width:100%;overflow:auto;border:1px solid #f6f6f6}.markdown-body thead{background:#f6f6f6;color:#000;text-align:left}.markdown-body tr:nth-child(2n){background-color:#fcfcfc}.markdown-body td,.markdown-body th{padding:12px 7px;line-height:24px}.markdown-body td{min-width:120px}.markdown-body blockquote{color:#666;padding:1px 23px;margin:22px 0;border-left:4px solid #cbcbcb;background-color:#f8f8f8}.markdown-body blockquote:after{display:block;content:\"\"}.markdown-body blockquote\u003Ep{margin:10px 0}.markdown-body ol,.markdown-body ul{padding-left:28px}.markdown-body ol li,.markdown-body ul li{margin-bottom:0;list-style:inherit}.markdown-body ol li .task-list-item,.markdown-body ul li .task-list-item{list-style:none}.markdown-body ol li .task-list-item ol,.markdown-body ol li .task-list-item ul,.markdown-body ul li .task-list-item ol,.markdown-body ul li .task-list-item ul{margin-top:0}.markdown-body ol ol,.markdown-body ol ul,.markdown-body ul ol,.markdown-body ul ul{margin-top:3px}.markdown-body ol li{padding-left:6px}.markdown-body .contains-task-list{padding-left:0}.markdown-body .task-list-item{list-style:none}@media (max-width:720px){.markdown-body h1{font-size:24px}.markdown-body h2{font-size:20px}.markdown-body h3{font-size:18px}}\u003C\u002Fstyle\u003E\u003Cstyle data-highlight data-highlight-key=\"juejin\"\u003E.markdown-body pre,.markdown-body pre\u003Ecode.hljs{color:#333;background:#f8f8f8}.hljs-comment,.hljs-quote{color:#998;font-style:italic}.hljs-keyword,.hljs-selector-tag,.hljs-subst{color:#333;font-weight:700}.hljs-literal,.hljs-number,.hljs-tag .hljs-attr,.hljs-template-variable,.hljs-variable{color:teal}.hljs-doctag,.hljs-string{color:#d14}.hljs-section,.hljs-selector-id,.hljs-title{color:#900;font-weight:700}.hljs-subst{font-weight:400}.hljs-class .hljs-title,.hljs-type{color:#458;font-weight:700}.hljs-attribute,.hljs-name,.hljs-tag{color:navy;font-weight:400}.hljs-link,.hljs-regexp{color:#009926}.hljs-bullet,.hljs-symbol{color:#990073}.hljs-built_in,.hljs-builtin-name{color:#0086b3}.hljs-meta{color:#999;font-weight:700}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}\u003C\u002Fstyle\u003E\u003Cp\u003E阿宝哥第一次使用 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2F\" target=\"_blank\" title=\"https:\u002F\u002Fwww.typescriptlang.org\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript\u003C\u002Fa\u003E 是在 Angular 2.x 项目中，那时候 TypeScript 还没有进入大众的视野。然而现在学习 TypeScript 的小伙伴越来越多了，本文阿宝哥将从 \u003Cstrong\u003E16\u003C\u002Fstrong\u003E 个方面入手，带你一步步学习 TypeScript，感兴趣的小伙伴不要错过。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp3-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002Fd88a00458ce14c73bd3114239f5cb7e2~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Ch3 data-id=\"heading-0\"\u003E一、TypeScript 是什么\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2F\" target=\"_blank\" title=\"https:\u002F\u002Fwww.typescriptlang.org\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript\u003C\u002Fa\u003E 是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。\u003C\u002Fp\u003E\n\u003Cp\u003ETypeScript 提供最新的和不断发展的 JavaScript 特性，包括那些来自 2015 年的 ECMAScript 和未来的提案中的特性，比如异步功能和 Decorators，以帮助建立健壮的组件。下图显示了 TypeScript 与 ES5、ES2015 和 ES2016 之间的关系：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002Fabcaa2a4d7b5416f95091b78492f8d6a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-1\"\u003E1.1 TypeScript 与 JavaScript 的区别\u003C\u002Fh4\u003E\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth align=\"center\"\u003ETypeScript\u003C\u002Fth\u003E\u003Cth align=\"center\"\u003EJavaScript\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\u003C\u002Fthead\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd align=\"center\"\u003EJavaScript 的超集用于解决大型项目的代码复杂性\u003C\u002Ftd\u003E\u003Ctd align=\"center\"\u003E一种脚本语言，用于创建动态网页\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd align=\"center\"\u003E可以在编译期间发现并纠正错误\u003C\u002Ftd\u003E\u003Ctd align=\"center\"\u003E作为一种解释型语言，只能在运行时发现错误\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd align=\"center\"\u003E强类型，支持静态和动态类型\u003C\u002Ftd\u003E\u003Ctd align=\"center\"\u003E弱类型，没有静态类型选项\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd align=\"center\"\u003E最终被编译成 JavaScript 代码，使浏览器可以理解\u003C\u002Ftd\u003E\u003Ctd align=\"center\"\u003E可以直接在浏览器中使用\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd align=\"center\"\u003E支持模块、泛型和接口\u003C\u002Ftd\u003E\u003Ctd align=\"center\"\u003E不支持模块，泛型或接口\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd align=\"center\"\u003E社区的支持仍在增长，而且还不是很大\u003C\u002Ftd\u003E\u003Ctd align=\"center\"\u003E大量的社区支持以及大量文档和解决问题的支持\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Ch4 data-id=\"heading-2\"\u003E1.2 获取 TypeScript\u003C\u002Fh4\u003E\n\u003Cp\u003E命令行的 TypeScript 编译器可以使用 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.npmjs.com%2F\" target=\"_blank\" title=\"https:\u002F\u002Fwww.npmjs.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003Enpm\u003C\u002Fa\u003E 包管理器来安装。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-3\"\u003E1.安装 TypeScript\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-shell\" lang=\"shell\"\u003E\u003Cspan class=\"hljs-meta prompt_\"\u003E$ \u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003Enpm install -g typescript\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-4\"\u003E2.验证 TypeScript\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-shell\" lang=\"shell\"\u003E\u003Cspan class=\"hljs-meta prompt_\"\u003E$ \u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003Etsc -v\u003C\u002Fspan\u003E \n\u003Cspan class=\"hljs-meta prompt_\"\u003E# \u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003EVersion 4.0.2\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-5\"\u003E3.编译 TypeScript 文件\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-shell\" lang=\"shell\"\u003E\u003Cspan class=\"hljs-meta prompt_\"\u003E$ \u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003Etsc helloworld.ts\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta prompt_\"\u003E# \u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003Ehelloworld.ts =\u003E helloworld.js\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E当然，对刚入门 TypeScript 的小伙伴来说，也可以不用安装 \u003Ccode\u003Etypescript\u003C\u002Fcode\u003E，而是直接使用线上的 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%2F\" target=\"_blank\" title=\"https:\u002F\u002Fwww.typescriptlang.org\u002Fplay\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript Playground\u003C\u002Fa\u003E 来学习新的语法或新特性。通过配置 \u003Cstrong\u003ETS Config\u003C\u002Fstrong\u003E 的 Target，可以设置不同的编译目标，从而编译生成不同的目标代码。\u003C\u002Fp\u003E\n\u003Cp\u003E下图示例中所设置的编译目标是 ES5：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp6-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F5db52f7a4d664d93a72a3da6e6a92ae0~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E（图片来源：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%25EF%25BC%2589\" target=\"_blank\" title=\"https:\u002F\u002Fwww.typescriptlang.org\u002Fplay%EF%BC%89\" ref=\"nofollow noopener noreferrer\"\u003Ewww.typescriptlang.org\u002Fplay）\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-6\"\u003E1.3 典型 TypeScript 工作流程\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002Fdea0cbad55b246a8a7e65aec57273ade~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E如你所见，在上图中包含 3 个 ts 文件：a.ts、b.ts 和 c.ts。这些文件将被 TypeScript 编译器，根据配置的编译选项编译成 3 个 js 文件，即 a.js、b.js 和 c.js。对于大多数使用 TypeScript 开发的 Web 项目，我们还会对编译生成的 js 文件进行打包处理，然后在进行部署。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-7\"\u003E1.4 TypeScript 初体验\u003C\u002Fh4\u003E\n\u003Cp\u003E新建一个 \u003Ccode\u003Ehello.ts\u003C\u002Fcode\u003E 文件，并输入以下内容：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Eperson: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'Hello, '\u003C\u002Fspan\u003E + person;\n}\n\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"TypeScript\"\u003C\u002Fspan\u003E));\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E然后执行 \u003Ccode\u003Etsc hello.ts\u003C\u002Fcode\u003E 命令，之后会生成一个编译好的文件 \u003Ccode\u003Ehello.js\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-javascript\" lang=\"javascript\"\u003E\u003Cspan class=\"hljs-meta\"\u003E\"use strict\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Eperson\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'Hello, '\u003C\u002Fspan\u003E + person;\n}\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"TypeScript\"\u003C\u002Fspan\u003E));\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E观察以上编译后的输出结果，我们发现 \u003Ccode\u003Eperson\u003C\u002Fcode\u003E 参数的类型信息在编译后被擦除了。TypeScript 只会在编译阶段对类型进行静态检查，如果发现有错误，编译时就会报错。而在运行时，编译生成的 JS 与普通的 JavaScript 文件一样，并不会进行类型检查。\u003C\u002Fp\u003E\n\u003Ch3 data-id=\"heading-8\"\u003E二、TypeScript 基础类型\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-9\"\u003E2.1 Boolean 类型\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EisDone\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eboolean\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ES5：var isDone = false;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-10\"\u003E2.2 Number 类型\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ecount\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E10\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ES5：var count = 10;\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-11\"\u003E2.3 String 类型\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"semliker\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ES5：var name = 'semlinker';\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-12\"\u003E2.4 Symbol 类型\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E sym = \u003Cspan class=\"hljs-title class_\"\u003ESymbol\u003C\u002Fspan\u003E();\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E obj = {\n  [sym]: \u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E,\n};\n\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(obj[sym]); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F semlinker \u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-13\"\u003E2.5 Array 类型\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Elist\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E[] = [\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E];\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ES5：var list = [1,2,3];\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Elist\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EArray\u003C\u002Fspan\u003E&#x3C;\u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003E = [\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E]; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Array&#x3C;number\u003E泛型语法\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ES5：var list = [1,2,3];\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-14\"\u003E2.6 Enum 类型\u003C\u002Fh4\u003E\n\u003Cp\u003E使用枚举我们可以定义一些带名字的常量。 使用枚举可以清晰地表达意图或创建一组有区别的用例。 TypeScript 支持数字的和基于字符串的枚举。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-15\"\u003E1.数字枚举\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eenum\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable constant_\"\u003ENORTH\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003ESOUTH\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EEAST\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EWEST\u003C\u002Fspan\u003E,\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Edir\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003ENORTH\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E默认情况下，NORTH 的初始值为 0，其余的成员会从 1 开始自动增长。换句话说，Direction.SOUTH 的值为 1，Direction.EAST 的值为 2，Direction.WEST 的值为 3。\u003C\u002Fp\u003E\n\u003Cp\u003E以上的枚举示例经编译后，对应的 ES5 代码如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-javascript\" lang=\"javascript\"\u003E\u003Cspan class=\"hljs-meta\"\u003E\"use strict\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E;\n(\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EDirection\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[(\u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"NORTH\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E)] = \u003Cspan class=\"hljs-string\"\u003E\"NORTH\"\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[(\u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"SOUTH\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E)] = \u003Cspan class=\"hljs-string\"\u003E\"SOUTH\"\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[(\u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"EAST\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E)] = \u003Cspan class=\"hljs-string\"\u003E\"EAST\"\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[(\u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"WEST\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E)] = \u003Cspan class=\"hljs-string\"\u003E\"WEST\"\u003C\u002Fspan\u003E;\n})(\u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E || (\u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E = {}));\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E dir = \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003ENORTH\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E当然我们也可以设置 NORTH 的初始值，比如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eenum\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable constant_\"\u003ENORTH\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003ESOUTH\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EEAST\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EWEST\u003C\u002Fspan\u003E,\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-16\"\u003E2.字符串枚举\u003C\u002Fh5\u003E\n\u003Cp\u003E在 TypeScript 2.4 版本，允许我们使用字符串枚举。在一个字符串枚举里，每个成员都必须用字符串字面量，或另外一个字符串枚举成员进行初始化。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eenum\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable constant_\"\u003ENORTH\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"NORTH\"\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003ESOUTH\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"SOUTH\"\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EEAST\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"EAST\"\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EWEST\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"WEST\"\u003C\u002Fspan\u003E,\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码对应的 ES5 代码如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-meta\"\u003E\"use strict\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E;\n(\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EDirection\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"NORTH\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"NORTH\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"SOUTH\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"SOUTH\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"EAST\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"EAST\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"WEST\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"WEST\"\u003C\u002Fspan\u003E;\n})(\u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E || (\u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E = {}));\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E通过观察数字枚举和字符串枚举的编译结果，我们可以知道数字枚举除了支持 \u003Cstrong\u003E从成员名称到成员值\u003C\u002Fstrong\u003E 的普通映射之外，它还支持 \u003Cstrong\u003E从成员值到成员名称\u003C\u002Fstrong\u003E 的反向映射：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eenum\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable constant_\"\u003ENORTH\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003ESOUTH\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EEAST\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EWEST\u003C\u002Fspan\u003E,\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E dirName = \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E]; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F NORTH\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E dirVal = \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"NORTH\"\u003C\u002Fspan\u003E]; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 0\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E另外，对于纯字符串枚举，我们不能省略任何初始化程序。而数字枚举如果没有显式设置值时，则会使用默认规则进行初始化。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-17\"\u003E3.常量枚举\u003C\u002Fh5\u003E\n\u003Cp\u003E除了数字枚举和字符串枚举之外，还有一种特殊的枚举 —— 常量枚举。它是使用 \u003Ccode\u003Econst\u003C\u002Fcode\u003E 关键字修饰的枚举，常量枚举会使用内联语法，不会为枚举类型编译生成任何 JavaScript。为了更好地理解这句话，我们来看一个具体的例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eenum\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable constant_\"\u003ENORTH\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003ESOUTH\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EEAST\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-variable constant_\"\u003EWEST\u003C\u002Fspan\u003E,\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Edir\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EDirection\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003ENORTH\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码对应的 ES5 代码如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-javascript\" lang=\"javascript\"\u003E\u003Cspan class=\"hljs-meta\"\u003E\"use strict\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E dir = \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E\u002F* NORTH *\u002F\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-18\"\u003E4.异构枚举\u003C\u002Fh5\u003E\n\u003Cp\u003E异构枚举的成员值是数字和字符串的混合：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eenum\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E {\n  A,\n  B,\n  C = \u003Cspan class=\"hljs-string\"\u003E\"C\"\u003C\u002Fspan\u003E,\n  D = \u003Cspan class=\"hljs-string\"\u003E\"D\"\u003C\u002Fspan\u003E,\n  E = \u003Cspan class=\"hljs-number\"\u003E8\u003C\u002Fspan\u003E,\n  F,\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码对于的 ES5 代码如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-meta\"\u003E\"use strict\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E;\n(\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003EEnum\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"A\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"A\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"B\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"B\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"C\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"C\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"D\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"D\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"E\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E8\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"E\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-string\"\u003E\"F\"\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E9\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-string\"\u003E\"F\"\u003C\u002Fspan\u003E;\n})(\u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E || (\u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E = {}));\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E通过观察上述生成的 ES5 代码，我们可以发现数字枚举相对字符串枚举多了 “反向映射”：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-javascript\" lang=\"javascript\"\u003E\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EA\u003C\u002Fspan\u003E) \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F输出：0\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-title class_\"\u003EEnum\u003C\u002Fspan\u003E[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E]) \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 输出：A\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-19\"\u003E2.7 Any 类型\u003C\u002Fh4\u003E\n\u003Cp\u003E在 TypeScript 中，任何类型都可以被归为 any 类型。这让 any 类型成为了类型系统的顶级类型（也被称作全局超级类型）。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EnotSure\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E666\u003C\u002Fspan\u003E;\nnotSure = \u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E;\nnotSure = \u003Cspan class=\"hljs-literal\"\u003Efalse\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003Eany\u003C\u002Fcode\u003E 类型本质上是类型系统的一个逃逸舱。作为开发者，这给了我们很大的自由：TypeScript 允许我们对 \u003Ccode\u003Eany\u003C\u002Fcode\u003E 类型的值执行任何操作，而无需事先执行任何形式的检查。比如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E;\n\nvalue.\u003Cspan class=\"hljs-property\"\u003Efoo\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Ebar\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue.\u003Cspan class=\"hljs-title function_\"\u003Etrim\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-title function_\"\u003Evalue\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Evalue\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E][\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在许多场景下，这太宽松了。使用 \u003Ccode\u003Eany\u003C\u002Fcode\u003E 类型，可以很容易地编写类型正确但在运行时有问题的代码。如果我们使用 \u003Ccode\u003Eany\u003C\u002Fcode\u003E 类型，就无法使用 TypeScript 提供的大量的保护机制。为了解决 \u003Ccode\u003Eany\u003C\u002Fcode\u003E 带来的问题，TypeScript 3.0 引入了 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 类型。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-20\"\u003E2.8 Unknown 类型\u003C\u002Fh4\u003E\n\u003Cp\u003E就像所有类型都可以赋值给 \u003Ccode\u003Eany\u003C\u002Fcode\u003E，所有类型也都可以赋值给 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E。这使得 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 成为 TypeScript 类型系统的另一种顶级类型（另一种是 \u003Ccode\u003Eany\u003C\u002Fcode\u003E）。下面我们来看一下 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 类型的使用示例：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eunknown\u003C\u002Fspan\u003E;\n\nvalue = \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = \u003Cspan class=\"hljs-number\"\u003E42\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = \u003Cspan class=\"hljs-string\"\u003E\"Hello World\"\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = []; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = {}; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = \u003Cspan class=\"hljs-title class_\"\u003EMath\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Erandom\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ETypeError\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\nvalue = \u003Cspan class=\"hljs-title class_\"\u003ESymbol\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"type\"\u003C\u002Fspan\u003E); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E对 \u003Ccode\u003Evalue\u003C\u002Fcode\u003E 变量的所有赋值都被认为是类型正确的。但是，当我们尝试将类型为 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 的值赋值给其他类型的变量时会发生什么？\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eunknown\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue1\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eunknown\u003C\u002Fspan\u003E = value; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue2\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E = value; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue3\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eboolean\u003C\u002Fspan\u003E = value; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue4\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E = value; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue5\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E = value; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue6\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eobject\u003C\u002Fspan\u003E = value; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue7\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E[] = value; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue8\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EFunction\u003C\u002Fspan\u003E = value; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 类型只能被赋值给 \u003Ccode\u003Eany\u003C\u002Fcode\u003E 类型和 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 类型本身。直观地说，这是有道理的：只有能够保存任意类型值的容器才能保存 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 类型的值。毕竟我们不知道变量 \u003Ccode\u003Evalue\u003C\u002Fcode\u003E 中存储了什么类型的值。\u003C\u002Fp\u003E\n\u003Cp\u003E现在让我们看看当我们尝试对类型为 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 的值执行操作时会发生什么。以下是我们在之前 \u003Ccode\u003Eany\u003C\u002Fcode\u003E 章节看过的相同操作：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Evalue\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eunknown\u003C\u002Fspan\u003E;\n\nvalue.\u003Cspan class=\"hljs-property\"\u003Efoo\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Ebar\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\nvalue.\u003Cspan class=\"hljs-title function_\"\u003Etrim\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-title function_\"\u003Evalue\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Evalue\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\nvalue[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E][\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E将 \u003Ccode\u003Evalue\u003C\u002Fcode\u003E 变量类型设置为 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 后，这些操作都不再被认为是类型正确的。通过将 \u003Ccode\u003Eany\u003C\u002Fcode\u003E 类型改变为 \u003Ccode\u003Eunknown\u003C\u002Fcode\u003E 类型，我们已将允许所有更改的默认设置，更改为禁止任何更改。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-21\"\u003E2.9 Tuple 类型\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Cstrong\u003E众所周知，数组一般由同种类型的值组成，但有时我们需要在单个变量中存储不同类型的值，这时候我们就可以使用元组\u003C\u002Fstrong\u003E。在 JavaScript 中是没有元组的，元组是 TypeScript 中特有的类型，其工作方式类似于数组。\u003C\u002Fp\u003E\n\u003Cp\u003E元组可用于定义具有有限数量的未命名属性的类型。每个属性都有一个关联的类型。使用元组时，必须提供每个属性的值。为了更直观地理解元组的概念，我们来看一个具体的例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EtupleType\u003C\u002Fspan\u003E: [\u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-built_in\"\u003Eboolean\u003C\u002Fspan\u003E];\ntupleType = [\u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E];\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在上面代码中，我们定义了一个名为 \u003Ccode\u003EtupleType\u003C\u002Fcode\u003E 的变量，它的类型是一个类型数组 \u003Ccode\u003E[string, boolean]\u003C\u002Fcode\u003E，然后我们按照正确的类型依次初始化 tupleType 变量。与数组一样，我们可以通过下标来访问元组中的元素：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(tupleType[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E]); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F semlinker\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(tupleType[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F true\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在元组初始化的时候，如果出现类型不匹配的话，比如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003EtupleType = [\u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E];\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E此时，TypeScript 编译器会提示以下错误信息：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-python\" lang=\"python\"\u003E[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E]: \u003Cspan class=\"hljs-type\"\u003EType\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'true'\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eis\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enot\u003C\u002Fspan\u003E assignable to \u003Cspan class=\"hljs-built_in\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'string'\u003C\u002Fspan\u003E.\n[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]: \u003Cspan class=\"hljs-type\"\u003EType\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'string'\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eis\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enot\u003C\u002Fspan\u003E assignable to \u003Cspan class=\"hljs-built_in\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'boolean'\u003C\u002Fspan\u003E.\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E很明显是因为类型不匹配导致的。在元组初始化的时候，我们还必须提供每个属性的值，不然也会出现错误，比如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003EtupleType = [\u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E];\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E此时，TypeScript 编译器会提示以下错误信息：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-title class_\"\u003EProperty\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'1'\u003C\u002Fspan\u003E is missing \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'[string]'\u003C\u002Fspan\u003E but required \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'[string, boolean]'\u003C\u002Fspan\u003E.\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-22\"\u003E2.10 Void 类型\u003C\u002Fh4\u003E\n\u003Cp\u003E某种程度上来说，void 类型像是与 any 类型相反，它表示没有任何类型。当一个函数没有返回值时，你通常会见到其返回值类型是 void：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 声明函数返回值为void\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EwarnUser\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"This is my warning message\"\u003C\u002Fspan\u003E);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码编译生成的 ES5 代码如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-meta\"\u003E\"use strict\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EwarnUser\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"This is my warning message\"\u003C\u002Fspan\u003E);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E需要注意的是，声明一个 void 类型的变量没有什么作用，因为在严格模式下，它的值只能为 \u003Ccode\u003Eundefined\u003C\u002Fcode\u003E：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eunusable\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-23\"\u003E2.11 Null 和 Undefined 类型\u003C\u002Fh4\u003E\n\u003Cp\u003ETypeScript 里，\u003Ccode\u003Eundefined\u003C\u002Fcode\u003E 和 \u003Ccode\u003Enull\u003C\u002Fcode\u003E 两者有各自的类型分别为 \u003Ccode\u003Eundefined\u003C\u002Fcode\u003E 和 \u003Ccode\u003Enull\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eu\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003En\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-24\"\u003E2.12 object, Object 和 {} 类型\u003C\u002Fh4\u003E\n\u003Ch5 data-id=\"heading-25\"\u003E1.object 类型\u003C\u002Fh5\u003E\n\u003Cp\u003Eobject 类型是：TypeScript 2.2 引入的新类型，它用于表示非原始类型。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F node_modules\u002Ftypescript\u002Flib\u002Flib.es5.d.ts\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EObjectConstructor\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Ecreate\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Eo\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eobject\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E proto = {};\n\n\u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Ecreate\u003C\u002Fspan\u003E(proto);     \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Ecreate\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E);      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F OK\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Ecreate\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Ecreate\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E1337\u003C\u002Fspan\u003E);      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Ecreate\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E);      \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Ecreate\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"oops\"\u003C\u002Fspan\u003E);    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-26\"\u003E2.Object 类型\u003C\u002Fh5\u003E\n\u003Cp\u003EObject 类型：它是所有 Object 类的实例的类型，它由以下两个接口来定义：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EObject 接口定义了 Object.prototype 原型对象上的属性；\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F node_modules\u002Ftypescript\u002Flib\u002Flib.es5.d.ts\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Econstructor\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EFunction\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003EtoString\u003C\u002Fspan\u003E(): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003EtoLocaleString\u003C\u002Fspan\u003E(): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003EvalueOf\u003C\u002Fspan\u003E(): \u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003EhasOwnProperty\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ev\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EPropertyKey\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Eboolean\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003EisPrototypeOf\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ev\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Eboolean\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003EpropertyIsEnumerable\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ev\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EPropertyKey\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Eboolean\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cul\u003E\n\u003Cli\u003EObjectConstructor 接口定义了 Object 类的属性。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F node_modules\u002Ftypescript\u002Flib\u002Flib.es5.d.ts\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EObjectConstructor\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F** Invocation via `new` *\u002F\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-title function_\"\u003Enew\u003C\u002Fspan\u003E(value?: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F** Invocation via function calls *\u002F\u003C\u002Fspan\u003E\n  (value?: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-keyword\"\u003Ereadonly\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eprototype\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003EgetPrototypeOf\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Eo\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ···\u003C\u002Fspan\u003E\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Edeclare\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EObjectConstructor\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003EObject 类的所有实例都继承了 Object 接口中的所有属性。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-27\"\u003E3.{} 类型\u003C\u002Fh5\u003E\n\u003Cp\u003E{} 类型描述了一个没有成员的对象。当你试图访问这样一个对象的任意属性时，TypeScript 会产生一个编译时错误。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Type {}\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E obj = {};\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error: Property 'prop' does not exist on type '{}'.\u003C\u002Fspan\u003E\nobj.\u003Cspan class=\"hljs-property\"\u003Eprop\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E但是，你仍然可以使用在 Object 类型上定义的所有属性和方法，这些属性和方法可通过 JavaScript 的原型链隐式地使用：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Type {}\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E obj = {};\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F \"[object Object]\"\u003C\u002Fspan\u003E\nobj.\u003Cspan class=\"hljs-title function_\"\u003EtoString\u003C\u002Fspan\u003E();\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-28\"\u003E2.13 Never 类型\u003C\u002Fh4\u003E\n\u003Cp\u003E\u003Ccode\u003Enever\u003C\u002Fcode\u003E 类型表示的是那些永不存在的值的类型。 例如，\u003Ccode\u003Enever\u003C\u002Fcode\u003E 类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 返回never的函数必须存在无法达到的终点\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Eerror\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Emessage: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Enever\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EError\u003C\u002Fspan\u003E(message);\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EinfiniteLoop\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Enever\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ewhile\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E) {}\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在 TypeScript 中，可以利用 never 类型的特性来实现全面性检查，具体示例如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EFoo\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EcontrolFlowAnalysisWithNever\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Efoo: Foo\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E foo === \u003Cspan class=\"hljs-string\"\u003E\"string\"\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 这里 foo 被收窄为 string 类型\u003C\u002Fspan\u003E\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E foo === \u003Cspan class=\"hljs-string\"\u003E\"number\"\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 这里 foo 被收窄为 number 类型\u003C\u002Fspan\u003E\n  } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F foo 在这里是 never\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Echeck\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enever\u003C\u002Fspan\u003E = foo;\n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E注意在 else 分支里面，我们把收窄为 never 的 foo 赋值给一个显示声明的 never 变量。如果一切逻辑正确，那么这里应该能够编译通过。但是假如后来有一天你的同事修改了 Foo 的类型：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EFoo\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Eboolean\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E然而他忘记同时修改 \u003Ccode\u003EcontrolFlowAnalysisWithNever\u003C\u002Fcode\u003E 方法中的控制流程，这时候 else 分支的 foo 类型会被收窄为 \u003Ccode\u003Eboolean\u003C\u002Fcode\u003E 类型，导致无法赋值给 never 类型，这时就会产生一个编译错误。通过这个方式，我们可以确保\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Ccode\u003EcontrolFlowAnalysisWithNever\u003C\u002Fcode\u003E 方法总是穷尽了 Foo 的所有可能类型。 通过这个示例，我们可以得出一个结论：\u003Cstrong\u003E使用 never 避免出现新增了联合类型没有对应的实现，目的就是写出类型绝对安全的代码。\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ch3 data-id=\"heading-29\"\u003E三、TypeScript 断言\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-30\"\u003E3.1 类型断言\u003C\u002Fh4\u003E\n\u003Cp\u003E有时候你会遇到这样的情况，你会比 TypeScript 更了解某个值的详细信息。通常这会发生在你清楚地知道一个实体具有比它现有类型更确切的类型。\u003C\u002Fp\u003E\n\u003Cp\u003E通过类型断言这种方式可以告诉编译器，“相信我，我知道自己在干什么”。类型断言好比其他语言里的类型转换，但是不进行特殊的数据检查和解构。它没有运行时的影响，只是在编译阶段起作用。\u003C\u002Fp\u003E\n\u003Cp\u003E类型断言有两种形式：\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-31\"\u003E1.“尖括号” 语法\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EsomeValue\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"this is a string\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EstrLength\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E = (&#x3C;\u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003EsomeValue).\u003Cspan class=\"hljs-property\"\u003Elength\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-32\"\u003E2.as 语法\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EsomeValue\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"this is a string\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EstrLength\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E = (someValue \u003Cspan class=\"hljs-keyword\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E).\u003Cspan class=\"hljs-property\"\u003Elength\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-33\"\u003E3.2 非空断言\u003C\u002Fh4\u003E\n\u003Cp\u003E在上下文中当类型检查器无法断定类型时，一个新的后缀表达式操作符 \u003Ccode\u003E!\u003C\u002Fcode\u003E 可以用于断言操作对象是非 null 和非 undefined 类型。\u003Cstrong\u003E具体而言，x! 将从 x 值域中排除 null 和 undefined 。\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E那么非空断言操作符到底有什么用呢？下面我们先来看一下非空断言操作符的一些使用场景。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-34\"\u003E1.忽略 undefined 和 null 类型\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EmyFunc\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EmaybeString: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-literal\"\u003Enull\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Type 'string | null | undefined' is not assignable to type 'string'.\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Type 'undefined' is not assignable to type 'string'. \u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EonlyString\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E = maybeString; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EignoreUndefinedAndNull\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E = maybeString!; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Ok\u003C\u002Fspan\u003E\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-35\"\u003E2.调用函数时忽略 undefined 类型\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ENumGenerator\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-function\"\u003E() =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EmyFunc\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EnumGenerator: NumGenerator | \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Object is possibly 'undefined'.(2532)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Cannot invoke an object which is possibly 'undefined'.(2722)\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E num1 = \u003Cspan class=\"hljs-title function_\"\u003EnumGenerator\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E num2 = numGenerator!(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002FOK\u003C\u002Fspan\u003E\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E因为 \u003Ccode\u003E!\u003C\u002Fcode\u003E 非空断言操作符会从编译生成的 JavaScript 代码中移除，所以在实际使用的过程中，要特别注意。比如下面这个例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ea\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eb\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E = a!;\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(b); \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上 TS 代码会编译生成以下 ES5 代码：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-javascript\" lang=\"javascript\"\u003E\u003Cspan class=\"hljs-meta\"\u003E\"use strict\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E a = \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E b = a;\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(b);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E虽然在 TS 代码中，我们使用了非空断言，使得 \u003Ccode\u003Econst b: number = a!;\u003C\u002Fcode\u003E 语句可以通过 TypeScript 类型检查器的检查。但在生成的 ES5 代码中，\u003Ccode\u003E!\u003C\u002Fcode\u003E 非空断言操作符被移除了，所以在浏览器中执行以上代码，在控制台会输出 \u003Ccode\u003Eundefined\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-36\"\u003E3.3 确定赋值断言\u003C\u002Fh4\u003E\n\u003Cp\u003E在 TypeScript 2.7 版本中引入了确定赋值断言，即允许在实例属性和变量声明后面放置一个 \u003Ccode\u003E!\u003C\u002Fcode\u003E 号，从而告诉 TypeScript 该属性会被明确地赋值。为了更好地理解它的作用，我们来看个具体的例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-title function_\"\u003Einitialize\u003C\u002Fspan\u003E();\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Variable 'x' is used before being assigned.(2454)\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E * x); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Einitialize\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n  x = \u003Cspan class=\"hljs-number\"\u003E10\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E很明显该异常信息是说变量 x 在赋值前被使用了，要解决该问题，我们可以使用确定赋值断言：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E x!: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-title function_\"\u003Einitialize\u003C\u002Fspan\u003E();\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E * x); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Ok\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Einitialize\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n  x = \u003Cspan class=\"hljs-number\"\u003E10\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E通过 \u003Ccode\u003Elet x!: number;\u003C\u002Fcode\u003E 确定赋值断言，TypeScript 编译器就会知道该属性会被明确地赋值。\u003C\u002Fp\u003E\n\u003Ch3 data-id=\"heading-37\"\u003E四、类型守卫\u003C\u002Fh3\u003E\n\u003Cp\u003E\u003Cstrong\u003E类型保护是可执行运行时检查的一种表达式，用于确保该类型在一定的范围内。\u003C\u002Fstrong\u003E 换句话说，类型保护可以保证一个字符串是一个字符串，尽管它的值也可以是一个数值。类型保护与特性检测并不是完全不同，其主要思想是尝试检测属性、方法或原型，以确定如何处理值。目前主要有四种的方式来实现类型保护：\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-38\"\u003E4.1 in 关键字\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EAdmin\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Eprivileges\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E[];\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EEmployee\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003EstartDate\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EDate\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EUnknownEmployee\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EEmployee\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-title class_\"\u003EAdmin\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EprintEmployeeInformation\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Eemp: UnknownEmployee\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Name: \"\u003C\u002Fspan\u003E + emp.\u003Cspan class=\"hljs-property\"\u003Ename\u003C\u002Fspan\u003E);\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-string\"\u003E\"privileges\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E emp) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Privileges: \"\u003C\u002Fspan\u003E + emp.\u003Cspan class=\"hljs-property\"\u003Eprivileges\u003C\u002Fspan\u003E);\n  }\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-string\"\u003E\"startDate\"\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E emp) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Start Date: \"\u003C\u002Fspan\u003E + emp.\u003Cspan class=\"hljs-property\"\u003EstartDate\u003C\u002Fspan\u003E);\n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-39\"\u003E4.2 typeof 关键字\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EpadLeft\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Evalue: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, padding: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E padding === \u003Cspan class=\"hljs-string\"\u003E\"number\"\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EArray\u003C\u002Fspan\u003E(padding + \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E).\u003Cspan class=\"hljs-title function_\"\u003Ejoin\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\" \"\u003C\u002Fspan\u003E) + value;\n  }\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E padding === \u003Cspan class=\"hljs-string\"\u003E\"string\"\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E padding + value;\n  }\n  \u003Cspan class=\"hljs-keyword\"\u003Ethrow\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EError\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Expected string or number, got '\u003Cspan class=\"hljs-subst\"\u003E${padding}\u003C\u002Fspan\u003E'.`\u003C\u002Fspan\u003E);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Ccode\u003Etypeof\u003C\u002Fcode\u003E 类型保护只支持两种形式：\u003Ccode\u003Etypeof v === \"typename\"\u003C\u002Fcode\u003E 和 \u003Ccode\u003Etypeof v !== typename\u003C\u002Fcode\u003E，\u003Ccode\u003E\"typename\"\u003C\u002Fcode\u003E 必须是 \u003Ccode\u003E\"number\"\u003C\u002Fcode\u003E， \u003Ccode\u003E\"string\"\u003C\u002Fcode\u003E， \u003Ccode\u003E\"boolean\"\u003C\u002Fcode\u003E 或 \u003Ccode\u003E\"symbol\"\u003C\u002Fcode\u003E。 但是 TypeScript 并不会阻止你与其它字符串比较，语言不会把那些表达式识别为类型保护。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-40\"\u003E4.3 instanceof 关键字\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPadder\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003EgetPaddingString\u003C\u002Fspan\u003E(): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESpaceRepeatingPadder\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eimplements\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPadder\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eprivate\u003C\u002Fspan\u003E numSpaces: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {}\n  \u003Cspan class=\"hljs-title function_\"\u003EgetPaddingString\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EArray\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EnumSpaces\u003C\u002Fspan\u003E + \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E).\u003Cspan class=\"hljs-title function_\"\u003Ejoin\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\" \"\u003C\u002Fspan\u003E);\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EStringPadder\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eimplements\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPadder\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eprivate\u003C\u002Fspan\u003E value: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {}\n  \u003Cspan class=\"hljs-title function_\"\u003EgetPaddingString\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Evalue\u003C\u002Fspan\u003E;\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Epadder\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EPadder\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESpaceRepeatingPadder\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E6\u003C\u002Fspan\u003E);\n\n\u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (padder \u003Cspan class=\"hljs-keyword\"\u003Einstanceof\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESpaceRepeatingPadder\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F padder的类型收窄为 'SpaceRepeatingPadder'\u003C\u002Fspan\u003E\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-41\"\u003E4.4 自定义类型保护的类型谓词\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EisNumber\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ex: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): x is \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E x === \u003Cspan class=\"hljs-string\"\u003E\"number\"\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EisString\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ex: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): x is \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E x === \u003Cspan class=\"hljs-string\"\u003E\"string\"\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-42\"\u003E五、联合类型和类型别名\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-43\"\u003E5.1 联合类型\u003C\u002Fh4\u003E\n\u003Cp\u003E联合类型通常与 \u003Ccode\u003Enull\u003C\u002Fcode\u003E 或 \u003Ccode\u003Eundefined\u003C\u002Fcode\u003E 一起使用：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EsayHello\u003C\u002Fspan\u003E = (\u003Cspan class=\"hljs-params\"\u003Ename: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) =\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F* ... *\u002F\u003C\u002Fspan\u003E\n};\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E例如，这里 \u003Ccode\u003Ename\u003C\u002Fcode\u003E 的类型是 \u003Ccode\u003Estring | undefined\u003C\u002Fcode\u003E 意味着可以将 \u003Ccode\u003Estring\u003C\u002Fcode\u003E 或 \u003Ccode\u003Eundefined\u003C\u002Fcode\u003E 的值传递给\u003Ccode\u003EsayHello\u003C\u002Fcode\u003E 函数。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-title function_\"\u003EsayHello\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E);\n\u003Cspan class=\"hljs-title function_\"\u003EsayHello\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E通过这个示例，你可以凭直觉知道类型 A 和类型 B 联合后的类型是同时接受 A 和 B 值的类型。此外，对于联合类型来说，你可能会遇到以下的用法：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Enum\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EEventNames\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E'click'\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-string\"\u003E'scroll'\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-string\"\u003E'mousemove'\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上示例中的 \u003Ccode\u003E1\u003C\u002Fcode\u003E、\u003Ccode\u003E2\u003C\u002Fcode\u003E 或 \u003Ccode\u003E'click'\u003C\u002Fcode\u003E 被称为字面量类型，用来约束取值只能是某几个值中的一个。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-44\"\u003E5.2 可辨识联合\u003C\u002Fh4\u003E\n\u003Cp\u003ETypeScript 可辨识联合（Discriminated Unions）类型，也称为代数数据类型或标签联合类型。\u003Cstrong\u003E它包含 3 个要点：可辨识、联合类型和类型守卫。\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E这种类型的本质是结合联合类型和字面量类型的一种类型保护方法。\u003Cstrong\u003E如果一个类型是多个类型的联合类型，且多个类型含有一个公共属性，那么就可以利用这个公共属性，来创建不同的类型保护区块。\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-45\"\u003E1.可辨识\u003C\u002Fh5\u003E\n\u003Cp\u003E可辨识要求联合类型中的每个元素都含有一个单例类型属性，比如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eenum\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ECarTransmission\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title class_\"\u003EAutomatic\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E200\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-title class_\"\u003EManual\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E300\u003C\u002Fspan\u003E\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EMotorcycle\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EvType\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"motorcycle\"\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F discriminant\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Emake\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F year\u003C\u002Fspan\u003E\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ECar\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EvType\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"car\"\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F discriminant\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Etransmission\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003ECarTransmission\u003C\u002Fspan\u003E\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ETruck\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EvType\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"truck\"\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F discriminant\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Ecapacity\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F in tons\u003C\u002Fspan\u003E\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在上述代码中，我们分别定义了 \u003Ccode\u003EMotorcycle\u003C\u002Fcode\u003E、 \u003Ccode\u003ECar\u003C\u002Fcode\u003E 和 \u003Ccode\u003ETruck\u003C\u002Fcode\u003E 三个接口，在这些接口中都包含一个 \u003Ccode\u003EvType\u003C\u002Fcode\u003E 属性，该属性被称为可辨识的属性，而其它的属性只跟特性的接口相关。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-46\"\u003E2.联合类型\u003C\u002Fh5\u003E\n\u003Cp\u003E基于前面定义了三个接口，我们可以创建一个 \u003Ccode\u003EVehicle\u003C\u002Fcode\u003E 联合类型：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EVehicle\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EMotorcycle\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-title class_\"\u003ECar\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-title class_\"\u003ETruck\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E现在我们就可以开始使用 \u003Ccode\u003EVehicle\u003C\u002Fcode\u003E 联合类型，对于 \u003Ccode\u003EVehicle\u003C\u002Fcode\u003E 类型的变量，它可以表示不同类型的车辆。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-47\"\u003E3.类型守卫\u003C\u002Fh5\u003E\n\u003Cp\u003E下面我们来定义一个 \u003Ccode\u003EevaluatePrice\u003C\u002Fcode\u003E 方法，该方法用于根据车辆的类型、容量和评估因子来计算价格，具体实现如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable constant_\"\u003EEVALUATION_FACTOR\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EMath\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EPI\u003C\u002Fspan\u003E; \n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EevaluatePrice\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Evehicle: Vehicle\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E vehicle.\u003Cspan class=\"hljs-property\"\u003Ecapacity\u003C\u002Fspan\u003E * \u003Cspan class=\"hljs-variable constant_\"\u003EEVALUATION_FACTOR\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003EmyTruck\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003ETruck\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003EvType\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"truck\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ecapacity\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E9.5\u003C\u002Fspan\u003E };\nevaluatePrice(myTruck);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E对于以上代码，TypeScript 编译器将会提示以下错误信息：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-bash\" lang=\"bash\"\u003EProperty \u003Cspan class=\"hljs-string\"\u003E'capacity'\u003C\u002Fspan\u003E does not exist on \u003Cspan class=\"hljs-built_in\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'Vehicle'\u003C\u002Fspan\u003E.\nProperty \u003Cspan class=\"hljs-string\"\u003E'capacity'\u003C\u002Fspan\u003E does not exist on \u003Cspan class=\"hljs-built_in\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E'Motorcycle'\u003C\u002Fspan\u003E.\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E原因是在 Motorcycle 接口中，并不存在 \u003Ccode\u003Ecapacity\u003C\u002Fcode\u003E 属性，而对于 Car 接口来说，它也不存在 \u003Ccode\u003Ecapacity\u003C\u002Fcode\u003E 属性。那么，现在我们应该如何解决以上问题呢？这时，我们可以使用类型守卫。下面我们来重构一下前面定义的 \u003Ccode\u003EevaluatePrice\u003C\u002Fcode\u003E 方法，重构后的代码如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EevaluatePrice\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Evehicle: Vehicle\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Eswitch\u003C\u002Fspan\u003E(vehicle.\u003Cspan class=\"hljs-property\"\u003EvType\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"car\"\u003C\u002Fspan\u003E:\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E vehicle.\u003Cspan class=\"hljs-property\"\u003Etransmission\u003C\u002Fspan\u003E * \u003Cspan class=\"hljs-variable constant_\"\u003EEVALUATION_FACTOR\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-keyword\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"truck\"\u003C\u002Fspan\u003E:\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E vehicle.\u003Cspan class=\"hljs-property\"\u003Ecapacity\u003C\u002Fspan\u003E * \u003Cspan class=\"hljs-variable constant_\"\u003EEVALUATION_FACTOR\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-keyword\"\u003Ecase\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"motorcycle\"\u003C\u002Fspan\u003E:\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E vehicle.\u003Cspan class=\"hljs-property\"\u003Emake\u003C\u002Fspan\u003E * \u003Cspan class=\"hljs-variable constant_\"\u003EEVALUATION_FACTOR\u003C\u002Fspan\u003E;\n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在以上代码中，我们使用 \u003Ccode\u003Eswitch\u003C\u002Fcode\u003E 和 \u003Ccode\u003Ecase\u003C\u002Fcode\u003E 运算符来实现类型守卫，从而确保在 \u003Ccode\u003EevaluatePrice\u003C\u002Fcode\u003E 方法中，我们可以安全地访问 \u003Ccode\u003Evehicle\u003C\u002Fcode\u003E 对象中的所包含的属性，来正确的计算该车辆类型所对应的价格。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-48\"\u003E5.3 类型别名\u003C\u002Fh4\u003E\n\u003Cp\u003E类型别名用来给一个类型起个新名字。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EMessage\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E[];\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E = (\u003Cspan class=\"hljs-params\"\u003Emessage: Message\u003C\u002Fspan\u003E) =\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F ...\u003C\u002Fspan\u003E\n};\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-49\"\u003E六、交叉类型\u003C\u002Fh3\u003E\n\u003Cp\u003E在 TypeScript 中交叉类型是将多个类型合并为一个类型。通过 \u003Ccode\u003E&#x26;\u003C\u002Fcode\u003E 运算符可以将现有的多种类型叠加到一起成为一种类型，它包含了所需的所有类型的特性。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E &#x26; { \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Epoint\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E = {\n  \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在上面代码中我们先定义了 \u003Ccode\u003EPartialPointX\u003C\u002Fcode\u003E 类型，接着使用 \u003Ccode\u003E&#x26;\u003C\u002Fcode\u003E 运算符创建一个新的 \u003Ccode\u003EPoint\u003C\u002Fcode\u003E 类型，表示一个含有 x 和 y 坐标的点，然后定义了一个 \u003Ccode\u003EPoint\u003C\u002Fcode\u003E 类型的变量并初始化。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-50\"\u003E6.1 同名基础类型属性的合并\u003C\u002Fh4\u003E\n\u003Cp\u003E那么现在问题来了，假设在合并多个类型的过程中，刚好出现某些类型存在相同的成员，但对应的类型又不一致，比如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E X {\n  \u003Cspan class=\"hljs-attr\"\u003Ec\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Ed\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E Y {\n  \u003Cspan class=\"hljs-attr\"\u003Ec\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Ee\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable constant_\"\u003EXY\u003C\u002Fspan\u003E = X &#x26; Y;\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable constant_\"\u003EYX\u003C\u002Fspan\u003E = Y &#x26; X;\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ep\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-variable constant_\"\u003EXY\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eq\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-variable constant_\"\u003EYX\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在上面的代码中，接口 X  和接口 Y 都含有一个相同的成员 c，但它们的类型不一致。对于这种情况，此时 XY 类型或 YX 类型中成员 c 的类型是不是可以是 \u003Ccode\u003Estring\u003C\u002Fcode\u003E 或 \u003Ccode\u003Enumber\u003C\u002Fcode\u003E 类型呢？比如下面的例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003Ep = { \u003Cspan class=\"hljs-attr\"\u003Ec\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E6\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ed\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"d\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ee\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"e\"\u003C\u002Fspan\u003E }; \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F1bcfd462827046f1a4a5574de30780b2~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003Eq = { \u003Cspan class=\"hljs-attr\"\u003Ec\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"c\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ed\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"d\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ee\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"e\"\u003C\u002Fspan\u003E }; \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp9-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F1d4f87c84ea647308cac5393fdfa958a~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E为什么接口 X 和接口 Y 混入后，成员 c 的类型会变成 \u003Ccode\u003Enever\u003C\u002Fcode\u003E 呢？这是因为混入后成员 c 的类型为 \u003Ccode\u003Estring &#x26; number\u003C\u002Fcode\u003E，即成员 c 的类型既可以是 \u003Ccode\u003Estring\u003C\u002Fcode\u003E 类型又可以是 \u003Ccode\u003Enumber\u003C\u002Fcode\u003E 类型。很明显这种类型是不存在的，所以混入后成员 c 的类型为 \u003Ccode\u003Enever\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-51\"\u003E6.2 同名非基础类型属性的合并\u003C\u002Fh4\u003E\n\u003Cp\u003E在上面示例中，刚好接口 X 和接口 Y 中内部成员 c 的类型都是基本数据类型，那么如果是非基本数据类型的话，又会是什么情形。我们来看个具体的例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E D { \u003Cspan class=\"hljs-attr\"\u003Ed\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eboolean\u003C\u002Fspan\u003E; }\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E E { \u003Cspan class=\"hljs-attr\"\u003Ee\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E; }\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E F { \u003Cspan class=\"hljs-attr\"\u003Ef\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; }\n\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E A { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: D; }\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E B { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: E; }\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E C { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: F; }\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable constant_\"\u003EABC\u003C\u002Fspan\u003E = A &#x26; B &#x26; C;\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Eabc\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-variable constant_\"\u003EABC\u003C\u002Fspan\u003E = {\n  \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: {\n    \u003Cspan class=\"hljs-attr\"\u003Ed\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Ee\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'semlinker'\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Ef\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E666\u003C\u002Fspan\u003E\n  }\n};\n\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'abc:'\u003C\u002Fspan\u003E, abc);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码成功运行后，控制台会输出以下结果：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp9-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F9c7f386c9857412e8e464f13492d4068~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E由上图可知，在混入多个类型时，若存在相同的成员，且成员类型为非基本数据类型，那么是可以成功合并。\u003C\u002Fp\u003E\n\u003Ch3 data-id=\"heading-52\"\u003E七、TypeScript 函数\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-53\"\u003E7.1 TypeScript 函数与 JavaScript 函数的区别\u003C\u002Fh4\u003E\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable\u003E\u003Cthead\u003E\u003Ctr\u003E\u003Cth\u003ETypeScript\u003C\u002Fth\u003E\u003Cth\u003EJavaScript\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\u003C\u002Fthead\u003E\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E含有类型\u003C\u002Ftd\u003E\u003Ctd\u003E无类型\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E箭头函数\u003C\u002Ftd\u003E\u003Ctd\u003E箭头函数（ES2015）\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E函数类型\u003C\u002Ftd\u003E\u003Ctd\u003E无函数类型\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E必填和可选参数\u003C\u002Ftd\u003E\u003Ctd\u003E所有参数都是可选的\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E默认参数\u003C\u002Ftd\u003E\u003Ctd\u003E默认参数\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E剩余参数\u003C\u002Ftd\u003E\u003Ctd\u003E剩余参数\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003Ctr\u003E\u003Ctd\u003E函数重载\u003C\u002Ftd\u003E\u003Ctd\u003E无函数重载\u003C\u002Ftd\u003E\u003C\u002Ftr\u003E\u003C\u002Ftbody\u003E\u003C\u002Ftable\u003E\n\u003Ch4 data-id=\"heading-54\"\u003E7.2 箭头函数\u003C\u002Fh4\u003E\n\u003Ch5 data-id=\"heading-55\"\u003E1.常见语法\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003EmyBooks.\u003Cspan class=\"hljs-title function_\"\u003EforEach\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'reading'\u003C\u002Fspan\u003E));\n\nmyBooks.\u003Cspan class=\"hljs-title function_\"\u003EforEach\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-params\"\u003Etitle\u003C\u002Fspan\u003E =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(title));\n\nmyBooks.\u003Cspan class=\"hljs-title function_\"\u003EforEach\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Etitle, idx, arr\u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(idx + \u003Cspan class=\"hljs-string\"\u003E'-'\u003C\u002Fspan\u003E + title);\n);\n\nmyBooks.\u003Cspan class=\"hljs-title function_\"\u003EforEach\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Etitle, idx, arr\u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(idx + \u003Cspan class=\"hljs-string\"\u003E'-'\u003C\u002Fspan\u003E + title);\n});\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-56\"\u003E2.使用示例\u003C\u002Fh5\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 未使用箭头函数\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EBook\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E self = \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E;\n  self.\u003Cspan class=\"hljs-property\"\u003EpublishDate\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E2016\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-built_in\"\u003EsetInterval\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(self.\u003Cspan class=\"hljs-property\"\u003EpublishDate\u003C\u002Fspan\u003E);\n  }, \u003Cspan class=\"hljs-number\"\u003E1000\u003C\u002Fspan\u003E);\n}\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 使用箭头函数\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EBook\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EpublishDate\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E2016\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-built_in\"\u003EsetInterval\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-function\"\u003E() =\u003E\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EpublishDate\u003C\u002Fspan\u003E);\n  }, \u003Cspan class=\"hljs-number\"\u003E1000\u003C\u002Fspan\u003E);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-57\"\u003E7.3 参数类型和返回类型\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EcreateUserId\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ename: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, id: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E name + id;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-58\"\u003E7.4 函数类型\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EIdGenerator\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Echars: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, nums: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EcreateUserId\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ename: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, id: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E name + id;\n}\n\n\u003Cspan class=\"hljs-title class_\"\u003EIdGenerator\u003C\u002Fspan\u003E = createUserId;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-59\"\u003E7.5 可选参数及默认参数\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 可选参数\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EcreateUserId\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ename: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, id: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E, age?: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E name + id;\n}\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 默认参数\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EcreateUserId\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\n  name: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E,\n  id: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E,\n  age?: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\n\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E name + id;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在声明函数时，可以通过 \u003Ccode\u003E?\u003C\u002Fcode\u003E 号来定义可选参数，比如 \u003Ccode\u003Eage?: number\u003C\u002Fcode\u003E 这种形式。\u003Cstrong\u003E在实际使用时，需要注意的是可选参数要放在普通参数的后面，不然会导致编译错误\u003C\u002Fstrong\u003E。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-60\"\u003E7.6 剩余参数\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Epush\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Earray, ...items\u003C\u002Fspan\u003E) {\n  items.\u003Cspan class=\"hljs-title function_\"\u003EforEach\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Eitem\u003C\u002Fspan\u003E) {\n    array.\u003Cspan class=\"hljs-title function_\"\u003Epush\u003C\u002Fspan\u003E(item);\n  });\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E a = [];\n\u003Cspan class=\"hljs-title function_\"\u003Epush\u003C\u002Fspan\u003E(a, \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-61\"\u003E7.7 函数重载\u003C\u002Fh4\u003E\n\u003Cp\u003E函数重载或方法重载是使用相同名称和不同参数数量或类型创建多个方法的一种能力。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ea: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E, b: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ea: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, b: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ea: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, b: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ea: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E, b: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ea: Combinable, b: Combinable\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F type Combinable = string | number;\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E a === \u003Cspan class=\"hljs-string\"\u003E'string'\u003C\u002Fspan\u003E || \u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E b === \u003Cspan class=\"hljs-string\"\u003E'string'\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E a.\u003Cspan class=\"hljs-title function_\"\u003EtoString\u003C\u002Fspan\u003E() + b.\u003Cspan class=\"hljs-title function_\"\u003EtoString\u003C\u002Fspan\u003E();\n  }\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E a + b;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在以上代码中，我们为 add 函数提供了多个函数类型定义，从而实现函数的重载。在 TypeScript 中除了可以重载普通函数之外，我们还可以重载类中的成员方法。\u003C\u002Fp\u003E\n\u003Cp\u003E方法重载是指在同一个类中方法同名，参数不同（参数类型不同、参数个数不同或参数个数相同时参数的先后顺序不同），调用时根据实参的形式，选择与它匹配的方法执行操作的一种技术。所以类中成员方法满足重载的条件是：在同一个类中，方法名相同且参数列表不同。下面我们来举一个成员方法重载的例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ECalculator\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ea\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Eb\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ea\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Eb\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ea\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Eb\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ea\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Eb\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ea: Combinable, b: Combinable\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E a === \u003Cspan class=\"hljs-string\"\u003E'string'\u003C\u002Fspan\u003E || \u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E b === \u003Cspan class=\"hljs-string\"\u003E'string'\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E a.\u003Cspan class=\"hljs-title function_\"\u003EtoString\u003C\u002Fspan\u003E() + b.\u003Cspan class=\"hljs-title function_\"\u003EtoString\u003C\u002Fspan\u003E();\n  }\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E a + b;\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E calculator = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ECalculator\u003C\u002Fspan\u003E();\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E result = calculator.\u003Cspan class=\"hljs-title function_\"\u003Eadd\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E'Semlinker'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E' Kakuqo'\u003C\u002Fspan\u003E);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E这里需要注意的是，当 TypeScript 编译器处理函数重载时，它会查找重载列表，尝试使用第一个重载定义。 如果匹配的话就使用这个。 因此，在定义重载的时候，一定要把最精确的定义放在最前面。另外在 Calculator 类中，\u003Ccode\u003Eadd(a: Combinable, b: Combinable){ }\u003C\u002Fcode\u003E 并不是重载列表的一部分，因此对于 add 成员方法来说，我们只定义了四个重载方法。\u003C\u002Fp\u003E\n\u003Ch3 data-id=\"heading-62\"\u003E八、TypeScript 数组\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-63\"\u003E8.1 数组解构\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ez\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E five_array = [\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E,\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E,\u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E,\u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E,\u003Cspan class=\"hljs-number\"\u003E4\u003C\u002Fspan\u003E];\n[x,y,z] = five_array;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-64\"\u003E8.2 数组展开运算符\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E two_array = [\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E];\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E five_array = [...two_array, \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E4\u003C\u002Fspan\u003E];\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-65\"\u003E8.3 数组遍历\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ecolors\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E[] = [\u003Cspan class=\"hljs-string\"\u003E\"red\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E\"green\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E\"blue\"\u003C\u002Fspan\u003E];\n\u003Cspan class=\"hljs-keyword\"\u003Efor\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E i \u003Cspan class=\"hljs-keyword\"\u003Eof\u003C\u002Fspan\u003E colors) {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(i);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-66\"\u003E九、TypeScript 对象\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-67\"\u003E9.1 对象解构\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E person = {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Semlinker\"\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Egender\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Male\"\u003C\u002Fspan\u003E,\n};\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E { name, gender } = person;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-68\"\u003E9.2 对象展开运算符\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E person = {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Semlinker\"\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Egender\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Male\"\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Eaddress\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Xiamen\"\u003C\u002Fspan\u003E,\n};\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 组装对象\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E personWithAge = { ...person, \u003Cspan class=\"hljs-attr\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E33\u003C\u002Fspan\u003E };\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 获取除了某些项外的其它项\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E { name, ...rest } = person;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-69\"\u003E十、TypeScript 接口\u003C\u002Fh3\u003E\n\u003Cp\u003E在面向对象语言中，接口是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类去实现。\u003C\u002Fp\u003E\n\u003Cp\u003ETypeScript 中的接口是一个非常灵活的概念，除了可用于\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fts.xcatliu.com%2Fadvanced%2Fclass-and-interfaces.html%23%25E7%25B1%25BB%25E5%25AE%259E%25E7%258E%25B0%25E6%258E%25A5%25E5%258F%25A3\" target=\"_blank\" title=\"https:\u002F\u002Fts.xcatliu.com\u002Fadvanced\u002Fclass-and-interfaces.html#%E7%B1%BB%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3\" ref=\"nofollow noopener noreferrer\"\u003E对类的一部分行为进行抽象\u003C\u002Fa\u003E以外，也常用于对「对象的形状（Shape）」进行描述。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-70\"\u003E10.1 对象的形状\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Esemlinker\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E = {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E33\u003C\u002Fspan\u003E,\n};\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-71\"\u003E10.2 可选 | 只读属性\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereadonly\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  age?: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E只读属性用于限制只能在对象刚刚创建的时候修改其值。此外 TypeScript 还提供了 \u003Ccode\u003EReadonlyArray&#x3C;T\u003E\u003C\u002Fcode\u003E 类型，它与 \u003Ccode\u003EArray&#x3C;T\u003E\u003C\u002Fcode\u003E 相似，只是把所有可变方法去掉了，因此可以确保数组创建后再也不能被修改。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ea\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E[] = [\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E4\u003C\u002Fspan\u003E];\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ero\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EReadonlyArray\u003C\u002Fspan\u003E&#x3C;\u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003E = a;\nro[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E] = \u003Cspan class=\"hljs-number\"\u003E12\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F error!\u003C\u002Fspan\u003E\nro.\u003Cspan class=\"hljs-title function_\"\u003Epush\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E5\u003C\u002Fspan\u003E); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F error!\u003C\u002Fspan\u003E\nro.\u003Cspan class=\"hljs-property\"\u003Elength\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E100\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F error!\u003C\u002Fspan\u003E\na = ro; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F error!\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-72\"\u003E10.3 任意属性\u003C\u002Fh4\u003E\n\u003Cp\u003E有时候我们希望一个接口中除了包含必选和可选属性之外，还允许有其他的任意属性，这时我们可以使用 \u003Cstrong\u003E索引签名\u003C\u002Fstrong\u003E 的形式来满足上述要求。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  age?: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n  [\u003Cspan class=\"hljs-attr\"\u003EpropName\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E]: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E p1 = { \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E };\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E p2 = { \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"lolo\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E5\u003C\u002Fspan\u003E };\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E p3 = { \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"kakuqo\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Esex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-73\"\u003E10.4 接口与类型别名的区别\u003C\u002Fh4\u003E\n\u003Ch5 data-id=\"heading-74\"\u003E1.Objects\u002FFunctions\u003C\u002Fh5\u003E\n\u003Cp\u003E接口和类型别名都可以用来描述对象的形状或函数签名：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E接口\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESetPoint\u003C\u002Fspan\u003E {\n  (\u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003E类型别名\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E = {\n  \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n};\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESetPoint\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Ex: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E, y: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-75\"\u003E2.Other Types\u003C\u002Fh5\u003E\n\u003Cp\u003E与接口类型不一样，类型别名可以用于一些其他类型，比如原始类型、联合类型和元组：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F primitive\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EName\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F object\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointY\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F union\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPoint\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-title class_\"\u003EPartialPointY\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F tuple\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EData\u003C\u002Fspan\u003E = [\u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E];\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-76\"\u003E3.Extend\u003C\u002Fh5\u003E\n\u003Cp\u003E接口和类型别名都能够被扩展，但语法有所不同。此外，接口和类型别名不是互斥的。接口可以扩展类型别名，而反过来是不行的。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003EInterface extends interface\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; }\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eextends\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E { \n  \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; \n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003EType alias extends type alias\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E &#x26; { \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003EInterface extends type alias\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eextends\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; }\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003EType alias extends interface\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; }\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-title class_\"\u003EPartialPointX\u003C\u002Fspan\u003E &#x26; { \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-77\"\u003E4.Implements\u003C\u002Fh5\u003E\n\u003Cp\u003E类可以以相同的方式实现接口或类型别名，但类不能实现使用类型别名定义的联合类型：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESomePoint\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eimplements\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E {\n  x = \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E;\n  y = \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint2\u003C\u002Fspan\u003E = {\n  \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n};\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESomePoint2\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eimplements\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint2\u003C\u002Fspan\u003E {\n  x = \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E;\n  y = \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPoint\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; } | { \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; };\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F A class can only implement an object type or \u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F intersection of object types with statically known members.\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESomePartialPoint\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eimplements\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartialPoint\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n  x = \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E;\n  y = \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-78\"\u003E5.Declaration merging\u003C\u002Fh5\u003E\n\u003Cp\u003E与类型别名不同，接口可以定义多次，会被自动合并为单个接口。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; }\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E { \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E; }\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Epoint\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EPoint\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Ey\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E2\u003C\u002Fspan\u003E };\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-79\"\u003E十一、TypeScript 类\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-80\"\u003E11.1 类的属性与方法\u003C\u002Fh4\u003E\n\u003Cp\u003E在面向对象语言中，类是一种面向对象计算机编程语言的构造，是创建对象的蓝图，描述了所创建的对象共同的属性和方法。\u003C\u002Fp\u003E\n\u003Cp\u003E在 TypeScript 中，我们可以通过 \u003Ccode\u003EClass\u003C\u002Fcode\u003E 关键字来定义一个类：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 静态属性\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ecname\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"Greeter\"\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 成员属性\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003Egreeting\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 构造函数 - 执行初始化操作\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Emessage: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Egreeting\u003C\u002Fspan\u003E = message;\n  }\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 静态方法\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Estatic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EgetClassName\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"Class name is Greeter\"\u003C\u002Fspan\u003E;\n  }\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 成员方法\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"Hello, \"\u003C\u002Fspan\u003E + \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Egreeting\u003C\u002Fspan\u003E;\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E greeter = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"world\"\u003C\u002Fspan\u003E);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E那么成员属性与静态属性，成员方法与静态方法有什么区别呢？这里无需过多解释，我们直接看一下编译生成的 ES5 代码：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-javascript\" lang=\"javascript\"\u003E\u003Cspan class=\"hljs-meta\"\u003E\"use strict\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-comment\"\u003E\u002F** \u003Cspan class=\"hljs-doctag\"\u003E@class\u003C\u002Fspan\u003E *\u002F\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 构造函数 - 执行初始化操作\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EGreeter\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Emessage\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Egreeting\u003C\u002Fspan\u003E = message;\n    }\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 静态方法\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EgetClassName\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"Class name is Greeter\"\u003C\u002Fspan\u003E;\n    };\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 成员方法\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eprototype\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Egreet\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"Hello, \"\u003C\u002Fspan\u003E + \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Egreeting\u003C\u002Fspan\u003E;\n    };\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 静态属性\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Ecname\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"Greeter\"\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E;\n}());\n\u003Cspan class=\"hljs-keyword\"\u003Evar\u003C\u002Fspan\u003E greeter = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"world\"\u003C\u002Fspan\u003E);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-81\"\u003E11.2 ECMAScript 私有字段\u003C\u002Fh4\u003E\n\u003Cp\u003E在 TypeScript 3.8 版本就开始支持\u003Cstrong\u003EECMAScript 私有字段\u003C\u002Fstrong\u003E，使用方式如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  #\u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ename: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.#name = name;\n  }\n\n  \u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Hello, my name is \u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.#name}\u003C\u002Fspan\u003E!`\u003C\u002Fspan\u003E);\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E semlinker = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Semlinker\"\u003C\u002Fspan\u003E);\n\nsemlinker.#name;\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F     ~~~~~\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Property '#name' is not accessible outside class 'Person'\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F because it has a private identifier.\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E与常规属性（甚至使用 \u003Ccode\u003Eprivate\u003C\u002Fcode\u003E 修饰符声明的属性）不同，私有字段要牢记以下规则：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003E私有字段以 \u003Ccode\u003E#\u003C\u002Fcode\u003E 字符开头，有时我们称之为私有名称；\u003C\u002Fli\u003E\n\u003Cli\u003E每个私有字段名称都唯一地限定于其包含的类；\u003C\u002Fli\u003E\n\u003Cli\u003E不能在私有字段上使用 TypeScript 可访问性修饰符（如 public 或 private）；\u003C\u002Fli\u003E\n\u003Cli\u003E私有字段不能在包含的类之外访问，甚至不能被检测到。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch4 data-id=\"heading-82\"\u003E11.3 访问器\u003C\u002Fh4\u003E\n\u003Cp\u003E在 TypeScript 中，我们可以通过 \u003Ccode\u003Egetter\u003C\u002Fcode\u003E 和 \u003Ccode\u003Esetter\u003C\u002Fcode\u003E 方法来实现数据的封装和有效性校验，防止出现异常数据。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E passcode = \u003Cspan class=\"hljs-string\"\u003E\"Hello TypeScript\"\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EEmployee\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Eprivate\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003E_fullName\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eget\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EfullName\u003C\u002Fspan\u003E(): \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003E_fullName\u003C\u002Fspan\u003E;\n  }\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eset\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EfullName\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EnewName: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (passcode &#x26;&#x26; passcode == \u003Cspan class=\"hljs-string\"\u003E\"Hello TypeScript\"\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003E_fullName\u003C\u002Fspan\u003E = newName;\n    } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Error: Unauthorized update of employee!\"\u003C\u002Fspan\u003E);\n    }\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E employee = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EEmployee\u003C\u002Fspan\u003E();\nemployee.\u003Cspan class=\"hljs-property\"\u003EfullName\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"Semlinker\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E (employee.\u003Cspan class=\"hljs-property\"\u003EfullName\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(employee.\u003Cspan class=\"hljs-property\"\u003EfullName\u003C\u002Fspan\u003E);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-83\"\u003E11.4 类的继承\u003C\u002Fh4\u003E\n\u003Cp\u003E继承（Inheritance）是一种联结类与类的层次模型。指的是一个类（称为子类、子接口）继承另外的一个类（称为父类、父接口）的功能，并可以增加它自己的新功能的能力，继承是类与类或者接口与接口之间最常见的关系。\u003C\u002Fp\u003E\n\u003Cp\u003E继承是一种 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fzh.wikipedia.org%2Fwiki%2FIs-a\" target=\"_blank\" title=\"https:\u002F\u002Fzh.wikipedia.org\u002Fwiki\u002FIs-a\" ref=\"nofollow noopener noreferrer\"\u003Eis-a \u003C\u002Fa\u003E 关系：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F3c5e414249974e59a7486aa8beaf6746~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E在 TypeScript 中，我们可以通过 \u003Ccode\u003Eextends\u003C\u002Fcode\u003E 关键字来实现继承：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EAnimal\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EtheName: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Ename\u003C\u002Fspan\u003E = theName;\n  }\n  \n  \u003Cspan class=\"hljs-title function_\"\u003Emove\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EdistanceInMeters: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.name}\u003C\u002Fspan\u003E moved \u003Cspan class=\"hljs-subst\"\u003E${distanceInMeters}\u003C\u002Fspan\u003Em.`\u003C\u002Fspan\u003E);\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESnake\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eextends\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_ inherited__\"\u003EAnimal\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ename: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Esuper\u003C\u002Fspan\u003E(name); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 调用父类的构造函数\u003C\u002Fspan\u003E\n  }\n  \n  \u003Cspan class=\"hljs-title function_\"\u003Emove\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EdistanceInMeters = \u003Cspan class=\"hljs-number\"\u003E5\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Slithering...\"\u003C\u002Fspan\u003E);\n    \u003Cspan class=\"hljs-variable language_\"\u003Esuper\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Emove\u003C\u002Fspan\u003E(distanceInMeters);\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E sam = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESnake\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Sammy the Python\"\u003C\u002Fspan\u003E);\nsam.\u003Cspan class=\"hljs-title function_\"\u003Emove\u003C\u002Fspan\u003E();\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-84\"\u003E11.5 抽象类\u003C\u002Fh4\u003E\n\u003Cp\u003E使用 \u003Ccode\u003Eabstract\u003C\u002Fcode\u003E 关键字声明的类，我们称之为抽象类。抽象类不能被实例化，因为它里面包含一个或多个抽象方法。所谓的抽象方法，是指不包含具体实现的方法：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Epublic\u003C\u002Fspan\u003E name: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E){}\n\n  \u003Cspan class=\"hljs-keyword\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Esay\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ewords\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E) :\u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Cannot create an instance of an abstract class.(2511)\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E lolo = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E抽象类不能被直接实例化，我们只能实例化实现了所有抽象方法的子类。具体如下所示：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Epublic\u003C\u002Fspan\u003E name: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E){}\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 抽象方法\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Eabstract\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Esay\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ewords\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E) :\u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDeveloper\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eextends\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_ inherited__\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ename: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Esuper\u003C\u002Fspan\u003E(name);\n  }\n  \n  \u003Cspan class=\"hljs-title function_\"\u003Esay\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Ewords\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`\u003Cspan class=\"hljs-subst\"\u003E${\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.name}\u003C\u002Fspan\u003E says \u003Cspan class=\"hljs-subst\"\u003E${words}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E);\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E lolo = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EDeveloper\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"lolo\"\u003C\u002Fspan\u003E);\nlolo.\u003Cspan class=\"hljs-title function_\"\u003Esay\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"I love ts!\"\u003C\u002Fspan\u003E); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F lolo says I love ts!\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-85\"\u003E11.6 类方法重载\u003C\u002Fh4\u003E\n\u003Cp\u003E在前面的章节，我们已经介绍了函数重载。对于类的方法来说，它也支持重载。比如，在以下示例中我们重载了 \u003Ccode\u003EProductService\u003C\u002Fcode\u003E 类的 \u003Ccode\u003EgetProducts\u003C\u002Fcode\u003E 成员方法：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EProductService\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-title function_\"\u003EgetProducts\u003C\u002Fspan\u003E(): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title function_\"\u003EgetProducts\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Eid\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-title function_\"\u003EgetProducts\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Eid?: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n      \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E id === \u003Cspan class=\"hljs-string\"\u003E'number'\u003C\u002Fspan\u003E) {\n          \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`获取id为 \u003Cspan class=\"hljs-subst\"\u003E${id}\u003C\u002Fspan\u003E 的产品信息`\u003C\u002Fspan\u003E);\n      } \u003Cspan class=\"hljs-keyword\"\u003Eelse\u003C\u002Fspan\u003E {\n          \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`获取所有的产品信息`\u003C\u002Fspan\u003E);\n      }  \n    }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E productService = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EProductService\u003C\u002Fspan\u003E();\nproductService.\u003Cspan class=\"hljs-title function_\"\u003EgetProducts\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E666\u003C\u002Fspan\u003E); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 获取id为 666 的产品信息\u003C\u002Fspan\u003E\nproductService.\u003Cspan class=\"hljs-title function_\"\u003EgetProducts\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 获取所有的产品信息 \u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-86\"\u003E十二、TypeScript 泛型\u003C\u002Fh3\u003E\n\u003Cp\u003E软件工程中，我们不仅要创建一致的定义良好的 API，同时也要考虑可重用性。 组件不仅能够支持当前的数据类型，同时也能支持未来的数据类型，这在创建大型系统时为你提供了十分灵活的功能。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E在像 C# 和 Java 这样的语言中，可以使用泛型来创建可重用的组件，一个组件可以支持多种类型的数据。 这样用户就可以以自己的数据类型来使用组件。\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E设计泛型的关键目的是在成员之间提供有意义的约束，这些成员可以是：类的实例成员、类的方法、函数参数和函数返回值。\u003C\u002Fp\u003E\n\u003Cp\u003E泛型（Generics）是允许同一个函数接受不同类型参数的一种模板。相比于使用 any 类型，使用泛型来创建可复用的组件要更好，因为泛型会保留参数类型。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-87\"\u003E12.1 泛型语法\u003C\u002Fh4\u003E\n\u003Cp\u003E对于刚接触 TypeScript 泛型的读者来说，首次看到 \u003Ccode\u003E&#x3C;T\u003E\u003C\u002Fcode\u003E 语法会感到陌生。其实它没有什么特别，就像传递参数一样，我们传递了我们想要用于特定函数调用的类型。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp9-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002Ff295fd4930824a3ea0f015c81aa568e7~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E参考上面的图片，当我们调用 \u003Ccode\u003E identity&#x3C;Number\u003E(1)\u003C\u002Fcode\u003E ，\u003Ccode\u003ENumber\u003C\u002Fcode\u003E 类型就像参数 \u003Ccode\u003E1\u003C\u002Fcode\u003E 一样，它将在出现 \u003Ccode\u003ET\u003C\u002Fcode\u003E 的任何位置填充该类型。图中 \u003Ccode\u003E&#x3C;T\u003E\u003C\u002Fcode\u003E 内部的 \u003Ccode\u003ET\u003C\u002Fcode\u003E 被称为类型变量，它是我们希望传递给 identity 函数的类型占位符，同时它被分配给 \u003Ccode\u003Evalue\u003C\u002Fcode\u003E 参数用来代替它的类型：此时 \u003Ccode\u003ET\u003C\u002Fcode\u003E 充当的是类型，而不是特定的 Number 类型。\u003C\u002Fp\u003E\n\u003Cp\u003E其中 \u003Ccode\u003ET\u003C\u002Fcode\u003E 代表 \u003Cstrong\u003EType\u003C\u002Fstrong\u003E，在定义泛型时通常用作第一个类型变量名称。但实际上 \u003Ccode\u003ET\u003C\u002Fcode\u003E 可以用任何有效名称代替。除了 \u003Ccode\u003ET\u003C\u002Fcode\u003E 之外，以下是常见泛型变量代表的意思：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003EK（Key）：表示对象中的键类型；\u003C\u002Fli\u003E\n\u003Cli\u003EV（Value）：表示对象中的值类型；\u003C\u002Fli\u003E\n\u003Cli\u003EE（Element）：表示元素类型。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E其实并不是只能定义一个类型变量，我们可以引入希望定义的任何数量的类型变量。比如我们引入一个新的类型变量 \u003Ccode\u003EU\u003C\u002Fcode\u003E，用于扩展我们定义的 \u003Ccode\u003Eidentity\u003C\u002Fcode\u003E 函数：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E identity &#x3C;T, U\u003E(\u003Cspan class=\"hljs-attr\"\u003Evalue\u003C\u002Fspan\u003E: T, \u003Cspan class=\"hljs-attr\"\u003Emessage\u003C\u002Fspan\u003E: U) : T {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(message);\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E value;\n}\n\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(identity&#x3C;\u003Cspan class=\"hljs-title class_\"\u003ENumber\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003E(\u003Cspan class=\"hljs-number\"\u003E68\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E\"Semlinker\"\u003C\u002Fspan\u003E));\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F8c01377aef194da9bbf05e7cf6910a30~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E除了为类型变量显式设定值之外，一种更常见的做法是使编译器自动选择这些类型，从而使代码更简洁。我们可以完全省略尖括号，比如：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E identity &#x3C;T, U\u003E(\u003Cspan class=\"hljs-attr\"\u003Evalue\u003C\u002Fspan\u003E: T, \u003Cspan class=\"hljs-attr\"\u003Emessage\u003C\u002Fspan\u003E: U) : T {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(message);\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E value;\n}\n\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-title function_\"\u003Eidentity\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E68\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-string\"\u003E\"Semlinker\"\u003C\u002Fspan\u003E));\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E对于上述代码，编译器足够聪明，能够知道我们的参数类型，并将它们赋值给 T 和 U，而不需要开发人员显式指定它们。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-88\"\u003E12.2 泛型接口\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGenericIdentityFn\u003C\u002Fspan\u003E&#x3C;T\u003E {\n  (\u003Cspan class=\"hljs-attr\"\u003Earg\u003C\u002Fspan\u003E: T): T;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-89\"\u003E12.3 泛型类\u003C\u002Fh4\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGenericNumber\u003C\u002Fspan\u003E&#x3C;T\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003EzeroValue\u003C\u002Fspan\u003E: T;\n  \u003Cspan class=\"hljs-attr\"\u003Eadd\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Ex: T, y: T\u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E T;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E myGenericNumber = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGenericNumber\u003C\u002Fspan\u003E&#x3C;\u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003E();\nmyGenericNumber.\u003Cspan class=\"hljs-property\"\u003EzeroValue\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E;\nmyGenericNumber.\u003Cspan class=\"hljs-property\"\u003Eadd\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Ex, y\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E x + y;\n};\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-90\"\u003E12.4 泛型工具类型\u003C\u002Fh4\u003E\n\u003Cp\u003E为了方便开发者 TypeScript 内置了一些常用的工具类型，比如 Partial、Required、Readonly、Record 和 ReturnType 等。出于篇幅考虑，这里我们只简单介绍 Partial 工具类型。不过在具体介绍之前，我们得先介绍一些相关的基础知识，方便读者自行学习其它的工具类型。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-91\"\u003E1.typeof\u003C\u002Fh5\u003E\n\u003Cp\u003E在 TypeScript 中，\u003Ccode\u003Etypeof\u003C\u002Fcode\u003E 操作符可以用来获取一个变量声明或对象的类型。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Esem\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E = { \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E'semlinker'\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E33\u003C\u002Fspan\u003E };\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ESem\u003C\u002Fspan\u003E= \u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E sem; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F -\u003E Person\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EtoArray\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ex: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-title class_\"\u003EArray\u003C\u002Fspan\u003E&#x3C;\u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003E {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E [x];\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EFunc\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-keyword\"\u003Etypeof\u003C\u002Fspan\u003E toArray; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F -\u003E (x: number) =\u003E number[]\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-92\"\u003E2.keyof\u003C\u002Fh5\u003E\n\u003Cp\u003E\u003Ccode\u003Ekeyof\u003C\u002Fcode\u003E 操作符是在 TypeScript 2.1 版本引入的，该操作符可以用于获取某种类型的所有键，其返回类型是联合类型。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Eage\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable constant_\"\u003EK1\u003C\u002Fspan\u003E = keyof \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F \"name\" | \"age\"\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable constant_\"\u003EK2\u003C\u002Fspan\u003E = keyof \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E[]; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F \"length\" | \"toString\" | \"pop\" | \"push\" | \"concat\" | \"join\" \u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-variable constant_\"\u003EK3\u003C\u002Fspan\u003E = keyof { [\u003Cspan class=\"hljs-attr\"\u003Ex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E]: \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E };  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F string | number\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在 TypeScript 中支持两种索引签名，数字索引和字符串索引：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EStringArray\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 字符串索引 -\u003E keyof StringArray =\u003E string | number\u003C\u002Fspan\u003E\n  [\u003Cspan class=\"hljs-attr\"\u003Eindex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E]: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E; \n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EStringArray1\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 数字索引 -\u003E keyof StringArray1 =\u003E number\u003C\u002Fspan\u003E\n  [\u003Cspan class=\"hljs-attr\"\u003Eindex\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E]: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E为了同时支持两种索引类型，就得要求数字索引的返回值必须是字符串索引返回值的子类。\u003Cstrong\u003E其中的原因就是当使用数值索引时，JavaScript 在执行索引操作时，会先把数值索引先转换为字符串索引\u003C\u002Fstrong\u003E。所以 \u003Ccode\u003Ekeyof { [x: string]: Person }\u003C\u002Fcode\u003E 的结果会返回 \u003Ccode\u003Estring | number\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-93\"\u003E3.in\u003C\u002Fh5\u003E\n\u003Cp\u003E\u003Ccode\u003Ein\u003C\u002Fcode\u003E 用来遍历枚举类型：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EKeys\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"a\"\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-string\"\u003E\"b\"\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-string\"\u003E\"c\"\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EObj\u003C\u002Fspan\u003E =  {\n  [p \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EKeys\u003C\u002Fspan\u003E]: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E\n} \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F -\u003E { a: any, b: any, c: any }\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-94\"\u003E4.infer\u003C\u002Fh5\u003E\n\u003Cp\u003E在条件类型语句中，可以用 \u003Ccode\u003Einfer\u003C\u002Fcode\u003E 声明一个类型变量并且对它进行使用。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EReturnType\u003C\u002Fspan\u003E&#x3C;T\u003E = T \u003Cspan class=\"hljs-keyword\"\u003Eextends\u003C\u002Fspan\u003E (\n  ...\u003Cspan class=\"hljs-attr\"\u003Eargs\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E[]\n) =\u003E infer R ? R : \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码中 \u003Ccode\u003Einfer R\u003C\u002Fcode\u003E 就是声明一个变量来承载传入函数签名的返回值类型，简单说就是用它取到函数返回值的类型方便之后使用。\u003C\u002Fp\u003E\n\u003Ch5 data-id=\"heading-95\"\u003E5.extends\u003C\u002Fh5\u003E\n\u003Cp\u003E有时候我们定义的泛型不想过于灵活或者说想继承某些类等，可以通过 extends 关键字添加泛型约束。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ELengthwise\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Elength\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E loggingIdentity&#x3C;T \u003Cspan class=\"hljs-keyword\"\u003Eextends\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ELengthwise\u003C\u002Fspan\u003E\u003E(\u003Cspan class=\"hljs-attr\"\u003Earg\u003C\u002Fspan\u003E: T): T {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(arg.\u003Cspan class=\"hljs-property\"\u003Elength\u003C\u002Fspan\u003E);\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E arg;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E现在这个泛型函数被定义了约束，因此它不再是适用于任意类型：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-title function_\"\u003EloggingIdentity\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E);  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error, number doesn't have a .length property\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E这时我们需要传入符合约束类型的值，必须包含必须的属性：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-title function_\"\u003EloggingIdentity\u003C\u002Fspan\u003E({\u003Cspan class=\"hljs-attr\"\u003Elength\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E10\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-attr\"\u003Evalue\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E3\u003C\u002Fspan\u003E});\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch5 data-id=\"heading-96\"\u003E6.Partial\u003C\u002Fh5\u003E\n\u003Cp\u003E\u003Ccode\u003EPartial&#x3C;T\u003E\u003C\u002Fcode\u003E 的作用就是将某个类型里的属性全部变为可选项 \u003Ccode\u003E?\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E定义：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F**\n * node_modules\u002Ftypescript\u002Flib\u002Flib.es5.d.ts\n * Make all properties in T optional\n *\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPartial\u003C\u002Fspan\u003E&#x3C;T\u003E = {\n  [P \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E keyof T]?: T[P];\n};\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在以上代码中，首先通过 \u003Ccode\u003Ekeyof T\u003C\u002Fcode\u003E 拿到 \u003Ccode\u003ET\u003C\u002Fcode\u003E 的所有属性名，然后使用 \u003Ccode\u003Ein\u003C\u002Fcode\u003E 进行遍历，将值赋给 \u003Ccode\u003EP\u003C\u002Fcode\u003E，最后通过 \u003Ccode\u003ET[P]\u003C\u002Fcode\u003E 取得相应的属性值。中间的 \u003Ccode\u003E?\u003C\u002Fcode\u003E 号，用于将所有属性变为可选。\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E示例：\u003C\u002Fstrong\u003E\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Einterface\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ETodo\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-attr\"\u003Edescription\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EupdateTodo\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Etodo: Todo, fieldsToUpdate: Partial&#x3C;Todo\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E { ...todo, ...fieldsToUpdate };\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E todo1 = {\n  \u003Cspan class=\"hljs-attr\"\u003Etitle\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Learn TS\"\u003C\u002Fspan\u003E,\n  \u003Cspan class=\"hljs-attr\"\u003Edescription\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Learn TypeScript\"\u003C\u002Fspan\u003E,\n};\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E todo2 = \u003Cspan class=\"hljs-title function_\"\u003EupdateTodo\u003C\u002Fspan\u003E(todo1, {\n  \u003Cspan class=\"hljs-attr\"\u003Edescription\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-string\"\u003E\"Learn TypeScript Enum\"\u003C\u002Fspan\u003E,\n});\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E在上面的 \u003Ccode\u003EupdateTodo\u003C\u002Fcode\u003E 方法中，我们利用 \u003Ccode\u003EPartial&#x3C;T\u003E\u003C\u002Fcode\u003E 工具类型，定义 \u003Ccode\u003EfieldsToUpdate\u003C\u002Fcode\u003E 的类型为 \u003Ccode\u003EPartial&#x3C;Todo\u003E\u003C\u002Fcode\u003E，即：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E{\n   title?: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E;\n   description?: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-literal\"\u003Eundefined\u003C\u002Fspan\u003E;\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-97\"\u003E十三、TypeScript 装饰器\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-98\"\u003E13.1 装饰器是什么\u003C\u002Fh4\u003E\n\u003Cul\u003E\n\u003Cli\u003E它是一个表达式\u003C\u002Fli\u003E\n\u003Cli\u003E该表达式被执行后，返回一个函数\u003C\u002Fli\u003E\n\u003Cli\u003E函数的入参分别为 target、name 和 descriptor\u003C\u002Fli\u003E\n\u003Cli\u003E执行该函数后，可能返回 descriptor 对象，用于配置 target 对象\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch4 data-id=\"heading-99\"\u003E13.2 装饰器的分类\u003C\u002Fh4\u003E\n\u003Cul\u003E\n\u003Cli\u003E类装饰器（Class decorators）\u003C\u002Fli\u003E\n\u003Cli\u003E属性装饰器（Property decorators）\u003C\u002Fli\u003E\n\u003Cli\u003E方法装饰器（Method decorators）\u003C\u002Fli\u003E\n\u003Cli\u003E参数装饰器（Parameter decorators）\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E需要注意的是，若要启用实验性的装饰器特性，你必须在命令行或 \u003Ccode\u003Etsconfig.json\u003C\u002Fcode\u003E 里启用 \u003Ccode\u003EexperimentalDecorators\u003C\u002Fcode\u003E 编译器选项：\u003C\u002Fp\u003E\n\u003Cp\u003E\u003Cstrong\u003E命令行\u003C\u002Fstrong\u003E：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-shell\" lang=\"shell\"\u003Etsc --target ES5 --experimentalDecorators\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E\u003Cstrong\u003Etsconfig.json\u003C\u002Fstrong\u003E：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-json\" lang=\"json\"\u003E\u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E\"compilerOptions\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n     \u003Cspan class=\"hljs-attr\"\u003E\"target\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"ES5\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E\n     \u003Cspan class=\"hljs-attr\"\u003E\"experimentalDecorators\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n   \u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-100\"\u003E13.3 类装饰器\u003C\u002Fh4\u003E\n\u003Cp\u003E类装饰器声明：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Edeclare\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EClassDecorator\u003C\u002Fspan\u003E = &#x3C;\u003Cspan class=\"hljs-title class_\"\u003ETFunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Eextends\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EFunction\u003C\u002Fspan\u003E\u003E\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003E\n  target: TFunction\n\u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ETFunction\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E类装饰器顾名思义，就是用来装饰类的。它接收一个参数：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Etarget: TFunction - 被装饰的类\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E看完第一眼后，是不是感觉都不好了。没事，我们马上来个例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EGreeter\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Etarget: \u003Cspan class=\"hljs-built_in\"\u003EFunction\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n  target.\u003Cspan class=\"hljs-property\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eprototype\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Egreet\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Hello Semlinker!\"\u003C\u002Fspan\u003E);\n  };\n}\n\n\u003Cspan class=\"hljs-meta\"\u003E@Greeter\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeting\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 内部实现\u003C\u002Fspan\u003E\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E myGreeting = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeting\u003C\u002Fspan\u003E();\n(myGreeting \u003Cspan class=\"hljs-keyword\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E).\u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F console output: 'Hello Semlinker!';\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E上面的例子中，我们定义了 \u003Ccode\u003EGreeter\u003C\u002Fcode\u003E 类装饰器，同时我们使用了 \u003Ccode\u003E@Greeter\u003C\u002Fcode\u003E 语法糖，来使用装饰器。\u003C\u002Fp\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E友情提示：读者可以直接复制上面的代码，在 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%2Findex.html\" target=\"_blank\" title=\"https:\u002F\u002Fwww.typescriptlang.org\u002Fplay\u002Findex.html\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript Playground\u003C\u002Fa\u003E 中运行查看结果。\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E有的读者可能想问，例子中总是输出 \u003Ccode\u003EHello Semlinker!\u003C\u002Fcode\u003E ，能自定义输出的问候语么 ？这个问题很好，答案是可以的。\u003C\u002Fp\u003E\n\u003Cp\u003E具体实现如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EGreeter\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Egreeting: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003Etarget: \u003Cspan class=\"hljs-built_in\"\u003EFunction\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    target.\u003Cspan class=\"hljs-property\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eprototype\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Egreet\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n      \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(greeting);\n    };\n  };\n}\n\n\u003Cspan class=\"hljs-meta\"\u003E@Greeter\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"Hello TS!\"\u003C\u002Fspan\u003E)\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeting\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 内部实现\u003C\u002Fspan\u003E\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E myGreeting = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeting\u003C\u002Fspan\u003E();\n(myGreeting \u003Cspan class=\"hljs-keyword\"\u003Eas\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E).\u003Cspan class=\"hljs-title function_\"\u003Egreet\u003C\u002Fspan\u003E(); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F console output: 'Hello TS!';\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-101\"\u003E13.4 属性装饰器\u003C\u002Fh4\u003E\n\u003Cp\u003E属性装饰器声明：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Edeclare\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPropertyDecorator\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Etarget:\u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E, \n  propertyKey: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Esymbol\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E属性装饰器顾名思义，用来装饰类的属性。它接收两个参数：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Etarget: Object - 被装饰的类\u003C\u002Fli\u003E\n\u003Cli\u003EpropertyKey: string | symbol - 被装饰类的属性名\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E趁热打铁，马上来个例子热热身：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003ElogProperty\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Etarget: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E, key: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Edelete\u003C\u002Fspan\u003E target[key];\n\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E backingField = \u003Cspan class=\"hljs-string\"\u003E\"_\"\u003C\u002Fspan\u003E + key;\n\n  \u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003EdefineProperty\u003C\u002Fspan\u003E(target, backingField, {\n    \u003Cspan class=\"hljs-attr\"\u003Ewritable\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Eenumerable\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Econfigurable\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E\n  });\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F property getter\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E getter = \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E currVal = \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E[backingField];\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Get: \u003Cspan class=\"hljs-subst\"\u003E${key}\u003C\u002Fspan\u003E =\u003E \u003Cspan class=\"hljs-subst\"\u003E${currVal}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E);\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E currVal;\n  };\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F property setter\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E setter = \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E, newVal: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Set: \u003Cspan class=\"hljs-subst\"\u003E${key}\u003C\u002Fspan\u003E =\u003E \u003Cspan class=\"hljs-subst\"\u003E${newVal}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E);\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E[backingField] = newVal;\n  };\n\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Create new property with getter and setter\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-title class_\"\u003EObject\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003EdefineProperty\u003C\u002Fspan\u003E(target, key, {\n    \u003Cspan class=\"hljs-attr\"\u003Eget\u003C\u002Fspan\u003E: getter,\n    \u003Cspan class=\"hljs-attr\"\u003Eset\u003C\u002Fspan\u003E: setter,\n    \u003Cspan class=\"hljs-attr\"\u003Eenumerable\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E,\n    \u003Cspan class=\"hljs-attr\"\u003Econfigurable\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-literal\"\u003Etrue\u003C\u002Fspan\u003E\n  });\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E { \n  \u003Cspan class=\"hljs-meta\"\u003E@logProperty\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-keyword\"\u003Epublic\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ename : \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) { \n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Ename\u003C\u002Fspan\u003E = name;\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Econst\u003C\u002Fspan\u003E p1 = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"semlinker\"\u003C\u002Fspan\u003E);\np1.\u003Cspan class=\"hljs-property\"\u003Ename\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-string\"\u003E\"kakuqo\"\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码我们定义了一个 \u003Ccode\u003ElogProperty\u003C\u002Fcode\u003E 函数，来跟踪用户对属性的操作，当代码成功运行后，在控制台会输出以下结果：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-ini\" lang=\"ini\"\u003ESet: \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E =\u003E semlinker\nSet: \u003Cspan class=\"hljs-attr\"\u003Ename\u003C\u002Fspan\u003E =\u003E kakuqo\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-102\"\u003E13.5 方法装饰器\u003C\u002Fh4\u003E\n\u003Cp\u003E方法装饰器声明：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Edeclare\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EMethodDecorator\u003C\u002Fspan\u003E = &#x3C;T\u003E\u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Etarget:\u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E, propertyKey: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Esymbol\u003C\u002Fspan\u003E, \t \t\n  descriptor: TypePropertyDescript&#x3C;T\u003E\u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ETypedPropertyDescriptor\u003C\u002Fspan\u003E&#x3C;T\u003E | \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E;\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E方法装饰器顾名思义，用来装饰类的方法。它接收三个参数：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Etarget: Object - 被装饰的类\u003C\u002Fli\u003E\n\u003Cli\u003EpropertyKey: string | symbol - 方法名\u003C\u002Fli\u003E\n\u003Cli\u003Edescriptor: TypePropertyDescript - 属性描述符\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cp\u003E废话不多说，直接上例子：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Etarget: \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E, propertyKey: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, descriptor: PropertyDescriptor\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E originalMethod = descriptor.\u003Cspan class=\"hljs-property\"\u003Evalue\u003C\u002Fspan\u003E;\n  descriptor.\u003Cspan class=\"hljs-property\"\u003Evalue\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E (\u003Cspan class=\"hljs-params\"\u003E...args: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E[]\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"wrapped function: before invoking \"\u003C\u002Fspan\u003E + propertyKey);\n    \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E result = originalMethod.\u003Cspan class=\"hljs-title function_\"\u003Eapply\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E, args);\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"wrapped function: after invoking \"\u003C\u002Fspan\u003E + propertyKey);\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E result;\n  };\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ETask\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-meta\"\u003E@log\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-title function_\"\u003ErunTask\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-attr\"\u003Earg\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Eany\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"runTask invoked, args: \"\u003C\u002Fspan\u003E + arg);\n    \u003Cspan class=\"hljs-keyword\"\u003Ereturn\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"finished\"\u003C\u002Fspan\u003E;\n  }\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E task = \u003Cspan class=\"hljs-keyword\"\u003Enew\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003ETask\u003C\u002Fspan\u003E();\n\u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E result = task.\u003Cspan class=\"hljs-title function_\"\u003ErunTask\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"learn ts\"\u003C\u002Fspan\u003E);\n\u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"result: \"\u003C\u002Fspan\u003E + result);\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码成功运行后，控制台会输出以下结果：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-arduino\" lang=\"arduino\"\u003E\u003Cspan class=\"hljs-string\"\u003E\"wrapped function: before invoking runTask\"\u003C\u002Fspan\u003E \n\u003Cspan class=\"hljs-string\"\u003E\"runTask invoked, args: learn ts\"\u003C\u002Fspan\u003E \n\u003Cspan class=\"hljs-string\"\u003E\"wrapped function: after invoking runTask\"\u003C\u002Fspan\u003E \n\u003Cspan class=\"hljs-string\"\u003E\"result: finished\"\u003C\u002Fspan\u003E \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E下面我们来介绍一下参数装饰器。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-103\"\u003E13.6 参数装饰器\u003C\u002Fh4\u003E\n\u003Cp\u003E参数装饰器声明：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Edeclare\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Etype\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EParameterDecorator\u003C\u002Fspan\u003E = \u003Cspan class=\"hljs-function\"\u003E(\u003Cspan class=\"hljs-params\"\u003Etarget: \u003Cspan class=\"hljs-built_in\"\u003EObject\u003C\u002Fspan\u003E, propertyKey: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E | \u003Cspan class=\"hljs-built_in\"\u003Esymbol\u003C\u002Fspan\u003E, \n  parameterIndex: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E \u003C\u002Fspan\u003E) =\u003E\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E参数装饰器顾名思义，是用来装饰函数参数，它接收三个参数：\u003C\u002Fp\u003E\n\u003Cul\u003E\n\u003Cli\u003Etarget: Object - 被装饰的类\u003C\u002Fli\u003E\n\u003Cli\u003EpropertyKey: string | symbol - 方法名\u003C\u002Fli\u003E\n\u003Cli\u003EparameterIndex: number - 方法中参数的索引值\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003ELog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Etarget: \u003Cspan class=\"hljs-built_in\"\u003EFunction\u003C\u002Fspan\u003E, key: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, parameterIndex: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-keyword\"\u003Elet\u003C\u002Fspan\u003E functionLogged = key || target.\u003Cspan class=\"hljs-property\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eprototype\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Econstructor\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Ename\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`The parameter in position \u003Cspan class=\"hljs-subst\"\u003E${parameterIndex}\u003C\u002Fspan\u003E at \u003Cspan class=\"hljs-subst\"\u003E${functionLogged}\u003C\u002Fspan\u003E has\n\tbeen decorated`\u003C\u002Fspan\u003E);\n}\n\n\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EGreeter\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-attr\"\u003Egreeting\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E;\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E\u003Cspan class=\"hljs-meta\"\u003E@Log\u003C\u002Fspan\u003E phrase: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n\t\u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003Egreeting\u003C\u002Fspan\u003E = phrase; \n  }\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E以上代码成功运行后，控制台会输出以下结果：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-arduino\" lang=\"arduino\"\u003E\u003Cspan class=\"hljs-string\"\u003E\"The parameter in position 0 at Greeter has been decorated\"\u003C\u002Fspan\u003E \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-104\"\u003E十四、TypeScript 4.0 新特性\u003C\u002Fh3\u003E\n\u003Cp\u003ETypeScript 4.0 带来了很多新的特性，这里我们只简单介绍其中的两个新特性。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-105\"\u003E14.1 构造函数的类属性推断\u003C\u002Fh4\u003E\n\u003Cp\u003E当 \u003Ccode\u003EnoImplicitAny\u003C\u002Fcode\u003E 配置属性被启用之后，TypeScript 4.0 就可以使用控制流分析来确认类中的属性类型：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  fullName; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F (property) Person.fullName: string\u003C\u002Fspan\u003E\n  firstName; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F (property) Person.firstName: string\u003C\u002Fspan\u003E\n  lastName; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F (property) Person.lastName: string\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EfullName: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EfullName\u003C\u002Fspan\u003E = fullName;\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EfirstName\u003C\u002Fspan\u003E = fullName.\u003Cspan class=\"hljs-title function_\"\u003Esplit\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\" \"\u003C\u002Fspan\u003E)[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E];\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003ElastName\u003C\u002Fspan\u003E =   fullName.\u003Cspan class=\"hljs-title function_\"\u003Esplit\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\" \"\u003C\u002Fspan\u003E)[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E];\n  }  \n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E然而对于以上的代码，如果在 TypeScript 4.0 以前的版本，比如在 3.9.2 版本下，编译器会提示以下错误信息：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Member 'fullName' implicitly has an 'any' type.(7008)\u003C\u002Fspan\u003E\n  fullName; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n  firstName; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n  lastName; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Error\u003C\u002Fspan\u003E\n\n  \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EfullName: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EfullName\u003C\u002Fspan\u003E = fullName;\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EfirstName\u003C\u002Fspan\u003E = fullName.\u003Cspan class=\"hljs-title function_\"\u003Esplit\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\" \"\u003C\u002Fspan\u003E)[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E];\n    \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003ElastName\u003C\u002Fspan\u003E =   fullName.\u003Cspan class=\"hljs-title function_\"\u003Esplit\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\" \"\u003C\u002Fspan\u003E)[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E];\n  }  \n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E从构造函数推断类属性的类型，该特性给我们带来了便利。但在使用过程中，如果我们没法保证对成员属性都进行赋值，那么该属性可能会被认为是 \u003Ccode\u003Eundefined\u003C\u002Fcode\u003E。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Eclass\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title class_\"\u003EPerson\u003C\u002Fspan\u003E {\n   fullName;  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F (property) Person.fullName: string\u003C\u002Fspan\u003E\n   firstName; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F (property) Person.firstName: string | undefined\u003C\u002Fspan\u003E\n   lastName; \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F (property) Person.lastName: string | undefined\u003C\u002Fspan\u003E\n\n   \u003Cspan class=\"hljs-title function_\"\u003Econstructor\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003EfullName: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n     \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EfullName\u003C\u002Fspan\u003E = fullName;\n     \u003Cspan class=\"hljs-keyword\"\u003Eif\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-title class_\"\u003EMath\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Erandom\u003C\u002Fspan\u003E()){\n       \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003EfirstName\u003C\u002Fspan\u003E = fullName.\u003Cspan class=\"hljs-title function_\"\u003Esplit\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\" \"\u003C\u002Fspan\u003E)[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E];\n       \u003Cspan class=\"hljs-variable language_\"\u003Ethis\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-property\"\u003ElastName\u003C\u002Fspan\u003E =   fullName.\u003Cspan class=\"hljs-title function_\"\u003Esplit\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\" \"\u003C\u002Fspan\u003E)[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E];\n     }\n   }  \n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch4 data-id=\"heading-106\"\u003E14.2 标记的元组元素\u003C\u002Fh4\u003E\n\u003Cp\u003E在以下的示例中，我们使用元组类型来声明剩余参数的类型：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EaddPerson\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E...args: [\u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E]\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Person info: name: \u003Cspan class=\"hljs-subst\"\u003E${args[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E]}\u003C\u002Fspan\u003E, age: \u003Cspan class=\"hljs-subst\"\u003E${args[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n}\n\n\u003Cspan class=\"hljs-title function_\"\u003EaddPerson\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E\"lolo\"\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-number\"\u003E5\u003C\u002Fspan\u003E); \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F Person info: name: lolo, age: 5 \u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E其实，对于上面的 \u003Ccode\u003EaddPerson\u003C\u002Fcode\u003E 函数，我们也可以这样实现：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EaddPerson\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003Ename: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, age: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E) {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Person info: name: \u003Cspan class=\"hljs-subst\"\u003E${name}\u003C\u002Fspan\u003E, age: \u003Cspan class=\"hljs-subst\"\u003E${age}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E这两种方式看起来没有多大的区别，但对于第一种方式，我们没法设置第一个参数和第二个参数的名称。虽然这样对类型检查没有影响，但在元组位置上缺少标签，会使得它们难于使用。为了提高开发者使用元组的体验，TypeScript 4.0 支持为元组类型设置标签：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EaddPerson\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E...args: [name: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, age: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E]\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Person info: name: \u003Cspan class=\"hljs-subst\"\u003E${args[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E]}\u003C\u002Fspan\u003E, age: \u003Cspan class=\"hljs-subst\"\u003E${args[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E);\n}\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Cp\u003E之后，当我们使用 \u003Ccode\u003EaddPerson\u003C\u002Fcode\u003E 方法时，TypeScript 的智能提示就会变得更加友好。\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-typescript\" lang=\"typescript\"\u003E\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 未使用标签的智能提示\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F addPerson(args_0: string, args_1: number): void\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EaddPerson\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E...args: [\u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E]\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Person info: name: \u003Cspan class=\"hljs-subst\"\u003E${args[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E]}\u003C\u002Fspan\u003E, age: \u003Cspan class=\"hljs-subst\"\u003E${args[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E)\n} \n\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 已使用标签的智能提示\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F addPerson(name: string, age: number): void\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Efunction\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-title function_\"\u003EaddPerson\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-params\"\u003E...args: [name: \u003Cspan class=\"hljs-built_in\"\u003Estring\u003C\u002Fspan\u003E, age: \u003Cspan class=\"hljs-built_in\"\u003Enumber\u003C\u002Fspan\u003E]\u003C\u002Fspan\u003E): \u003Cspan class=\"hljs-built_in\"\u003Evoid\u003C\u002Fspan\u003E {\n  \u003Cspan class=\"hljs-variable language_\"\u003Econsole\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title function_\"\u003Elog\u003C\u002Fspan\u003E(\u003Cspan class=\"hljs-string\"\u003E`Person info: name: \u003Cspan class=\"hljs-subst\"\u003E${args[\u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E]}\u003C\u002Fspan\u003E, age: \u003Cspan class=\"hljs-subst\"\u003E${args[\u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E]}\u003C\u002Fspan\u003E`\u003C\u002Fspan\u003E);\n} \n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-107\"\u003E十五、编译上下文\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-108\"\u003E15.1 tsconfig.json 的作用\u003C\u002Fh4\u003E\n\u003Cul\u003E\n\u003Cli\u003E用于标识 TypeScript 项目的根路径；\u003C\u002Fli\u003E\n\u003Cli\u003E用于配置 TypeScript 编译器；\u003C\u002Fli\u003E\n\u003Cli\u003E用于指定编译的文件。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch4 data-id=\"heading-109\"\u003E15.2 tsconfig.json 重要字段\u003C\u002Fh4\u003E\n\u003Cul\u003E\n\u003Cli\u003Efiles - 设置要编译的文件的名称；\u003C\u002Fli\u003E\n\u003Cli\u003Einclude - 设置需要进行编译的文件，支持路径模式匹配；\u003C\u002Fli\u003E\n\u003Cli\u003Eexclude - 设置无需进行编译的文件，支持路径模式匹配；\u003C\u002Fli\u003E\n\u003Cli\u003EcompilerOptions - 设置与编译流程相关的选项。\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E\n\u003Ch4 data-id=\"heading-110\"\u003E15.3 compilerOptions 选项\u003C\u002Fh4\u003E\n\u003Cp\u003EcompilerOptions 支持很多选项，常见的有 \u003Ccode\u003EbaseUrl\u003C\u002Fcode\u003E、 \u003Ccode\u003Etarget\u003C\u002Fcode\u003E、\u003Ccode\u003EbaseUrl\u003C\u002Fcode\u003E、 \u003Ccode\u003EmoduleResolution\u003C\u002Fcode\u003E 和 \u003Ccode\u003Elib\u003C\u002Fcode\u003E 等。\u003C\u002Fp\u003E\n\u003Cp\u003EcompilerOptions 每个选项的详细说明如下：\u003C\u002Fp\u003E\n\u003Cpre\u003E\u003Ccode class=\"hljs language-json\" lang=\"json\"\u003E\u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-attr\"\u003E\"compilerOptions\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F* 基本选项 *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"target\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"es5\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                       \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 指定 ECMAScript 目标版本: 'ES3' (default), 'ES5', 'ES6'\u002F'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"module\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"commonjs\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 指定使用模块: 'commonjs', 'amd', 'system', 'umd' or 'es2015'\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"lib\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                             \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 指定要包含在编译中的库文件\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"allowJs\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                       \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 允许编译 javascript 文件\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"checkJs\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                       \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 报告 javascript 文件中的错误\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"jsx\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"preserve\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                     \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 指定 jsx 代码的生成: 'preserve', 'react-native', or 'react'\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"declaration\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                   \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 生成相应的 '.d.ts' 文件\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"sourceMap\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                     \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 生成相应的 '.map' 文件\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"outFile\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\".\u002F\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                       \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 将输出文件合并为一个文件\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"outDir\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\".\u002F\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 指定输出目录\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"rootDir\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\".\u002F\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                       \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 用来控制输出目录结构 --outDir.\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"removeComments\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 删除编译后的所有的注释\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"noEmit\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 不生成输出文件\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"importHelpers\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                 \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 从 tslib 导入辅助工具函数\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"isolatedModules\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E               \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 将每个文件做为单独的模块 （与 'ts.transpileModule' 类似）.\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F* 严格的类型检查选项 *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"strict\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 启用所有严格类型检查选项\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"noImplicitAny\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                 \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 在表达式和声明上有隐含的 any类型时报错\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"strictNullChecks\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E              \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 启用严格的 null 检查\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"noImplicitThis\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 当 this 表达式值为 any 类型的时候，生成一个错误\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"alwaysStrict\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 以严格模式检查每个模块，并在每个文件里加入 'use strict'\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F* 额外的检查 *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"noUnusedLocals\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 有未使用的变量时，抛出错误\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"noUnusedParameters\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E            \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 有未使用的参数时，抛出错误\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"noImplicitReturns\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E             \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 并不是所有函数里的代码都有返回值时，抛出错误\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"noFallthroughCasesInSwitch\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 报告 switch 语句的 fallthrough 错误。（即，不允许 switch 的 case 语句贯穿）\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F* 模块解析选项 *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"moduleResolution\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"node\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E            \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 选择模块解析策略： 'node' (Node.js) or 'classic' (TypeScript pre-1.6)\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"baseUrl\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\".\u002F\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                       \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 用于解析非相对模块名称的基目录\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"paths\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E{\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                           \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 模块名到基于 baseUrl 的路径映射的列表\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"rootDirs\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 根文件夹列表，其组合内容表示项目运行时的结构内容\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"typeRoots\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                       \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 包含类型声明的文件列表\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"types\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-punctuation\"\u003E[\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E]\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                           \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 需要包含的类型声明文件名列表\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"allowSyntheticDefaultImports\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E  \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 允许从没有设置默认导出的模块中默认导入。\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F* Source Map Options *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"sourceRoot\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\".\u002F\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                    \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 指定调试器应该找到 TypeScript 文件而不是源文件的位置\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"mapRoot\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\".\u002F\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                       \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 指定调试器应该找到映射文件而不是生成文件的位置\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"inlineSourceMap\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E               \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 生成单个 soucemaps 文件，而不是将 sourcemaps 生成不同的文件\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"inlineSources\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E                 \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 将代码与 sourcemaps 生成到一个文件中，要求同时设置了 --inlineSourceMap 或 --sourceMap 属性\u003C\u002Fspan\u003E\n\n    \u003Cspan class=\"hljs-comment\"\u003E\u002F* 其他选项 *\u002F\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"experimentalDecorators\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E,\u003C\u002Fspan\u003E        \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 启用装饰器\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-attr\"\u003E\"emitDecoratorMetadata\"\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-punctuation\"\u003E:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-literal\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Etrue\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E          \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002F 为装饰器提供元数据的支持\u003C\u002Fspan\u003E\n  \u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-punctuation\"\u003E}\u003C\u002Fspan\u003E\n\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\n\u003Ch3 data-id=\"heading-111\"\u003E十六、TypeScript 开发辅助工具\u003C\u002Fh3\u003E\n\u003Ch4 data-id=\"heading-112\"\u003E16.1 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%2F\" target=\"_blank\" title=\"https:\u002F\u002Fwww.typescriptlang.org\u002Fplay\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript Playground\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E简介：TypeScript 官方提供的在线 TypeScript 运行环境，利用它你可以方便地学习 TypeScript 相关知识与不同版本的功能特性。\u003C\u002Fp\u003E\n\u003Cp\u003E在线地址：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2Fplay%2F\" target=\"_blank\" title=\"https:\u002F\u002Fwww.typescriptlang.org\u002Fplay\u002F\" ref=\"nofollow noopener noreferrer\"\u003Ewww.typescriptlang.org\u002Fplay\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F3f0f847192f5476fbab2d36e2c28df5f~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E除了 TypeScript 官方的 Playground 之外，你还可以选择其他的 Playground，比如 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fcodepen.io%2F\" target=\"_blank\" title=\"https:\u002F\u002Fcodepen.io\u002F\" ref=\"nofollow noopener noreferrer\"\u003Ecodepen.io\u003C\u002Fa\u003E、\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fstackblitz.com%2F\" target=\"_blank\" title=\"https:\u002F\u002Fstackblitz.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003Estackblitz\u003C\u002Fa\u003E 或 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fjsbin.com%2F%3Fjs\" target=\"_blank\" title=\"https:\u002F\u002Fjsbin.com\u002F?js\" ref=\"nofollow noopener noreferrer\"\u003Ejsbin.com\u003C\u002Fa\u003E 等。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-113\"\u003E16.2 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Ftsuml-demo.firebaseapp.com%2F\" target=\"_blank\" title=\"https:\u002F\u002Ftsuml-demo.firebaseapp.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript UML Playground\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E简介：一款在线 TypeScript UML 工具，利用它你可以为指定的 TypeScript 代码生成 UML 类图。\u003C\u002Fp\u003E\n\u003Cp\u003E在线地址：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Ftsuml-demo.firebaseapp.com%2F\" target=\"_blank\" title=\"https:\u002F\u002Ftsuml-demo.firebaseapp.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003Etsuml-demo.firebaseapp.com\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp3-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002Fba1007ed5c55434a9ef12a3792c2ab80~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-114\"\u003E16.3 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=http%3A%2F%2Fwww.jsontots.com%2F\" target=\"_blank\" title=\"http:\u002F\u002Fwww.jsontots.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003EJSON TO TS\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E简介：一款 TypeScript 在线工具，利用它你可以为指定的 JSON 数据生成对应的 TypeScript 接口定义。\u003C\u002Fp\u003E\n\u003Cp\u003E在线地址：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=http%3A%2F%2Fwww.jsontots.com%2F\" target=\"_blank\" title=\"http:\u002F\u002Fwww.jsontots.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003Ewww.jsontots.com\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F037bbc7a84e145ad8ac13e1e8e49b115~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E除了使用 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=http%3A%2F%2Fwww.jsontots.com%2F\" target=\"_blank\" title=\"http:\u002F\u002Fwww.jsontots.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003Ejsontots\u003C\u002Fa\u003E 在线工具之外，对于使用 VSCode IDE 的小伙们还可以安装 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fmarketplace.visualstudio.com%2Fitems%3FitemName%3DMariusAlchimavicius.json-to-ts\" target=\"_blank\" title=\"https:\u002F\u002Fmarketplace.visualstudio.com\u002Fitems?itemName=MariusAlchimavicius.json-to-ts\" ref=\"nofollow noopener noreferrer\"\u003EJSON to TS\u003C\u002Fa\u003E 扩展来快速完成  \u003Cstrong\u003EJSON to TS\u003C\u002Fstrong\u003E 的转换工作。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-115\"\u003E16.4 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fgithub.com%2FSweetIQ%2Fschemats\" target=\"_blank\" title=\"https:\u002F\u002Fgithub.com\u002FSweetIQ\u002Fschemats\" ref=\"nofollow noopener noreferrer\"\u003ESchemats\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E简介：利用 Schemats，你可以基于（Postgres，MySQL）SQL 数据库中的 schema 自动生成 TypeScript 接口定义。\u003C\u002Fp\u003E\n\u003Cp\u003E在线地址：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fgithub.com%2FSweetIQ%2Fschemats\" target=\"_blank\" title=\"https:\u002F\u002Fgithub.com\u002FSweetIQ\u002Fschemats\" ref=\"nofollow noopener noreferrer\"\u003Egithub.com\u002FSweetIQ\u002Fsch…\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp9-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F20e5b6e73c5a48bd9118b5c4f61e6c43~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-116\"\u003E16.5 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fts-ast-viewer.com%2F\" target=\"_blank\" title=\"https:\u002F\u002Fts-ast-viewer.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript AST Viewer\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E简介：一款 TypeScript AST 在线工具，利用它你可以查看指定 TypeScript 代码对应的 AST（Abstract Syntax Tree）抽象语法树。\u003C\u002Fp\u003E\n\u003Cp\u003E在线地址：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fts-ast-viewer.com%2F\" target=\"_blank\" title=\"https:\u002F\u002Fts-ast-viewer.com\u002F\" ref=\"nofollow noopener noreferrer\"\u003Ets-ast-viewer.com\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp1-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002Fbaf0f0d1dd9c488893d0cc3c3eaa45bd~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E对于了解过 AST 的小伙伴来说，对 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fastexplorer.net%2F\" target=\"_blank\" title=\"https:\u002F\u002Fastexplorer.net\u002F\" ref=\"nofollow noopener noreferrer\"\u003Eastexplorer\u003C\u002Fa\u003E 这款在线工具应该不会陌生。该工具除了支持 JavaScript 之外，还支持 CSS、JSON、RegExp、GraphQL 和 Markdown 等格式的解析。\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-117\"\u003E16.6 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Ftypedoc.org%2F\" target=\"_blank\" title=\"https:\u002F\u002Ftypedoc.org\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeDoc\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E简介：TypeDoc 用于将 TypeScript 源代码中的注释转换为 HTML 文档或 JSON 模型。它可灵活扩展，并支持多种配置。\u003C\u002Fp\u003E\n\u003Cp\u003E在线地址：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Ftypedoc.org%2F\" target=\"_blank\" title=\"https:\u002F\u002Ftypedoc.org\u002F\" ref=\"nofollow noopener noreferrer\"\u003Etypedoc.org\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp9-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002F44b7ffe42d3a426d9c30e23b59f8db86~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Ch4 data-id=\"heading-118\"\u003E16.7 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Ftypescript-eslint.io%2F\" target=\"_blank\" title=\"https:\u002F\u002Ftypescript-eslint.io\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript ESLint\u003C\u002Fa\u003E\u003C\u002Fh4\u003E\n\u003Cblockquote\u003E\n\u003Cp\u003E简介：使用 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Ftypescript-eslint.io%2F\" target=\"_blank\" title=\"https:\u002F\u002Ftypescript-eslint.io\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript ESLint\u003C\u002Fa\u003E 可以帮助我们规范代码质量，提高团队开发效率。\u003C\u002Fp\u003E\n\u003Cp\u003E在线地址：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Ftypescript-eslint.io%2F\" target=\"_blank\" title=\"https:\u002F\u002Ftypescript-eslint.io\u002F\" ref=\"nofollow noopener noreferrer\"\u003Etypescript-eslint.io\u002F\u003C\u002Fa\u003E\u003C\u002Fp\u003E\n\u003C\u002Fblockquote\u003E\n\u003Cp\u003E\u003Cimg src=\"https:\u002F\u002Fp3-juejin.byteimg.com\u002Ftos-cn-i-k3u1fbpfcp\u002Fba2dc2fa049340d3bde452f6ebf2554f~tplv-k3u1fbpfcp-zoom-in-crop-mark:1512:0:0:0.awebp\" alt=\"\" loading=\"lazy\"\u003E\u003C\u002Fp\u003E\n\u003Cp\u003E对 \u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Ftypescript-eslint.io%2F\" target=\"_blank\" title=\"https:\u002F\u002Ftypescript-eslint.io\u002F\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript ESLint\u003C\u002Fa\u003E 项目感兴趣且想在项目中应用的小伙伴，可以参考 \u003Ca href=\"https:\u002F\u002Fjuejin.cn\u002Fpost\u002F6844903880006844424\" target=\"_blank\" title=\"https:\u002F\u002Fjuejin.cn\u002Fpost\u002F6844903880006844424\"\u003E“在Typescript项目中，如何优雅的使用ESLint和Prettier”\u003C\u002Fa\u003E 这篇文章。\u003C\u002Fp\u003E\n\u003Cp\u003E能坚持看到这里的小伙伴都是 “真爱”，如果你还意犹未尽，那就来看看本人整理的 Github 上 1.8K+ 的开源项目：\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fgithub.com%2Fsemlinker%2Fawesome-typescript\" target=\"_blank\" title=\"https:\u002F\u002Fgithub.com\u002Fsemlinker\u002Fawesome-typescript\" ref=\"nofollow noopener noreferrer\"\u003Eawesome-typescript\u003C\u002Fa\u003E。\u003C\u002Fp\u003E\n\u003Ch3 data-id=\"heading-119\"\u003E十七、参考资源\u003C\u002Fh3\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fmariusschulz.com%2Fblog%2Fthe-unknown-type-in-typescript\" target=\"_blank\" title=\"https:\u002F\u002Fmariusschulz.com\u002Fblog\u002Fthe-unknown-type-in-typescript\" ref=\"nofollow noopener noreferrer\"\u003Emariusschulz - the-unknown-type-in-typescript\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fjkchao.github.io%2Ftypescript-book-chinese%2Fproject%2FcompilationContext.html%23tsconfig-json\" target=\"_blank\" title=\"https:\u002F\u002Fjkchao.github.io\u002Ftypescript-book-chinese\u002Fproject\u002FcompilationContext.html#tsconfig-json\" ref=\"nofollow noopener noreferrer\"\u003E深入理解 TypeScript - 编译上下文\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003E\u003Ca href=\"https:\u002F\u002Flink.juejin.cn?target=https%3A%2F%2Fwww.typescriptlang.org%2Fdocs%2Fhandbook%2Frelease-notes%2Ftypescript-4-0.html\" target=\"_blank\" title=\"https:\u002F\u002Fwww.typescriptlang.org\u002Fdocs\u002Fhandbook\u002Frelease-notes\u002Ftypescript-4-0.html\" ref=\"nofollow noopener noreferrer\"\u003ETypeScript 4.0\u003C\u002Fa\u003E\u003C\u002Fli\u003E\n\u003Cli\u003ETypeScript Quickly\u003C\u002Fli\u003E\n\u003C\u002Ful\u003E",meta_info:"{\"plugins\":[3,5]}",catalog:"[{\"title\":\"一、TypeScript 是什么\",\"hash\":\"#heading-0\",\"deep\":1,\"children\":[{\"title\":\"1.1 TypeScript 与 JavaScript 的区别\",\"hash\":\"#heading-1\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"1.2 获取 TypeScript\",\"hash\":\"#heading-2\",\"deep\":2,\"children\":[{\"title\":\"1.安装 TypeScript\",\"hash\":\"#heading-3\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.验证 TypeScript\",\"hash\":\"#heading-4\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"3.编译 TypeScript 文件\",\"hash\":\"#heading-5\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"1.3 典型 TypeScript 工作流程\",\"hash\":\"#heading-6\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"1.4 TypeScript 初体验\",\"hash\":\"#heading-7\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"二、TypeScript 基础类型\",\"hash\":\"#heading-8\",\"deep\":1,\"children\":[{\"title\":\"2.1 Boolean 类型\",\"hash\":\"#heading-9\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.2 Number 类型\",\"hash\":\"#heading-10\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.3 String 类型\",\"hash\":\"#heading-11\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.4 Symbol 类型\",\"hash\":\"#heading-12\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.5 Array 类型\",\"hash\":\"#heading-13\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.6 Enum 类型\",\"hash\":\"#heading-14\",\"deep\":2,\"children\":[{\"title\":\"1.数字枚举\",\"hash\":\"#heading-15\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.字符串枚举\",\"hash\":\"#heading-16\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"3.常量枚举\",\"hash\":\"#heading-17\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"4.异构枚举\",\"hash\":\"#heading-18\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"2.7 Any 类型\",\"hash\":\"#heading-19\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.8 Unknown 类型\",\"hash\":\"#heading-20\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.9 Tuple 类型\",\"hash\":\"#heading-21\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.10 Void 类型\",\"hash\":\"#heading-22\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.11 Null 和 Undefined 类型\",\"hash\":\"#heading-23\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"2.12 object, Object 和 {} 类型\",\"hash\":\"#heading-24\",\"deep\":2,\"children\":[{\"title\":\"1.object 类型\",\"hash\":\"#heading-25\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.Object 类型\",\"hash\":\"#heading-26\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"3.{} 类型\",\"hash\":\"#heading-27\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"2.13 Never 类型\",\"hash\":\"#heading-28\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"三、TypeScript 断言\",\"hash\":\"#heading-29\",\"deep\":1,\"children\":[{\"title\":\"3.1 类型断言\",\"hash\":\"#heading-30\",\"deep\":2,\"children\":[{\"title\":\"1.“尖括号” 语法\",\"hash\":\"#heading-31\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.as 语法\",\"hash\":\"#heading-32\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"3.2 非空断言\",\"hash\":\"#heading-33\",\"deep\":2,\"children\":[{\"title\":\"1.忽略 undefined 和 null 类型\",\"hash\":\"#heading-34\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.调用函数时忽略 undefined 类型\",\"hash\":\"#heading-35\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"3.3 确定赋值断言\",\"hash\":\"#heading-36\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"四、类型守卫\",\"hash\":\"#heading-37\",\"deep\":1,\"children\":[{\"title\":\"4.1 in 关键字\",\"hash\":\"#heading-38\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"4.2 typeof 关键字\",\"hash\":\"#heading-39\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"4.3 instanceof 关键字\",\"hash\":\"#heading-40\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"4.4 自定义类型保护的类型谓词\",\"hash\":\"#heading-41\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"五、联合类型和类型别名\",\"hash\":\"#heading-42\",\"deep\":1,\"children\":[{\"title\":\"5.1 联合类型\",\"hash\":\"#heading-43\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"5.2 可辨识联合\",\"hash\":\"#heading-44\",\"deep\":2,\"children\":[{\"title\":\"1.可辨识\",\"hash\":\"#heading-45\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.联合类型\",\"hash\":\"#heading-46\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"3.类型守卫\",\"hash\":\"#heading-47\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"5.3 类型别名\",\"hash\":\"#heading-48\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"六、交叉类型\",\"hash\":\"#heading-49\",\"deep\":1,\"children\":[{\"title\":\"6.1 同名基础类型属性的合并\",\"hash\":\"#heading-50\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"6.2 同名非基础类型属性的合并\",\"hash\":\"#heading-51\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"七、TypeScript 函数\",\"hash\":\"#heading-52\",\"deep\":1,\"children\":[{\"title\":\"7.1 TypeScript 函数与 JavaScript 函数的区别\",\"hash\":\"#heading-53\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"7.2 箭头函数\",\"hash\":\"#heading-54\",\"deep\":2,\"children\":[{\"title\":\"1.常见语法\",\"hash\":\"#heading-55\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.使用示例\",\"hash\":\"#heading-56\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"7.3 参数类型和返回类型\",\"hash\":\"#heading-57\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"7.4 函数类型\",\"hash\":\"#heading-58\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"7.5 可选参数及默认参数\",\"hash\":\"#heading-59\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"7.6 剩余参数\",\"hash\":\"#heading-60\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"7.7 函数重载\",\"hash\":\"#heading-61\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"八、TypeScript 数组\",\"hash\":\"#heading-62\",\"deep\":1,\"children\":[{\"title\":\"8.1 数组解构\",\"hash\":\"#heading-63\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"8.2 数组展开运算符\",\"hash\":\"#heading-64\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"8.3 数组遍历\",\"hash\":\"#heading-65\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"九、TypeScript 对象\",\"hash\":\"#heading-66\",\"deep\":1,\"children\":[{\"title\":\"9.1 对象解构\",\"hash\":\"#heading-67\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"9.2 对象展开运算符\",\"hash\":\"#heading-68\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"十、TypeScript 接口\",\"hash\":\"#heading-69\",\"deep\":1,\"children\":[{\"title\":\"10.1 对象的形状\",\"hash\":\"#heading-70\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"10.2 可选 | 只读属性\",\"hash\":\"#heading-71\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"10.3 任意属性\",\"hash\":\"#heading-72\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"10.4 接口与类型别名的区别\",\"hash\":\"#heading-73\",\"deep\":2,\"children\":[{\"title\":\"1.Objects\u002FFunctions\",\"hash\":\"#heading-74\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.Other Types\",\"hash\":\"#heading-75\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"3.Extend\",\"hash\":\"#heading-76\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"4.Implements\",\"hash\":\"#heading-77\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"5.Declaration merging\",\"hash\":\"#heading-78\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true}],\"visible\":true},{\"title\":\"十一、TypeScript 类\",\"hash\":\"#heading-79\",\"deep\":1,\"children\":[{\"title\":\"11.1 类的属性与方法\",\"hash\":\"#heading-80\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"11.2 ECMAScript 私有字段\",\"hash\":\"#heading-81\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"11.3 访问器\",\"hash\":\"#heading-82\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"11.4 类的继承\",\"hash\":\"#heading-83\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"11.5 抽象类\",\"hash\":\"#heading-84\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"11.6 类方法重载\",\"hash\":\"#heading-85\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"十二、TypeScript 泛型\",\"hash\":\"#heading-86\",\"deep\":1,\"children\":[{\"title\":\"12.1 泛型语法\",\"hash\":\"#heading-87\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"12.2 泛型接口\",\"hash\":\"#heading-88\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"12.3 泛型类\",\"hash\":\"#heading-89\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"12.4 泛型工具类型\",\"hash\":\"#heading-90\",\"deep\":2,\"children\":[{\"title\":\"1.typeof\",\"hash\":\"#heading-91\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"2.keyof\",\"hash\":\"#heading-92\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"3.in\",\"hash\":\"#heading-93\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"4.infer\",\"hash\":\"#heading-94\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"5.extends\",\"hash\":\"#heading-95\",\"deep\":3,\"children\":[],\"visible\":true},{\"title\":\"6.Partial\",\"hash\":\"#heading-96\",\"deep\":3,\"children\":[],\"visible\":true}],\"visible\":true}],\"visible\":true},{\"title\":\"十三、TypeScript 装饰器\",\"hash\":\"#heading-97\",\"deep\":1,\"children\":[{\"title\":\"13.1 装饰器是什么\",\"hash\":\"#heading-98\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"13.2 装饰器的分类\",\"hash\":\"#heading-99\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"13.3 类装饰器\",\"hash\":\"#heading-100\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"13.4 属性装饰器\",\"hash\":\"#heading-101\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"13.5 方法装饰器\",\"hash\":\"#heading-102\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"13.6 参数装饰器\",\"hash\":\"#heading-103\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"十四、TypeScript 4.0 新特性\",\"hash\":\"#heading-104\",\"deep\":1,\"children\":[{\"title\":\"14.1 构造函数的类属性推断\",\"hash\":\"#heading-105\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"14.2 标记的元组元素\",\"hash\":\"#heading-106\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"十五、编译上下文\",\"hash\":\"#heading-107\",\"deep\":1,\"children\":[{\"title\":\"15.1 tsconfig.json 的作用\",\"hash\":\"#heading-108\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"15.2 tsconfig.json 重要字段\",\"hash\":\"#heading-109\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"15.3 compilerOptions 选项\",\"hash\":\"#heading-110\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"十六、TypeScript 开发辅助工具\",\"hash\":\"#heading-111\",\"deep\":1,\"children\":[{\"title\":\"16.1 TypeScript Playground\",\"hash\":\"#heading-112\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"16.2 TypeScript UML Playground\",\"hash\":\"#heading-113\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"16.3 JSON TO TS\",\"hash\":\"#heading-114\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"16.4 Schemats\",\"hash\":\"#heading-115\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"16.5 TypeScript AST Viewer\",\"hash\":\"#heading-116\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"16.6 TypeDoc\",\"hash\":\"#heading-117\",\"deep\":2,\"children\":[],\"visible\":true},{\"title\":\"16.7 TypeScript ESLint\",\"hash\":\"#heading-118\",\"deep\":2,\"children\":[],\"visible\":true}],\"visible\":true},{\"title\":\"十七、参考资源\",\"hash\":\"#heading-119\",\"deep\":1,\"children\":[],\"visible\":true}]",homepage_top_time:-62135596800,homepage_top_status:b,content_count:8108,read_time:"27分钟",pics_expire_time:b},author_user_info:{user_id:v,user_name:D,company:e,job_title:"🏆掘金签约作者 | 公众号@全栈修仙之路",avatar_large:"https:\u002F\u002Fp26-passport.byteacctimg.com\u002Fimg\u002Fuser-avatar\u002F075d8e781ba84bf64035ac251988fb93~300x300.image",level:E,description:"聚焦全栈，专注分享 TS、Vue 3、前端架构等技术干货。",followee_count:70,follower_count:19945,post_article_count:99,digg_article_count:587,got_digg_count:42894,got_view_count:2188757,post_shortmsg_count:q,digg_shortmsg_count:39,isfollowed:a,favorable_author:g,power:F,study_point:b,university:{university_id:f,name:e,logo:e},major:{major_id:f,parent_id:f,name:e},student_status:b,select_event_count:b,select_online_course_count:b,identity:b,is_select_annual:a,select_annual_rank:b,annual_list_type:b,extraMap:{},is_logout:b,annual_info:[],account_amount:b,user_growth_info:{user_id:764915822103079,jpower:F,jscore:4076.3,jpower_level:E,jscore_level:6,jscore_title:"杰出掘友",author_achievement_list:[g],vip_level:q,vip_title:"渐入佳境",jscore_next_level_score:7000,jscore_this_level_mini_score:2000,vip_score:300},is_vip:a,become_author_days:b,collection_set_article_count:b,recommend_article_count_daily:b,article_collect_count_daily:b,user_priv_info:{administrator:b,builder:b,favorable_author:b,book_author:b,forbidden_words:b,can_tag_cnt:b,auto_recommend:b,signed_author:b,popular_author:b,can_add_video:b}},category:{category_id:"6809637767543259144",category_name:"前端",category_url:"frontend",rank:s,back_ground:"https:\u002F\u002Flc-mhke0kuv.cn-n1.lcfile.com\u002F8c95587526f346c0.png",icon:"https:\u002F\u002Flc-mhke0kuv.cn-n1.lcfile.com\u002F1c40f5eaba561e32.png",ctime:1457483942,mtime:1432503190,show_type:q,item_type:s,promote_tag_cap:4,promote_priority:s,id:"6809637767543259144",name:"前端",title:"前端",alias:"frontend"},tags:[{entriesCount:l,subscribed:a,id:"6809640407484334093",tag_id:"6809640407484334093",tag_name:"前端",color:"#60ADFF",icon:"https:\u002F\u002Fp1-jj.byteimg.com\u002Ftos-cn-i-t2oaga2asx\u002Fleancloud-assets\u002Fbac28828a49181c34110.png~tplv-t2oaga2asx-image.image",back_ground:e,show_navi:g,ctime:1435971546,mtime:1729869902,id_type:9,tag_alias:e,post_article_count:517476,concern_user_count:695711,title:"前端",tagId:"6809640407484334093",articleCount:517476,subscribersCount:695711,createdAt:c,updatedAt:c},{entriesCount:l,subscribed:a,id:"6809640543006490638",tag_id:"6809640543006490638",tag_name:"TypeScript",color:"#0061c4",icon:"https:\u002F\u002Fp1-jj.byteimg.com\u002Ftos-cn-i-t2oaga2asx\u002Fleancloud-assets\u002Fd788a559489fa6e30b25.png~tplv-t2oaga2asx-image.image",back_ground:e,show_navi:b,ctime:1441228068,mtime:1729869903,id_type:9,tag_alias:e,post_article_count:11999,concern_user_count:118926,title:"TypeScript",tagId:"6809640543006490638",articleCount:11999,subscribersCount:118926,createdAt:c,updatedAt:c}],user_interact:{id:6872111128135074000,omitempty:s,user_id:b,is_digg:a,is_follow:a,is_collect:a,collect_set_count:b},org:{is_followed:a},req_id:"021729870375233fdbddc02000f04773a4957630000007bce7d77",status:{push_status:b},theme_list:[],extra:{currentVersion:"1",hasAuth:G,imageExpiredEvent:G},title:w,user:H,viewCount:l,commentsCount:C,isEvent:l,abstract:x,latestCommentAt:c,createdAt:new Date(1600038282000),updatedAt:c,isTopicEvent:a,likedCount:r,likeCount:r,content:y,originalUrl:e,type:"post",collected:a,viewsCount:A,username:D,viewerHasLiked:a,draftId:z,collectionCount:B,isCache:d},entryView:{},author:H,adEntryList:[],relatedEntryList:[],selectedList:[],linkVotingList:[],userAnnuals:[],columnList:[],hitArticleCache:d,authorCard:{},relatedLoaded:a,dynamicDataReady:a,followAuthorPopupTime:b,followAuthorPopupType:b,authorBlockVisible:b,compVisible:{},version:g,actionType:{FETCH:"view\u002Fcolumn\u002FFETCH",FETCH_RELATED:"view\u002Fcolumn\u002FFETCH_RELATED",FETCH_RECOMMEND:"view\u002Fcolumn\u002FFETCH_RECOMMEND",FETCH_SELECTED:"view\u002Fcolumn\u002FFETCH_SELECTED",FETCH_ADDITIONAL:"view\u002Fcolumn\u002FFETCH_ADDITIONAL",FETCH_SIDEBAR_ADENTRY:"view\u002Fcolumn\u002FFETCH_SIDEBAR_ADENTRY",FETCH_AUTHOR_EXTRA:"view\u002Fcolumn\u002FFETCH_AUTHOR_EXTRA",MD_FALLBACK_RENDER:"view\u002Fcolumn\u002FMD_FALLBACK_RENDER",RESET:"view\u002Fcolumn\u002FRESET"},recommendedArticleList:{list:[],cursor:f,loading:a,skeleton:a,hasMore:a,articleId:e,actionType:{UPDATE_STATE:"view\u002Fcolumn\u002Frecommend-List\u002FUPDATE_STATE",FETCH_MORE:"view\u002Fcolumn\u002Frecommend-List\u002FFETCH_MORE",FETCH:"view\u002Fcolumn\u002Frecommend-List\u002FFETCH",RESET:"view\u002Fcolumn\u002Frecommend-List\u002FRESET"}}},collection:{collection:{author:{}},actionType:{FETCH:"@\u002Fview\u002Fcollection\u002FFETCH",REFRESH:"@\u002Fview\u002Fcollection\u002FREFRESH",RESET:"@\u002Fview\u002Fcollection\u002FRESET"},list:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Fcollection\u002Flist\u002FUPDATE",FETCH:"@\u002Fview\u002Fcollection\u002Flist\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Fcollection\u002Flist\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Fcollection\u002Flist\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fcollection\u002Flist\u002FRESET"},id:e,sort:n}},gettingStarted:{category:{},actionType:{UPDATE_STATE:"@\u002Fview\u002FgettingStarted\u002FUPDATE_STATE",FOLLOW:"@\u002Fview\u002FgettingStarted\u002FFOLLOW",RESET:"@\u002Fview\u002FgettingStarted\u002FRESET",UPDATE_CATEGORY:"@\u002Fview\u002FgettingStarted\u002FUPDATE_CATEGORY"}},pin:{pin:{user:{},imageUrlList:[]},pinList:[],actionType:{FETCH:"@\u002Fview\u002Fpin\u002FFETCH",RESET:"@\u002Fview\u002Fpin\u002FRESET"},sidebar:{list:[],after:e,loading:a,isRecommend:a,hasNextPage:d,actionType:{UPDATE_STATE:"@\u002Fview\u002Fpin\u002Fsidebar\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fpin\u002Fsidebar\u002FFETCH_MORE",FETCH:"@\u002Fview\u002Fpin\u002Fsidebar\u002FFETCH",RESET:"@\u002Fview\u002Fpin\u002Fsidebar\u002FRESET"}},commentList:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Fpin\u002FcommentList\u002FUPDATE",FETCH:"@\u002Fview\u002Fpin\u002FcommentList\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Fpin\u002FcommentList\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Fpin\u002FcommentList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fpin\u002FcommentList\u002FRESET"},pinId:c},subCommentList:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Fpin\u002FsubCommentList\u002FUPDATE",FETCH:"@\u002Fview\u002Fpin\u002FsubCommentList\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Fpin\u002FsubCommentList\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Fpin\u002FsubCommentList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fpin\u002FsubCommentList\u002FRESET"},commentId:c}},topic:{topic:e,followedTopicList:[],actionType:{FETCH:"@\u002Fview\u002Ftopic\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Ftopic\u002FUPDATE_STATE",RESET:"@\u002Fview\u002Ftopic\u002FRESET"},allTopicList:{pageSize:I,page:b,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Ftopic\u002FallTopicList\u002FUPDATE",FETCH:"@\u002Fview\u002Ftopic\u002FallTopicList\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Ftopic\u002FallTopicList\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Ftopic\u002FallTopicList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Ftopic\u002FallTopicList\u002FRESET"},sortType:m},pinlist:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Ftopic\u002FpinList\u002FUPDATE",FETCH:"@\u002Fview\u002Ftopic\u002FpinList\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Ftopic\u002FpinList\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Ftopic\u002FpinList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Ftopic\u002FpinList\u002FRESET"},sortType:p},sidebar:{actionType:{RESET:"@\u002Fview\u002Ftopic\u002Fsidebar\u002FRESET",UPDATE_STATE:"@\u002Fview\u002Ftopic\u002Fsidebar\u002FUPDATE_STATE"},attender:{pageSize:h,page:g,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Ftopic\u002Fsidebar\u002Fattender\u002FUPDATE",FETCH:"@\u002Fview\u002Ftopic\u002Fsidebar\u002Fattender\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Ftopic\u002Fsidebar\u002Fattender\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Ftopic\u002Fsidebar\u002Fattender\u002FFETCH_MORE",RESET:"@\u002Fview\u002Ftopic\u002Fsidebar\u002Fattender\u002FRESET"},topicId:c}},followedList:{pageSize:I,page:b,total:b,pointer:c,lastPointer:c,list:[],loading:a,error:c,canPrev:d,canNext:d,linkList:[],lastFetchOnServer:a,actionType:{UPDATE:"@\u002Fview\u002Ftopic\u002FfollowedList\u002FUPDATE",FETCH:"@\u002Fview\u002Ftopic\u002FfollowedList\u002FFETCH",FORCE_FETCH:"@\u002Fview\u002Ftopic\u002FfollowedList\u002FFORCE_FETCH",FETCH_MORE:"@\u002Fview\u002Ftopic\u002FfollowedList\u002FFETCH_MORE",RESET:"@\u002Fview\u002Ftopic\u002FfollowedList\u002FRESET"},after:b}},recommendationIndex:{actionType:{FETCH_USER:"@\u002Fview\u002Frecommendation\u002FFETCH_USER",FETCH_MORE:"@\u002Fview\u002Frecommendation\u002FFETCH_MORE",RESET:"@\u002Fview\u002Frecommendation\u002FRESET",FETCH:"@\u002Fview\u002Frecommendation\u002FFETCH"},cursor:e,hasMore:e,userList:[],loading:a,skeleton:d,category:j,categoryNavList:[],serverRenderUserList:a},event:{event:{},loading:a,user:{},actionType:{FETCH:"view\u002Fevent\u002FFETCH",RESET:"view\u002Fevent\u002FRESET"}},coursesIndex:{loading:a,list:[],sort:"online",actionType:{FETCH:"view\u002Fcourses\u002FFETCH",RESET:"view\u002Fcourses\u002FRESET",FETCH_MORE:"view\u002Fcourses\u002FFETCH_MORE"}},team:{team:{},loading:d,actionType:{FETCH:"@\u002Fview\u002Fteam\u002FFETCH",RESET:"@\u002Fview\u002Fteam\u002FRESET",UPDATE:"@\u002Fview\u002Fteam\u002FUPDATE",FOLLOW:"@\u002Fview\u002Fteam\u002FFOLLOW"},detailList:{actionType:{RESET:"@\u002Fview\u002Fteam\u002FdetailList\u002FRESET"},posts:{list:[],hasMore:a,skeleton:a,loading:a,sort:n,actionType:{FETCH:"@\u002Fview\u002Fteam\u002FdetailList\u002Fposts\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fteam\u002FdetailList\u002Fposts\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fteam\u002FdetailList\u002Fposts\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fteam\u002FdetailList\u002Fposts\u002FRESET"}},pins:{list:[],hasMore:a,loading:a,skeleton:d,actionType:{FETCH:"@\u002Fview\u002Fteam\u002FdetailList\u002Fpins\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fteam\u002FdetailList\u002Fpins\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fteam\u002FdetailList\u002Fpins\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fteam\u002FdetailList\u002Fpins\u002FRESET"}},hire:{list:[],hasMore:a,cursor:f,loading:a,skeleton:d,actionType:{FETCH:"@\u002Fview\u002Fteam\u002FdetailList\u002Fhire\u002FFETCH",UPDATE_STATE:"@\u002Fview\u002Fteam\u002FdetailList\u002Fhire\u002FUPDATE_STATE",FETCH_MORE:"@\u002Fview\u002Fteam\u002FdetailList\u002Fhire\u002FFETCH_MORE",RESET:"@\u002Fview\u002Fteam\u002FdetailList\u002Fhire\u002FRESET"}}}},couponList:{list:{"0":t,"1":t,"2":t},showTooltip:a},payment:{selectedDiscount:{},bookletDetail:{},coupons:{availables:[],unavailables:[]},discountList:[]},activityVip:{selectedVipSku:{}}},component:{indexAside:{bannerList:[],userList:[],botList:[],botCursor:e,actionType:{FETCH_BANNER:"@\u002Fcomponent\u002Faside\u002FFETCH_BANNER",FETCH_USER:"@\u002Fcomponent\u002Faside\u002FFETCH_USER",CLOSE_BANNER:"@\u002Fcomponent\u002Faside\u002FCLOSE_BANNER",FETCH_BOT:"@\u002Fcomponent\u002Faside\u002FFETCH_BOT"}}},dislike:{whiteList:["1398234521548542",J,K,L,M,N,O],officialList:[J,K,"3984285868490807",L,"3562073405009031",M,"4433674252325966","53218623894222","2110693287406632","2498524693925623","430664288836334",N,O,"2832783991648407","3386151545092589"]},ore:{oreCount:b},avatarMenuInfo:{user_basic:{},user_counter:{},user_growth_info:{}},common:{theme:"light",isFollowSystem:a},env:{ua:"Mozilla\u002F5.0 (Linux; Android 6.0.1; Nexus 5X Build\u002FMMB29P) AppleWebKit\u002F537.36 (KHTML, like Gecko) Chrome\u002F131.0.6778.69 Mobile Safari\u002F537.36 (compatible; Googlebot\u002F2.1; +http:\u002F\u002Fwww.google.com\u002Fbot.html)",serverEnv:"production",logId:"20241119181707FA7F6C3FFBE43B0C5F21"},auth:{user:c,clientId:c,token:c,qrCode:c,qrCodeStatus:c,qrCodeToken:c,userInitiated:a,loginTeaParams:l},tag:{subscribedTagList:[]},entry:{isLikeLoading:a},collection:{},comment:{},bookComment:{},repoComment:{},category:{list:[]},user:{subscribedTagList:[]},notification:{unreadCount:{user:b,system:b,total:b}},error:{location:c,errorView:c,statusCode:200,needRiskModal:a,riskAppealUrl:e},abTest:{info:{}},suspensionPanel:{needSuspension:d},pinComment:{},pin:{deleteDialogVisible:a,reportDialogVisible:a,targetPin:c,isOnFocus:a},topic:{visible:a},activity:{"2020":{},offer:{is_show:b,start_time:b},voteData:l},header:{leadStep:b,isPopupZlink:a},tcc:{tccConfig:c},adAssets:{adverts:[]},route:{name:P,path:Q,hash:e,query:{searchId:"2024082615154575C9BDFE026D060D08FE"},params:{id:k},fullPath:"\u002Fpost\u002F6872111128135073806?searchId=2024082615154575C9BDFE026D060D08FE",meta:{isAvailableDarkMode:d},from:{name:c,path:R,hash:e,query:{},params:{},fullPath:R,meta:{}}}},serverRendered:d,routePath:Q,config:{API_HOST:"api.juejin.cn",CAPTCHA_HOST:"verify.snssdk.com",PLATFORM_APPID:{wechat:1277,weibo:1276,github:1045,wechatApp:1070},SCM_VERSION:"1.0.0.515",REGISTERED_ROUTES:[P,"selfPost","noCDNPost","SeoSearch"],http:{}},globalRefs:{}}}(false,0,null,true,"","0",1,20,"topic","recommended","6872111128135073806",void 0,"hot","newest","following","popular",3,5214,2,{},"created","764915822103079","一份不可多得的 TS 学习指南（1.8W字）","阿宝哥第一次使用 TypeScript 是在 Angular 2.x 项目中，那时候 TypeScript 还没有进入大众的视野。然而现在学习 TypeScript 的小伙伴越来越多了，本文阿宝哥将从 16 个方面入手，带你一步步学习 TypeScript，感兴趣的小伙伴不要错…","deprecated","6871373256880816141",220556,9328,236,"阿宝哥",7,127041,"false",{},100,"1556564194374926","940837680722589","2780007432717400","1204720443866983","852876722177533","3227821828225517","column","\u002Fpost\u002F6872111128135073806","\u002F"));</script><script src="./ts和js的区别_files/24ba9b3.js.下载" defer=""></script><script src="./ts和js的区别_files/b23e408.js.下载" defer=""></script><script src="./ts和js的区别_files/65f3008.js.下载" defer=""></script><script src="./ts和js的区别_files/7161742.js.下载" defer=""></script><script src="./ts和js的区别_files/235eadc.js.下载" defer=""></script><script src="./ts和js的区别_files/17d6529.js.下载" defer=""></script><script src="./ts和js的区别_files/2675b41.js.下载" defer=""></script>
  

<link href="./ts和js的区别_files/12.b8a5429.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/0.628f5a2.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/default.291588e.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/29.9ccface.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/41.e2822bd.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/56.6c20120.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/49.814dd70.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/26.226eb75.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/44.af49dd2.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/54.d07dab4.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/53.a12b7c3.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/42.f6517d5.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/21.7f8b2fc.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/39.f010777.css" rel="stylesheet" type="text/css"><link href="./ts和js的区别_files/40.eae763c.css" rel="stylesheet" type="text/css"><div data-v-813246ce="" data-transfer="true" class="upgrade-new-modal byte-modal v-transfer-dom"><div class="byte-modal__mask" style="z-index: 1001; display: none;"></div><div class="byte-modal__wrapper" style="z-index: 1001; display: none;"><div class="byte-modal__content" style="width: 311px;"><div class="byte-modal__header"><span class="byte-modal__title"></span><!----></div><div class="byte-modal__body"> <!----> <div data-v-813246ce="" class="close-icon"><img data-v-813246ce="" src="./ts和js的区别_files/8867e249c23a7c0ea596c139befc04d7.svg" alt=""></div></div><!----></div></div></div><div data-v-41eefe39="" data-transfer="true" class="lead byte-modal v-transfer-dom"><div class="byte-modal__mask" style="z-index: 1002; display: none;"></div><div class="byte-modal__wrapper" style="z-index: 1002; display: none;"><div class="byte-modal__content" style="width: 500px;"><div class="byte-modal__header"><img data-v-41eefe39="" src="./ts和js的区别_files/MaskGroup.13dfc4f.png" alt="" loading="lazy" class="header-bgc"> <span data-v-41eefe39="" class="header-title">选择你感兴趣的技术方向</span><span aria-label="Close" class="byte-modal__headerbtn"><i class="byte-icon byte-icon--close"><svg t="1561638608887" class="icon" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="441911" xmlns:xlink="http://www.w3.org/1999/xlink"><path d="M512 448l288-288c6.4-6.4 19.2-6.4 32 0l25.6 32c6.4 6.4 6.4 19.2 0 32L569.6 505.6l288 288c6.4 6.4 6.4 19.2 0 32l-32 32c-6.4 6.4-19.2 6.4-32 0L512 569.6l-288 288c-6.4 6.4-19.2 6.4-32 0l-32-32c-6.4-6.4-6.4-19.2 0-32L448 505.6 160 224c-6.4-12.8-6.4-25.6 0-32l32-32c6.4-6.4 19.2-6.4 32 0L512 448z" p-id="441912"></path><path d="M512 448l288-288c6.4-6.4 19.2-6.4 32 0l25.6 32c6.4 6.4 6.4 19.2 0 32L569.6 505.6l288 288c6.4 6.4 6.4 19.2 0 32l-32 32c-6.4 6.4-19.2 6.4-32 0L512 569.6l-288 288c-6.4 6.4-19.2 6.4-32 0l-32-32c-6.4-6.4-6.4-19.2 0-32L448 505.6 160 224c-6.4-12.8-6.4-25.6 0-32l32-32c6.4-6.4 19.2-6.4 32 0L512 448z" p-id="441913"></path></svg></i></span></div><div class="byte-modal__body"> <div data-v-41eefe39="" class="classify-box"><div data-v-41eefe39="" class="technology-box"><div data-v-41eefe39="" class="wrap"><svg data-v-41eefe39="" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="left"><g data-v-41eefe39="" id="&amp;#230;&amp;#161;&amp;#136;&amp;#228;&amp;#190;&amp;#139;"><path data-v-41eefe39="" id="Subtract" fill-rule="evenodd" clip-rule="evenodd" d="M2 2.5C1.44772 2.5 1 2.94772 1 3.5V11.5C1 12.0523 1.44772 12.5 2 12.5H14C14.5523 12.5 15 12.0523 15 11.5V3.5C15 2.94772 14.5523 2.5 14 2.5H2ZM4.5 7.5C4.22386 7.5 4 7.72386 4 8V10C4 10.2761 4.22386 10.5 4.5 10.5H5C5.27614 10.5 5.5 10.2761 5.5 10V8C5.5 7.72386 5.27614 7.5 5 7.5H4.5ZM7 5.5C7 5.22386 7.22386 5 7.5 5H8C8.27614 5 8.5 5.22386 8.5 5.5V10C8.5 10.2761 8.27614 10.5 8 10.5H7.5C7.22386 10.5 7 10.2761 7 10V5.5ZM10.5 6.5C10.2239 6.5 10 6.72386 10 7V10C10 10.2761 10.2239 10.5 10.5 10.5H11C11.2761 10.5 11.5 10.2761 11.5 10V7C11.5 6.72386 11.2761 6.5 11 6.5H10.5Z" fill="#86909C"></path><rect data-v-41eefe39="" id="Rectangle 282" x="3" y="13.5" width="10" height="1.3" rx="0.5" fill="#86909C"></rect></g></svg> <div data-v-41eefe39="" class="right"><span data-v-41eefe39="" class="descrip">
              后端
            </span></div></div></div><div data-v-41eefe39="" class="technology-box"><div data-v-41eefe39="" class="wrap"><svg data-v-41eefe39="" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="left"><g data-v-41eefe39="" id="&amp;#230;&amp;#161;&amp;#136;&amp;#228;&amp;#190;&amp;#139;"><path data-v-41eefe39="" id="Subtract" fill-rule="evenodd" clip-rule="evenodd" d="M2 2.5C1.44772 2.5 1 2.94772 1 3.5V6.5H15V3.5C15 2.94772 14.5523 2.5 14 2.5H2ZM15 7.8H1V13.5C1 14.0523 1.44772 14.5 2 14.5H14C14.5523 14.5 15 14.0523 15 13.5V7.8ZM8.65811 8.52566C8.92009 8.61298 9.06167 8.89614 8.97434 9.15811L7.97434 12.1581C7.88702 12.4201 7.60386 12.5617 7.34189 12.4743C7.07991 12.387 6.93833 12.1039 7.02566 11.8419L8.02566 8.84189C8.11298 8.57991 8.39614 8.43833 8.65811 8.52566ZM3.5 5.5C3.77614 5.5 4 5.27614 4 5C4 4.72386 3.77614 4.5 3.5 4.5C3.22386 4.5 3 4.72386 3 5C3 5.27614 3.22386 5.5 3.5 5.5ZM5.5 5C5.5 5.27614 5.27614 5.5 5 5.5C4.72386 5.5 4.5 5.27614 4.5 5C4.5 4.72386 4.72386 4.5 5 4.5C5.27614 4.5 5.5 4.72386 5.5 5ZM6.5 5.5C6.77614 5.5 7 5.27614 7 5C7 4.72386 6.77614 4.5 6.5 4.5C6.22386 4.5 6 4.72386 6 5C6 5.27614 6.22386 5.5 6.5 5.5ZM6.44721 9.27639C6.57071 9.52338 6.4706 9.82372 6.22361 9.94721L5.11803 10.5L6.22361 11.0528C6.4706 11.1763 6.57071 11.4766 6.44721 11.7236C6.32372 11.9706 6.02338 12.0707 5.77639 11.9472L3.77639 10.9472C3.607 10.8625 3.5 10.6894 3.5 10.5C3.5 10.3106 3.607 10.1375 3.77639 10.0528L5.77639 9.05279C6.02338 8.92929 6.32372 9.0294 6.44721 9.27639ZM9.77639 9.94721C9.5294 9.82372 9.42929 9.52338 9.55279 9.27639C9.67628 9.0294 9.97662 8.92929 10.2236 9.05279L12.2236 10.0528C12.393 10.1375 12.5 10.3106 12.5 10.5C12.5 10.6894 12.393 10.8625 12.2236 10.9472L10.2236 11.9472C9.97662 12.0707 9.67628 11.9706 9.55279 11.7236C9.42929 11.4766 9.5294 11.1763 9.77639 11.0528L10.882 10.5L9.77639 9.94721Z" fill="#86909C"></path></g></svg> <div data-v-41eefe39="" class="right"><span data-v-41eefe39="" class="descrip">
              前端
            </span></div></div></div><div data-v-41eefe39="" class="technology-box"><div data-v-41eefe39="" class="wrap"><svg data-v-41eefe39="" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="left"><g data-v-41eefe39="" id="&amp;#230;&amp;#161;&amp;#136;&amp;#228;&amp;#190;&amp;#139;"><rect data-v-41eefe39="" id="Rectangle 287" x="5.7002" y="12.5" width="1.3" height="3" rx="0.5" fill="#86909C"></rect><rect data-v-41eefe39="" id="Rectangle 289" x="1" y="6.5" width="1.3" height="6" rx="0.5" fill="#86909C"></rect><rect data-v-41eefe39="" id="Rectangle 290" x="13.7002" y="6.5" width="1.3" height="6" rx="0.5" fill="#86909C"></rect><rect data-v-41eefe39="" id="Rectangle 288" x="9" y="12.5" width="1.3" height="3" rx="0.5" fill="#86909C"></rect><path data-v-41eefe39="" id="Subtract" fill-rule="evenodd" clip-rule="evenodd" d="M13 5.86364V12.5C13 13.0523 12.5523 13.5 12 13.5H4C3.44772 13.5 3 13.0523 3 12.5V5.86364V5.77273C3 5.74067 3.00151 5.70897 3.00446 5.67768C3.11608 3.35397 5.30996 1.5 8 1.5C10.69 1.5 12.8839 3.35397 12.9955 5.67768C12.9985 5.70897 13 5.74067 13 5.77273V5.86364ZM7 6.25C7 6.66421 6.66421 7 6.25 7C5.83579 7 5.5 6.66421 5.5 6.25C5.5 5.83579 5.83579 5.5 6.25 5.5C6.66421 5.5 7 5.83579 7 6.25ZM9.75 7C10.1642 7 10.5 6.66421 10.5 6.25C10.5 5.83579 10.1642 5.5 9.75 5.5C9.33579 5.5 9 5.83579 9 6.25C9 6.66421 9.33579 7 9.75 7Z" fill="#86909C"></path></g></svg> <div data-v-41eefe39="" class="right"><span data-v-41eefe39="" class="descrip">
              Android
            </span></div></div></div><div data-v-41eefe39="" class="technology-box"><div data-v-41eefe39="" class="wrap"><svg data-v-41eefe39="" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="left"><g data-v-41eefe39=""><g data-v-41eefe39="" id="pingguo-2 1"><path data-v-41eefe39="" id="Vector" d="M11.821 8.9388C11.8035 7.16562 13.267 6.31556 13.3322 6.27312C12.5097 5.06956 11.2287 4.90506 10.7724 4.88581C9.6821 4.77556 8.64523 5.52763 8.09179 5.52763C7.5401 5.52763 6.6861 4.902 5.78179 4.91863C4.59354 4.93613 3.49761 5.60944 2.88598 6.67387C1.65136 8.8163 2.56967 11.9899 3.77323 13.7277C4.36123 14.5782 5.06254 15.5332 5.98304 15.4991C6.86942 15.4637 7.20498 14.9255 8.27642 14.9255C9.34785 14.9255 9.64929 15.4991 10.5877 15.4816C11.5415 15.4637 12.1461 14.6149 12.7302 13.7618C13.4052 12.7752 13.6835 11.8197 13.6997 11.7707C13.6787 11.7611 11.8394 11.0567 11.821 8.9388ZM10.0584 3.73563C10.547 3.14281 10.8769 2.32031 10.7868 1.5C10.0829 1.52888 9.22973 1.969 8.72485 2.56006C8.2716 3.08463 7.87523 3.922 7.98154 4.72613C8.76729 4.78737 9.56923 4.32669 10.0584 3.73563Z" fill="#86909C"></path></g></g><defs data-v-41eefe39=""></defs></svg> <div data-v-41eefe39="" class="right"><span data-v-41eefe39="" class="descrip">
              iOS
            </span></div></div></div><div data-v-41eefe39="" class="technology-box"><div data-v-41eefe39="" class="wrap"><svg data-v-41eefe39="" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="left"><g data-v-41eefe39="" id="&amp;#230;&amp;#161;&amp;#136;&amp;#228;&amp;#190;&amp;#139;"><rect data-v-41eefe39="" id="Rectangle 289" x="1" y="8.5" width="1.3" height="5" rx="0.5" fill="#86909C"></rect><rect data-v-41eefe39="" id="Rectangle 292" x="14" y="8.5" width="1.3" height="5" rx="0.5" fill="#86909C"></rect><rect data-v-41eefe39="" id="Rectangle 293" x="7.5" y="4.5" width="1" height="3" rx="0.5" fill="#86909C"></rect><circle data-v-41eefe39="" id="Ellipse 25" cx="8" cy="2.5" r="1" fill="#86909C"></circle><path data-v-41eefe39="" id="Subtract" fill-rule="evenodd" clip-rule="evenodd" d="M3 7.5C3 6.94772 3.44772 6.5 4 6.5H12C12.5523 6.5 13 6.94772 13 7.5V14.5C13 15.0523 12.5523 15.5 12 15.5H4C3.44772 15.5 3 15.0523 3 14.5V7.5ZM7 11.25C7 11.6642 6.66421 12 6.25 12C5.83579 12 5.5 11.6642 5.5 11.25C5.5 10.8358 5.83579 10.5 6.25 10.5C6.66421 10.5 7 10.8358 7 11.25ZM9.75 12C10.1642 12 10.5 11.6642 10.5 11.25C10.5 10.8358 10.1642 10.5 9.75 10.5C9.33579 10.5 9 10.8358 9 11.25C9 11.6642 9.33579 12 9.75 12Z" fill="#86909C"></path></g></svg> <div data-v-41eefe39="" class="right"><span data-v-41eefe39="" class="descrip">
              人工智能
            </span></div></div></div><div data-v-41eefe39="" class="technology-box"><div data-v-41eefe39="" class="wrap"><svg data-v-41eefe39="" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="left"><g data-v-41eefe39="" id="&amp;#230;&amp;#161;&amp;#136;&amp;#228;&amp;#190;&amp;#139;"><g data-v-41eefe39="" id="kaifagongjuicon-hui 1"><path data-v-41eefe39="" id="Vector" d="M14.212 5.04986L13.497 5.76886C13.3158 5.95088 13.1005 6.09531 12.8633 6.19386C12.6261 6.29242 12.3718 6.34315 12.115 6.34315C11.8582 6.34315 11.6039 6.29242 11.3667 6.19386C11.1295 6.09531 10.9142 5.95088 10.733 5.76886C10.3664 5.39915 10.1606 4.89955 10.1606 4.37886C10.1606 3.85817 10.3664 3.35857 10.733 2.98886L11.448 2.26986C11.843 1.87286 11.579 1.40486 10.868 1.51686C10.028 1.64786 9.262 2.07586 8.709 2.72286C8.005 3.41786 7.682 4.66486 7.922 5.81786L1.927 11.8469C1.56096 12.2165 1.35562 12.7157 1.35562 13.2359C1.35562 13.7561 1.56096 14.2552 1.927 14.6249C2.10804 14.807 2.32329 14.9515 2.56038 15.0501C2.79747 15.1487 3.05172 15.1995 3.3085 15.1995C3.56528 15.1995 3.81953 15.1487 4.05662 15.0501C4.29371 14.9515 4.50896 14.807 4.69 14.6249L10.686 8.59486C11.2693 8.7189 11.8745 8.69473 12.446 8.52459C13.0176 8.35444 13.5375 8.04373 13.958 7.62086C14.5581 7.01861 14.9243 6.22244 14.991 5.37486C15.071 4.91886 14.607 4.65286 14.212 5.04986ZM3.768 13.6979C3.67659 13.7885 3.56041 13.85 3.4341 13.8747C3.30779 13.8994 3.17699 13.8861 3.05819 13.8366C2.93939 13.7871 2.8379 13.7036 2.76651 13.5965C2.69511 13.4894 2.65701 13.3636 2.657 13.2349C2.65647 13.0618 2.72462 12.8957 2.84649 12.7729C2.96836 12.6501 3.13399 12.5807 3.307 12.5799C3.487 12.5799 3.651 12.6529 3.768 12.7719C3.888 12.8889 3.96 13.0539 3.96 13.2349C3.9604 13.3209 3.94363 13.4062 3.91066 13.4857C3.87769 13.5652 3.82919 13.6373 3.768 13.6979ZM3.118 5.16786L5.377 7.43986L6.297 6.51286L4.04 4.24286L3.535 3.27086L1.92 2.11186L1 3.03986L2.151 4.66086L3.118 5.16786ZM10.672 9.98586C10.642 9.95526 10.6062 9.93095 10.5667 9.91436C10.5272 9.89776 10.4848 9.88921 10.442 9.88921C10.3992 9.88921 10.3568 9.89776 10.3173 9.91436C10.2778 9.93095 10.242 9.95526 10.212 9.98586L8.83 11.3759C8.79955 11.4062 8.7754 11.4423 8.75891 11.482C8.74243 11.5218 8.73395 11.5644 8.73395 11.6074C8.73395 11.6504 8.74243 11.693 8.75891 11.7327C8.7754 11.7724 8.79955 11.8085 8.83 11.8389L12.09 15.1169C12.2106 15.2383 12.3541 15.3348 12.5122 15.4006C12.6703 15.4663 12.8398 15.5002 13.011 15.5002C13.1822 15.5002 13.3517 15.4663 13.5098 15.4006C13.6679 15.3348 13.8114 15.2383 13.932 15.1169C14.442 14.6049 14.442 13.7769 13.932 13.2639L10.672 9.98586Z" fill="#86909C"></path></g></g></svg> <div data-v-41eefe39="" class="right"><span data-v-41eefe39="" class="descrip">
              开发工具
            </span></div></div></div><div data-v-41eefe39="" class="technology-box"><div data-v-41eefe39="" class="wrap"><svg data-v-41eefe39="" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="left"><g data-v-41eefe39="" id="&amp;#230;&amp;#161;&amp;#136;&amp;#228;&amp;#190;&amp;#139;"><path data-v-41eefe39="" id="Subtract" fill-rule="evenodd" clip-rule="evenodd" d="M1 2.5C1 1.94772 1.44772 1.5 2 1.5H14C14.5523 1.5 15 1.94772 15 2.5V14.5C15 15.0523 14.5523 15.5 14 15.5H2C1.44772 15.5 1 15.0523 1 14.5V2.5ZM3 5C3 4.72386 3.22386 4.5 3.5 4.5H12.5C12.7761 4.5 13 4.72386 13 5V5.3C13 5.57614 12.7761 5.8 12.5 5.8H3.5C3.22386 5.8 3 5.57614 3 5.3V5ZM3.5 7.5C3.22386 7.5 3 7.72386 3 8V8.3C3 8.57614 3.22386 8.8 3.5 8.8H4.5C4.77614 8.8 5 8.57614 5 8.3V8C5 7.72386 4.77614 7.5 4.5 7.5H3.5ZM7 8C7 7.72386 7.22386 7.5 7.5 7.5H8.5C8.77614 7.5 9 7.72386 9 8V8.3C9 8.57614 8.77614 8.8 8.5 8.8H7.5C7.22386 8.8 7 8.57614 7 8.3V8ZM11.5 7.5C11.2239 7.5 11 7.72386 11 8V8.3C11 8.57614 11.2239 8.8 11.5 8.8H12.5C12.7761 8.8 13 8.57614 13 8.3V8C13 7.72386 12.7761 7.5 12.5 7.5H11.5ZM3 11C3 10.7239 3.22386 10.5 3.5 10.5H7.5C7.77614 10.5 8 10.7239 8 11V11.3C8 11.5761 7.77614 11.8 7.5 11.8H3.5C3.22386 11.8 3 11.5761 3 11.3V11ZM10.5 10.5C10.2239 10.5 10 10.7239 10 11V11.3C10 11.5761 10.2239 11.8 10.5 11.8H12.5C12.7761 11.8 13 11.5761 13 11.3V11C13 10.7239 12.7761 10.5 12.5 10.5H10.5Z" fill="#86909C"></path></g></svg> <div data-v-41eefe39="" class="right"><span data-v-41eefe39="" class="descrip">
              代码人生
            </span></div></div></div><div data-v-41eefe39="" class="technology-box"><div data-v-41eefe39="" class="wrap"><svg data-v-41eefe39="" width="16" height="17" viewBox="0 0 16 17" fill="none" xmlns="http://www.w3.org/2000/svg" class="left"><g data-v-41eefe39="" id="&amp;#230;&amp;#161;&amp;#136;&amp;#228;&amp;#190;&amp;#139;"><path data-v-41eefe39="" id="Subtract" fill-rule="evenodd" clip-rule="evenodd" d="M14.9187 7.03385C15.0999 7.26744 14.9466 7.7 14.651 7.7H6.32905V4.5H5.02905V7.7H3.6C2.16406 7.7 1 6.53594 1 5.1C1 3.66406 2.16406 2.5 3.6 2.5H14.651C14.9466 2.5 15.0999 2.93257 14.9188 3.16616C14.5064 3.69779 14.2602 4.36959 14.2602 5.10001C14.2602 5.83043 14.5064 6.50222 14.9187 7.03385Z" fill="#86909C"></path><path data-v-41eefe39="" id="Subtract_2" fill-rule="evenodd" clip-rule="evenodd" d="M1.34902 14.5008C1.0534 14.5008 0.900077 14.0682 1.08126 13.8346C1.49363 13.303 1.7398 12.6312 1.7398 11.9008C1.7398 11.1704 1.49362 10.4986 1.08125 9.96694C0.900064 9.73335 1.05339 9.30078 1.34901 9.30078H12.4C13.8359 9.30078 15 10.4648 15 11.9008C15 13.3367 13.8359 14.5008 12.4 14.5008H1.34902Z" fill="#86909C"></path></g></svg> <div data-v-41eefe39="" class="right"><span data-v-41eefe39="" class="descrip">
              阅读
            </span></div></div></div></div> <!----></div><div class="byte-modal__footer"><div data-v-41eefe39="" class="left">跳过</div> <div data-v-41eefe39="" class="mid" style="display: none;">上一步</div> <div data-v-41eefe39="" class="right">
      至少选择1个分类
    </div></div></div></div></div><div data-transfer="true" class="risk-modal byte-modal v-transfer-dom" align-center=""><div class="byte-modal__mask" style="z-index: 1003; display: none;"></div><div class="byte-modal__wrapper" style="z-index: 1003; display: none;"><div class="byte-modal__content" style="width: 350px;"><!----><div class="byte-modal__body"><div class="risk-modal-inner"><div class="risk-modal-title">温馨提示</div> <div>当前操作失败，如有疑问，可点击申诉</div> <div class="risk-modal-footer"><button type="button" class="cancel-button risk-button byte-btn byte-btn--default byte-btn--large"><!----><!----><span><span>前往申诉</span></span></button> <button type="button" class="risk-button byte-btn byte-btn--primary byte-btn--large"><!----><!----><span><span>我知道了</span></span></button></div></div></div><!----></div></div></div><div data-v-2f646e9c="" data-v-935cc2c6="" data-transfer="true" class="collection-list-modal byte-modal v-transfer-dom"><div class="byte-modal__mask" style="z-index: 1004; display: none;"></div><div class="byte-modal__wrapper" style="z-index: 1004; display: none;"><div class="byte-modal__content" style="width: 520px;"><!----><div class="byte-modal__body"></div><!----></div></div></div><div data-v-50548bfc="" data-v-5b99e65b="" data-transfer="true" class="dislike-modal byte-modal v-transfer-dom"><div class="byte-modal__mask" style="z-index: 1009; display: none;"></div><div class="byte-modal__wrapper" style="z-index: 1009; display: none;"><div class="byte-modal__content" style="width: 500px;"><!----><div class="byte-modal__body"><div data-v-50548bfc="" class="container"><div data-v-50548bfc="" class="title">确定屏蔽该用户</div> <div data-v-50548bfc="" class="content"><span data-v-50548bfc="">
        屏蔽后，对方将不能关注你、与你产生任何互动，无法查看你的主页
      </span></div> <div data-v-50548bfc="" class="footer"><button data-v-50548bfc="" type="button" class="btn-cancel byte-btn byte-btn--default byte-btn--normal"><!----><!----><span>取消</span></button> <button data-v-50548bfc="" type="button" class="btn-confirm byte-btn byte-btn--primary byte-btn--normal"><!----><!----><span>
        确定
      </span></button></div></div></div><!----></div></div></div><link href="./ts和js的区别_files/34.7a01821.css" rel="stylesheet" type="text/css"><div class="byte-tooltip byte-tooltip--dark" style="display: none; position: absolute; max-width: none; will-change: transform; z-index: 1012; top: 0px; left: 0px; transform: translate3d(417px, 247px, 0px);" x-placement="bottom">
        AI 结果可能不准确，请谨慎使用
      <div x-arrow="" class="popper__arrow" style="left: 0px;"></div></div><div data-v-2f646e9c="" data-v-67be6428="" data-transfer="true" class="collection-list-modal byte-modal v-transfer-dom"><div class="byte-modal__mask" style="z-index: 1000; display: none;"></div><div class="byte-modal__wrapper" style="z-index: 1000; display: none;"><div class="byte-modal__content" style="width: 520px;"><!----><div class="byte-modal__body"></div><!----></div></div></div><div class="byte-tooltip byte-tooltip--dark" style="display: none; position: absolute; max-width: none; will-change: transform; z-index: 1001; top: 0px; left: 0px; transform: translate3d(182px, 2435px, 0px);" x-placement="top">
        沉浸阅读
      <div x-arrow="" class="popper__arrow" style="left: 0px;"></div></div></body><script>console.log('%c想要加入稀土掘金？投递简历：https://job.toutiao.com/s/idq6X5rb','color:#1e80ff;');</script></html>